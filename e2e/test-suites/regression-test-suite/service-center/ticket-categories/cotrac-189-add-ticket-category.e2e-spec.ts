import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { TicketCategoriesConstant } from '../../../../page-objects/pages/administration/service-center/ticket-categories/ticket-categories.constants';
import { TicketCategoriesHelper } from '../../../../page-objects/pages/administration/service-center/ticket-categories/ticket-categories.helper';
import { HomePageHelper } from '../../../../page-objects/pages/home-page/home-page.helper';
import { LoginPageHelper } from '../../../../page-objects/pages/login-page/login-page.helper';
import { TicketsHelper } from '../../../../page-objects/pages/service-center/tickets/tickets.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;
    const ticketName = `${TicketCategoriesConstant.elementNames.test}${PageHelper.getUniqueId()}`;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    // Jira References - COTRAC-2780
    it('Verify that the user can navigate to Manage Ticket Categories page - [22443452]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 09:11:34 GMT
        StepLogger.caseId = 22443452;

        StepLogger.stepId(1);
        StepLogger.step('Click Administration menu from the to the left menu panel');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Administration menu should get expanded');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(2);
        StepLogger.step('Click Service Center menu under Administrator section');
        await HomePageHelper.clickServiceCenterUnderAdministration();
        StepLogger.verification('Service Center menu should get expanded');
        await HomePageHelper.verifyOptionsUnderServiceCenter();

        StepLogger.stepId(3);
        StepLogger.step('Click on the Ticket Category');
        await HomePageHelper.clickTicketCategoriesUnderServiceCenterUnderAdministration();
        StepLogger.verification('Manage Ticket category page should be displayed.');
        await TicketCategoriesHelper.verifyTicketCategoriesPageDisplayed();
    });

    // Jira References - COTRAC-2781
    it('Verify that the user can access New Ticket Category page - [22443453]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 09:31:41 GMT
        StepLogger.caseId = 22443453;

        StepLogger.preCondition('Click on Administration menu');
        await HomePageHelper.clickAdministrationLink();

        StepLogger.stepId(1);
        StepLogger.step('Goto  Service Center menu under Administrator section');
        await HomePageHelper.clickServiceCenterUnderAdministration();
        StepLogger.verification('Service Center menu should get expanded');
        await HomePageHelper.verifyOptionsUnderServiceCenter();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Ticket Category');
        await HomePageHelper.clickTicketCategoriesUnderServiceCenterUnderAdministration();
        StepLogger.verification('Manage Ticket category page should be displayed.');
        await TicketCategoriesHelper.verifyTicketCategoriesPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "add ticket category"');
        await TicketCategoriesHelper.clickAddTicketCategory(true);
        StepLogger.verification('New ticket category page is displayed.');
        await TicketCategoriesHelper.verifyTicketCategoryDialog();
    });

    // Jira References - COTRAC-2786
    it('Verify the attributes available on New Ticket Category page - [22443457]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 09:52:35 GMT
        StepLogger.caseId = 22443457;

        StepLogger.preCondition('Click on Administration menu');
        await HomePageHelper.clickAdministrationLink();

        StepLogger.stepId(1);
        StepLogger.step('Goto  Service Center menu under Administrator section');
        await HomePageHelper.clickServiceCenterUnderAdministration();
        StepLogger.verification('Service Center menu should get expanded');
        await HomePageHelper.verifyOptionsUnderServiceCenter();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Ticket Category');
        await HomePageHelper.clickTicketCategoriesUnderServiceCenterUnderAdministration();
        StepLogger.verification('Manage Ticket category page should be displayed.');
        await TicketCategoriesHelper.verifyTicketCategoriesPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "add ticket category"');
        await TicketCategoriesHelper.clickAddTicketCategory(true);
        StepLogger.verification('New ticket category page is displayed.');
        await TicketCategoriesHelper.verifyTicketCategoryDialog();

        StepLogger.stepId(4);
        StepLogger.step('Verify new category page attributes.');
        StepLogger.verification(`Mandatory fields are:
            -NAME (any strings)
            -PARENT, user selects from the drop-down any active Parent
            -STATUS, ACTIVE or INACTIVE, user selects ACTIVE
            Non-mandatory fields are:
            -DESCRIPTION (any strings)`);
        await TicketCategoriesHelper.verifyTicketCategoryDialogAttributes();
    });

    // Jira References - COTRAC-2787
    it('Verify the parent drop down - [22443460]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 10:02:57 GMT
        StepLogger.caseId = 22443460;

        StepLogger.preCondition('Click on Administration menu');
        await HomePageHelper.clickAdministrationLink();

        StepLogger.stepId(1);
        StepLogger.step('Goto  Service Center menu under Administrator section');
        await HomePageHelper.clickServiceCenterUnderAdministration();
        StepLogger.verification('Service Center menu should get expanded');
        await HomePageHelper.verifyOptionsUnderServiceCenter();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Ticket Category');
        await HomePageHelper.clickTicketCategoriesUnderServiceCenterUnderAdministration();
        StepLogger.verification('Manage Ticket category page should be displayed.');
        await TicketCategoriesHelper.verifyTicketCategoriesPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "add ticket category"');
        await TicketCategoriesHelper.clickAddTicketCategory(true);
        StepLogger.verification('New ticket category page is displayed.');
        await TicketCategoriesHelper.verifyTicketCategoryDialog();

        StepLogger.stepId(4);
        StepLogger.step('Verify the parent field.');
        StepLogger.verification(`Parent field should have following values:
            1. Root category
            2. Sub category`);
        await TicketCategoriesHelper.verifyParentDropdownOptions(true);
    });

    // Jira References - COTRAC-2789
    it('To verify the functionality of cancel button on New ticket category window. - [22443470]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 10:07:46 GMT
        StepLogger.caseId = 22443470;

        StepLogger.preCondition('Click on Administration menu');
        await HomePageHelper.clickAdministrationLink();

        StepLogger.stepId(1);
        StepLogger.step('Goto  Service Center menu under Administrator section');
        await HomePageHelper.clickServiceCenterUnderAdministration();
        StepLogger.verification('Service Center menu should get expanded');
        await HomePageHelper.verifyOptionsUnderServiceCenter();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Ticket Category');
        await HomePageHelper.clickTicketCategoriesUnderServiceCenterUnderAdministration();
        StepLogger.verification('Manage Ticket category page should be displayed.');
        await TicketCategoriesHelper.verifyTicketCategoriesPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "add ticket category"');
        await TicketCategoriesHelper.clickAddTicketCategory(true);
        StepLogger.verification('New ticket category page is displayed.');
        await TicketCategoriesHelper.verifyTicketCategoryDialog();

        StepLogger.stepId(4);
        StepLogger.step('Click "cancel" button.');
        await TicketCategoriesHelper.clickCancelTicketCategoryDialog(true);
        StepLogger.verification('The form should be closed.');
        await TicketCategoriesHelper.verifyTicketCategoriesPageHidden();
    });

    // Jira References - COTRAC-2788
    it('Verify validation error message is displayed when user clicks save without entering data in mandatory field. - [22443458]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 10:17:15 GMT
        StepLogger.caseId = 22443458;

        StepLogger.preCondition('Click on Administration menu');
        await HomePageHelper.clickAdministrationLink();

        StepLogger.stepId(1);
        StepLogger.step('Goto  Service Center menu under Administrator section');
        await HomePageHelper.clickServiceCenterUnderAdministration();
        StepLogger.verification('Service Center menu should get expanded');
        await HomePageHelper.verifyOptionsUnderServiceCenter();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Ticket Category');
        await HomePageHelper.clickTicketCategoriesUnderServiceCenterUnderAdministration();
        StepLogger.verification('Manage Ticket category page should be displayed.');
        await TicketCategoriesHelper.verifyTicketCategoriesPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "add ticket category"');
        await TicketCategoriesHelper.clickAddTicketCategory(true);
        StepLogger.verification('New ticket category page is displayed.');
        await TicketCategoriesHelper.verifyTicketCategoryDialog();

        StepLogger.stepId(4);
        StepLogger.step('Click save without entering data in any field.');
        await TicketCategoriesHelper.clickSaveTicketCategoryDialog(true);
        StepLogger.verification('Validation Error message should be displayed.');
        await TicketCategoriesHelper.verifyEnterNameDialog();
    });

    // Jira References - COTRAC-2782
    it('Verify that the user is able create an active ticket category with Root category as parent. - [22443463]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 10:26:57 GMT
        StepLogger.caseId = 22443463;
        const categoryName = `${TicketCategoriesConstant.elementNames.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Navigate to Ticket Categories and click Add');
        await TicketCategoriesHelper.navigateToTicketCategoriesClickAddCategory();

        StepLogger.stepId(1);
        StepLogger.step('Enter name.');
        await TicketCategoriesHelper.enterName(categoryName, true);
        StepLogger.verification('Name should be entered.');
        await TicketCategoriesHelper.verifyName(categoryName);

        StepLogger.stepId(2);
        StepLogger.step('Select "Root category" as Parent.');
        await TicketCategoriesHelper.selectParentOption(TicketCategoriesConstant.parentDropdown.rootCategory);
        StepLogger.verification('It should be selected.');
        await TicketCategoriesHelper.verifyParentSelectedOption(TicketCategoriesConstant.parentDropdown.rootCategory);

        StepLogger.stepId(3);
        StepLogger.step('Select "Active" status.');
        await TicketCategoriesHelper.selectStatusOption(TicketCategoriesConstant.statusDropdown.active);
        StepLogger.verification('It should be selected.');
        await TicketCategoriesHelper.verifyStatusSelectedOption(TicketCategoriesConstant.statusDropdown.active);

        StepLogger.stepId(4);
        StepLogger.step('Click Save.');
        await TicketCategoriesHelper.clickSaveTicketCategoryDialog();
        StepLogger.verification('Ticket category should be saved.');
        await TicketCategoriesHelper.verifyCreatedCategory(categoryName, true);

        StepLogger.postCondition('Delete category');
        await TicketCategoriesHelper.deleteCategory(categoryName);
    });

    // Jira References - COTRAC-2783
    it('Verify that the user is able create an active ticket category with Sub category as parent. - [22443464]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 11:32:44 GMT
        StepLogger.caseId = 22443464;
        const categoryName = `${TicketCategoriesConstant.elementNames.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Navigate to Ticket Categories and click Add');
        await TicketCategoriesHelper.navigateToTicketCategoriesClickAddCategory();

        StepLogger.stepId(1);
        StepLogger.step('Enter name.');
        await TicketCategoriesHelper.enterName(categoryName, true);
        StepLogger.verification('Name should be entered.');
        await TicketCategoriesHelper.verifyName(categoryName);

        StepLogger.stepId(2);
        StepLogger.step('Select "Sub category" as Parent.');
        await TicketCategoriesHelper.selectParentOption(TicketCategoriesConstant.parentDropdown.subCategory);
        StepLogger.verification('It should be selected.');
        await TicketCategoriesHelper.verifyParentSelectedOption(TicketCategoriesConstant.parentDropdown.subCategory);

        StepLogger.stepId(3);
        StepLogger.step('Click search button besides category field.');
        await TicketCategoriesHelper.clickSearchTicketCategoryDialog();
        StepLogger.verification('Select category dialog box should be displayed.');
        await TicketCategoriesHelper.verifySelectCategoryDialog();

        StepLogger.stepId(4);
        StepLogger.step('Select a category and Click select.');
        const category = await TicketCategoriesHelper.selectCategoryDialogAndClickSelect();
        StepLogger.verification('Category should be selected.');
        await TicketCategoriesHelper.verifySelectedCategoryInDialog(category, true);

        StepLogger.stepId(5);
        StepLogger.step('Select "Active" status.');
        await TicketCategoriesHelper.selectStatusOption(TicketCategoriesConstant.statusDropdown.active);
        StepLogger.verification('It should be selected.');
        await TicketCategoriesHelper.verifyStatusSelectedOption(TicketCategoriesConstant.statusDropdown.active);

        StepLogger.stepId(6);
        StepLogger.step('Click Save.');
        await TicketCategoriesHelper.clickSaveTicketCategoryDialog();
        StepLogger.verification('Ticket category should be saved.');
        await TicketCategoriesHelper.verifyCreatedCategory(categoryName, true, true, category);

        StepLogger.postCondition('Delete category');
        await TicketCategoriesHelper.deleteCategory(categoryName);
    });

    // Jira References - COTRAC-2784
    it('Verify that the user is able create an in-active ticket category with Root category as parent. - [22443465]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 12:53:48 GMT
        StepLogger.caseId = 22443465;
        const categoryName = `${TicketCategoriesConstant.elementNames.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Navigate to Ticket Categories and click Add');
        await TicketCategoriesHelper.navigateToTicketCategoriesClickAddCategory();

        StepLogger.stepId(1);
        StepLogger.step('Enter name.');
        await TicketCategoriesHelper.enterName(categoryName, true);
        StepLogger.verification('Name should be entered.');
        await TicketCategoriesHelper.verifyName(categoryName);

        StepLogger.stepId(2);
        StepLogger.step('Select "Root category" as Parent.');
        await TicketCategoriesHelper.selectParentOption(TicketCategoriesConstant.parentDropdown.rootCategory);
        StepLogger.verification('It should be selected.');
        await TicketCategoriesHelper.verifyParentSelectedOption(TicketCategoriesConstant.parentDropdown.rootCategory);

        StepLogger.stepId(3);
        StepLogger.step('Select "Inactive" status.');
        await TicketCategoriesHelper.selectStatusOption(TicketCategoriesConstant.statusDropdown.inactive);
        StepLogger.verification('It should be selected.');
        await TicketCategoriesHelper.verifyStatusSelectedOption(TicketCategoriesConstant.statusDropdown.inactive);

        StepLogger.stepId(4);
        StepLogger.step('Click Save.');
        await TicketCategoriesHelper.clickSaveTicketCategoryDialog();
        StepLogger.verification('Ticket category should be saved.');
        await TicketCategoriesHelper.verifyCreatedCategory(categoryName, true);

        StepLogger.postCondition('Delete category');
        await TicketCategoriesHelper.deleteCategory(categoryName);
    });

    // Jira References - COTRAC-2790
    it('Verify that the user is able create an in-active ticket category with Sub category as parent. - [22443466]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 12:57:47 GMT
        StepLogger.caseId = 22443466;
        const categoryName = `${TicketCategoriesConstant.elementNames.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Navigate to Ticket Categories and click Add');
        await TicketCategoriesHelper.navigateToTicketCategoriesClickAddCategory();

        StepLogger.stepId(1);
        StepLogger.step('Enter name.');
        await TicketCategoriesHelper.enterName(categoryName, true);
        StepLogger.verification('Name should be entered.');
        await TicketCategoriesHelper.verifyName(categoryName);

        StepLogger.stepId(2);
        StepLogger.step('Select "Sub category" as Parent.');
        await TicketCategoriesHelper.selectParentOption(TicketCategoriesConstant.parentDropdown.subCategory);
        StepLogger.verification('It should be selected.');
        await TicketCategoriesHelper.verifyParentSelectedOption(TicketCategoriesConstant.parentDropdown.subCategory);

        StepLogger.stepId(3);
        StepLogger.step('Click search button besides category field.');
        await TicketCategoriesHelper.clickSearchTicketCategoryDialog();
        StepLogger.verification('Select category dialog box should be displayed.');
        await TicketCategoriesHelper.verifySelectCategoryDialog();

        StepLogger.stepId(4);
        StepLogger.step('Select a category and Click select.');
        const category = await TicketCategoriesHelper.selectCategoryDialogAndClickSelect();
        StepLogger.verification('Category should be selected.');
        await TicketCategoriesHelper.verifySelectedCategoryInDialog(category, true);

        StepLogger.stepId(5);
        StepLogger.step('Select "Inactive" status.');
        await TicketCategoriesHelper.selectStatusOption(TicketCategoriesConstant.statusDropdown.inactive);
        StepLogger.verification('It should be selected.');
        await TicketCategoriesHelper.verifyStatusSelectedOption(TicketCategoriesConstant.statusDropdown.inactive);

        StepLogger.stepId(6);
        StepLogger.step('Click Save.');
        await TicketCategoriesHelper.clickSaveTicketCategoryDialog();
        StepLogger.verification('Ticket category should be saved.');
        await TicketCategoriesHelper.verifyCreatedCategory(categoryName, true, true, category);

        StepLogger.postCondition('Delete category');
        await TicketCategoriesHelper.deleteCategory(categoryName);
    });

    // Jira References - COTRAC-2791
    it('Verify that the user can create a ticket category by entering data in description field. - [22443467]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 13:01:51 GMT
        StepLogger.caseId = 22443467;

        StepLogger.preCondition('Navigate to Ticket Categories and click Add');
        await TicketCategoriesHelper.navigateToTicketCategoriesClickAddCategory();

        StepLogger.stepId(1);
        StepLogger.step('Enter name.');
        await TicketCategoriesHelper.enterName(ticketName, true);
        StepLogger.verification('Name should be entered.');
        await TicketCategoriesHelper.verifyName(ticketName);

        StepLogger.stepId(2);
        StepLogger.step('Select "Root category" as Parent.');
        await TicketCategoriesHelper.selectParentOption(TicketCategoriesConstant.parentDropdown.rootCategory);
        StepLogger.verification('It should be selected.');
        await TicketCategoriesHelper.verifyParentSelectedOption(TicketCategoriesConstant.parentDropdown.rootCategory);

        StepLogger.stepId(3);
        StepLogger.step('Select "Active" status.');
        await TicketCategoriesHelper.selectStatusOption(TicketCategoriesConstant.statusDropdown.active);
        StepLogger.verification('It should be selected.');
        await TicketCategoriesHelper.verifyStatusSelectedOption(TicketCategoriesConstant.statusDropdown.active);

        StepLogger.stepId(4);
        StepLogger.step('Enter description.');
        await TicketCategoriesHelper.enterDescription(ticketName);
        StepLogger.verification('Description should be entered.');
        await TicketCategoriesHelper.verifyDescription(ticketName);

        StepLogger.stepId(5);
        StepLogger.step('Click "save"');
        await TicketCategoriesHelper.clickSaveTicketCategoryDialog();
        StepLogger.verification('Ticket category should be saved.');
        await TicketCategoriesHelper.verifyCreatedCategory(ticketName, true);
    });

    // Jira References - COTRAC-2785
    it('To Verify that the user is able to select the ticket category created while creating a Ticket. - [22443806]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 13:06:33 GMT
        StepLogger.caseId = 22443806;

        StepLogger.preCondition('Click Service Center Link');
        await HomePageHelper.clickServiceCenterLink();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Service Center menu option is available in main menu.');
        StepLogger.verification('It should be displayed.');
        await HomePageHelper.verifyOptionsUnderServiceCenterMenu();

        StepLogger.stepId(2);
        StepLogger.step('Go to Tickets.');
        await HomePageHelper.clickTicketsUnderServiceCenter();
        StepLogger.verification('Service tickets should be displayed.');
        await TicketsHelper.verifyTicketsPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "Add ticket"');
        await TicketsHelper.clickAddTicket();
        StepLogger.verification('New ticket page should be displayed.');
        await TicketsHelper.verifyNewTicketPage();

        StepLogger.stepId(4);
        StepLogger.step('Go to Category field and select search button besides category field.');
        await TicketsHelper.clickSearchCategory();
        StepLogger.verification('Select category Dialog should be displayed.');
        await TicketsHelper.verifySelectCategoryDialog();

        StepLogger.stepId(5);
        StepLogger.step('Select the category created in precondition test case and click "select".');
        await TicketsHelper.selectCategoryAndClickSelect(ticketName);
        StepLogger.verification('It should be selected.');
        await TicketsHelper.verifySelectedCategory(ticketName);

        StepLogger.postCondition('Delete category');
        await TicketsHelper.navigateToTicketCategories();
        await TicketCategoriesHelper.deleteCategory(ticketName);
    });
});
