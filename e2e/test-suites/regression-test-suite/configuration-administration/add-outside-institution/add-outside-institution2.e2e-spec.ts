import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { OutsideInstitutionHelper } from '../../../../page-objects/pages/administration/configuration/outside-institutions/outside-institutions.helper';
import { HomePageHelper } from '../../../../page-objects/pages/home-page/home-page.helper';
import { HomePage1Helper } from '../../../../page-objects/pages/home-page/home-page1.helper';
import { LoginPageHelper } from '../../../../page-objects/pages/login-page/login-page.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    it('To verify user is able to save new outside institution - [22884611]', async () => {
        // Auto generated by aurea-automation - util on Wed, 10 Apr 2019 23:01:41 GMT

        StepLogger.caseId = 22884611;
        const value = await PageHelper.getUniqueId();

        StepLogger.stepId(1);
        StepLogger.step('Go to "Administration - > Configuration " displayed under administration');
        await HomePageHelper.clickAdministrationLink();
        await HomePageHelper.clickConfigurationUnderAdministration();
        StepLogger.verification('Items available under Configuration should be displayed');
        await HomePageHelper.verifyOptionsUnderConfiguration();

        StepLogger.stepId(2);
        StepLogger.step('Click Outside Institutions');
        await HomePage1Helper.clickOutsideInstitutionsUnderConfiguration();
        StepLogger.verification('Manage Outside Institutions page is displayed');
        await OutsideInstitutionHelper.verifyManageOutsideInstitutionPage();

        StepLogger.stepId(3);
        StepLogger.step('Click Add Outside Institution button');
        await OutsideInstitutionHelper.clickOnAddOutsideInstitutionButton();
        StepLogger.verification('New Outside Institution window is displayed');
        await OutsideInstitutionHelper.verifyNewOutsideInstitutionWindow();

        StepLogger.stepId(4);
        StepLogger.step('Fill in the Name for outside institution');
        await OutsideInstitutionHelper.enterName(value);
        StepLogger.verification('User is able to fill in outside institution');
        await OutsideInstitutionHelper.verifyEnteredName(value);

        StepLogger.stepId(5);
        StepLogger.step('Click Save button');
        await OutsideInstitutionHelper.clickOnSaveButton();
        StepLogger.verification('Window is closed and outside institution is saved');
        await OutsideInstitutionHelper.verifyNewOutsideInstitutionWindowClosed();
    });

    it('To verify Cancel button functionality on New Outside Institution window - [22884612]', async () => {
        // Auto generated by aurea-automation - util on Thu, 11 Apr 2019 04:56:42 GMT

        StepLogger.caseId = 22884612;
        const value = await PageHelper.getUniqueId();
        StepLogger.stepId(1);
        StepLogger.step('Go to "Administration - > Configuration " displayed under administration');
        await HomePageHelper.clickAdministrationLink();
        await HomePageHelper.clickConfigurationUnderAdministration();
        StepLogger.verification('Items available under Configuration should be displayed');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(2);
        StepLogger.step('Click Outside Institutions');
        await HomePage1Helper.clickOutsideInstitutionsUnderConfiguration();
        StepLogger.verification('Manage Outside Institutions page is displayed');
        await OutsideInstitutionHelper.verifyManageOutsideInstitutionPage();

        StepLogger.stepId(3);
        StepLogger.step('Click Add Outside Institution button');
        await OutsideInstitutionHelper.clickOnAddOutsideInstitutionButton();
        StepLogger.verification('New Outside Institution window is displayed');
        await OutsideInstitutionHelper.verifyNewOutsideInstitutionWindow();

        StepLogger.stepId(4);
        StepLogger.step('Fill in Name of outside institution');
        await OutsideInstitutionHelper.enterName(value);
        StepLogger.verification('User is able to enter Name');
        await OutsideInstitutionHelper.verifyEnteredName(value);

        StepLogger.stepId(5);
        StepLogger.step('Click Cancel button');
        await OutsideInstitutionHelper.clickOnCancelButton();
        StepLogger.verification('Window is closed and Institution is not saved');
        await OutsideInstitutionHelper.verifyNewOutsideInstitutionWindowClosed();
    });

    it('To verify list of institutions on Manage Outside Institutions page is refreshed when clicked on Refresh button - [22893523]', async () => {
        // Auto generated by aurea-automation - util on Thu, 11 Apr 2019 05:56:43 GMT

        StepLogger.caseId = 22893523;
        StepLogger.stepId(1);
        StepLogger.step('Go to "Administration - > Configuration " displayed under administration');
        await HomePageHelper.clickAdministrationLink();
        await HomePageHelper.clickConfigurationUnderAdministration();
        StepLogger.verification('Items available under Configuration should be displayed');
        await HomePageHelper.verifyOptionsUnderConfiguration();

        StepLogger.stepId(2);
        StepLogger.step('Click Outside Institutions');
        await HomePage1Helper.clickOutsideInstitutionsUnderConfiguration();
        StepLogger.verification('Manage Outside Institutions page is displayed');
        await OutsideInstitutionHelper.verifyManageOutsideInstitutionPage();

        StepLogger.stepId(3);
        StepLogger.step('Click Refresh button');
        await OutsideInstitutionHelper.clickOnRefreshButton();
        StepLogger.verification('List of institutions is refreshed');
        await OutsideInstitutionHelper.verifyManageOutsideInstitutionPage();
    });
});
