import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { RelationshipsConstants } from '../../../../page-objects/pages/administration/configuration/relationships/relationships.constants';
import { RelationshipsHelper } from '../../../../page-objects/pages/administration/configuration/relationships/relationships.helper';
import { HomePageHelper } from '../../../../page-objects/pages/home-page/home-page.helper';
import { HomePage1Helper } from '../../../../page-objects/pages/home-page/home-page1.helper';
import { LoginPageHelper } from '../../../../page-objects/pages/login-page/login-page.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    it('To verify user is able to save Active relationship with Primary Indicator value "No" - [22822293]', async () => {
        // Auto generated by aurea-automation - util on Tue, 09 Apr 2019 06:08:14 GMT

        StepLogger.caseId = 22822293;
        const value = await PageHelper.getUniqueId();
        const no = RelationshipsConstants.piNo;
        const active = RelationshipsConstants.activeStatus;

        StepLogger.preCondition('Execute C22777261 to navigate to "New Relationship" window');
        await RelationshipsHelper.navigateToAddRelationshipPage();

        StepLogger.stepId(1);
        StepLogger.step('Enter "code"');
        await RelationshipsHelper.enterCode(value);
        StepLogger.verification('Value should be entered in code field');
        await RelationshipsHelper.verifyEnteredCode(value);

        StepLogger.stepId(2);
        StepLogger.step('Enter "Description"');
        await RelationshipsHelper.enterDescription(value);
        StepLogger.verification('Value should be entered in description field.');
        await RelationshipsHelper.verifyEnteredDescription(value);

        StepLogger.stepId(3);
        StepLogger.step('Select "No" from drop-down for Primary Indicator field');
        await RelationshipsHelper.selectPIFieldFromDropDown(no);
        StepLogger.verification('User is able to select No for Primary indicator');
        await RelationshipsHelper.verifyPISelected(no);

        StepLogger.stepId(4);
        StepLogger.step('Select Active from status drop-down,fill in Sort Order and Click Save button');
        await RelationshipsHelper.selectAStatusFromDropDown(active);
        await RelationshipsHelper.enterSortOrder(value);
        await RelationshipsHelper.clickOnSaveButton();
        StepLogger.verification('Window is closed and Relationship is saved successfully');
        await RelationshipsHelper.verifyNewRelationshipScreenclosed();
    });

    it('To verify user is able to save Inactive relationship with Primary Indicator value "Yes" - [22823218]', async () => {
        // Auto generated by aurea-automation - util on Tue, 09 Apr 2019 07:18:14 GMT

        StepLogger.caseId = 22823218;
        const value = await PageHelper.getUniqueId();
        const yes = RelationshipsConstants.piYes;
        const active = RelationshipsConstants.activeStatus;

        StepLogger.preCondition('Execute C22777261 to navigate to "New Relationship" window');
        await RelationshipsHelper.navigateToAddRelationshipPage();

        StepLogger.stepId(1);
        StepLogger.step('Enter "code"');
        await RelationshipsHelper.enterCode(value);
        StepLogger.verification('Value should be entered in code field');
        await RelationshipsHelper.verifyEnteredCode(value);

        StepLogger.stepId(2);
        StepLogger.step('Enter "Description"');
        await RelationshipsHelper.enterDescription(value);
        StepLogger.verification('Value should be entered in description field.');
        await RelationshipsHelper.verifyEnteredDescription(value);

        StepLogger.stepId(3);
        StepLogger.step('Select "Yes" from drop-down for Primary Indicator field');
        await RelationshipsHelper.selectPIFieldFromDropDown(yes);
        StepLogger.verification('User is able to select Yes for Primary indicator');
        await RelationshipsHelper.verifyPISelected(yes);

        StepLogger.stepId(4);
        StepLogger.step('Select Inactive from status drop-down,fill in Sort Order and Click Save button');
        await RelationshipsHelper.selectAStatusFromDropDown(active);
        await RelationshipsHelper.enterSortOrder(value);
        await RelationshipsHelper.clickOnSaveButton();
        StepLogger.verification('Window is closed and Relationship is saved successfully');
        await RelationshipsHelper.verifyNewRelationshipScreenclosed();
    });

    it('To verify user is able to save Inactive relationship with Primary Indicator value "No" - [22823219]', async () => {
        // Auto generated by aurea-automation - util on Tue, 09 Apr 2019 07:57:09 GMT

        StepLogger.caseId = 22823219;
        const value = await PageHelper.getUniqueId();
        const inactive = RelationshipsConstants.inactiveStatus;
        const no = RelationshipsConstants.piNo;

        StepLogger.preCondition('Execute C22777261 to navigate to "New Relationship" window');
        await RelationshipsHelper.navigateToAddRelationshipPage();

        StepLogger.stepId(1);
        StepLogger.step('Enter "code"');
        await RelationshipsHelper.enterCode(value);
        StepLogger.verification('Value should be entered in code field');
        await RelationshipsHelper.verifyEnteredCode(value);

        StepLogger.stepId(2);
        StepLogger.step('Enter "Description"');
        await RelationshipsHelper.enterDescription(value);
        StepLogger.verification('Value should be entered in description field.');
        await RelationshipsHelper.verifyEnteredDescription(value);

        StepLogger.stepId(3);
        StepLogger.step('Select "No" from drop-down for Primary Indicator field');
        await RelationshipsHelper.selectPIFieldFromDropDown(no);
        StepLogger.verification('User is able to select No for Primary indicator');
        await RelationshipsHelper.verifyPISelected(no);

        StepLogger.stepId(4);
        StepLogger.step('Select Inactive from status drop-down,fill in Sort Order and Click Save button');
        await RelationshipsHelper.selectAStatusFromDropDown(inactive);
        await RelationshipsHelper.enterSortOrder(value);
        await RelationshipsHelper.clickOnSaveButton();
        StepLogger.verification('Window is closed and Relationship is saved successfully');
        await RelationshipsHelper.verifyNewRelationshipScreenclosed();
    });

    it('To verify Cancel button functionality on New Relationship window - [22823220]', async () => {
        // Auto generated by aurea-automation - util on Tue, 09 Apr 2019 08:35:16 GMT

        StepLogger.caseId = 22823220;
        const value = await PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22777261 to navigate to "New Relationship" window');
        await RelationshipsHelper.navigateToAddRelationshipPage();

        StepLogger.stepId(1);
        StepLogger.step('Enter "code"');
        await RelationshipsHelper.enterCode(value);
        StepLogger.verification('Value should be entered in code field');
        await RelationshipsHelper.verifyEnteredCode(value);

        StepLogger.stepId(2);
        StepLogger.step('Enter "Description"');
        await RelationshipsHelper.enterDescription(value);
        StepLogger.verification('Value should be entered in description field.');
        await RelationshipsHelper.verifyEnteredDescription(value);

        StepLogger.stepId(3);
        StepLogger.step('Click Cancel button');
        await RelationshipsHelper.clickOnCancelButton();
        StepLogger.verification('Window should close and no relationship should be created');
        await RelationshipsHelper.verifyNewRelationshipScreenclosed();
    });

    it('To verify list of relationships is refreshed on Manage Relationships page when clicked on refresh button - [22893533]', async () => {
        // Auto generated by aurea-automation - util on Tue, 09 Apr 2019 11:21:38 GMT

        StepLogger.caseId = 22893533;
        StepLogger.stepId(1);
        StepLogger.step('Go to "Administration - > Configuration " displayed under administration.');
        await HomePageHelper.clickAdministrationLink();
        await HomePageHelper.clickConfigurationUnderAdministration();
        StepLogger.verification('Items available under Configuration should be displayed');
        await HomePageHelper.verifyOptionsUnderConfiguration();

        StepLogger.stepId(2);
        StepLogger.step('Click Relationships');
        await HomePage1Helper.clickRelationshipsUnderConfiguration();
        StepLogger.verification('Manage Relationships page is displayed in right pane');
        await RelationshipsHelper.verifyRelationshipsManagePageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click Refresh button');
        await RelationshipsHelper.clickOnRefreshButton();
        StepLogger.verification('List of relationships on Manage Relationships page is refreshed');
        await RelationshipsHelper.verifyRelationshipsManagePageDisplayed();
    });
});
