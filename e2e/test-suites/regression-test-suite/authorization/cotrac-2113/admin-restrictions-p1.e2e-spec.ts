import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { CustomItemTypesHelper } from '../../../../page-objects/pages/administration/configuration/custom-item-types/custom-item-types.helper';
import { CustomItemHelper } from '../../../../page-objects/pages/administration/configuration/custom-item/custom-item.helper';
import { OutsideInstitutionHelper } from '../../../../page-objects/pages/administration/configuration/outside-institutions/outside-institutions.helper';
import { BranchesHelper } from '../../../../page-objects/pages/administration/organization/branches/branches.helper';
import { UsersHelper } from '../../../../page-objects/pages/administration/security/users/users.helper';
import { UsersPage } from '../../../../page-objects/pages/administration/security/users/users.po';
import { CaseAreasHelper } from '../../../../page-objects/pages/administration/service-center/case-areas-page/case-areas.helper';
import { ApplicationStatusHelper } from '../../../../page-objects/pages/administration/system/application-status/application-status.helper';
import { ContactPageHelper } from '../../../../page-objects/pages/contact-page/contact-page.helper';
import { ContactPage } from '../../../../page-objects/pages/contact-page/contact-page.po';
import { HomePageConstant } from '../../../../page-objects/pages/home-page/home-page.constants';
import { HomePageHelper } from '../../../../page-objects/pages/home-page/home-page.helper';
import { HomePage } from '../../../../page-objects/pages/home-page/home-page.po';
import { HomePage1Helper } from '../../../../page-objects/pages/home-page/home-page1.helper';
import { LoginPageHelper } from '../../../../page-objects/pages/login-page/login-page.helper';
import { ManageCompensationPageHelper } from '../../../../page-objects/pages/manage-compensation-page/manage-compensation-page.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    const searchText = HomePageConstant.testData.alec;
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    // Jira References - COTRAC-2113
    it('To verify that non-admin user has access to Branches - [22981079]', async () => {
        // Auto generated by aurea-automation - util on Tue, 16 Apr 2019 12:43:58 GMT

        StepLogger.caseId = 22981079;
        StepLogger.stepId(1);
        StepLogger.step('Login to the Application with non-admin user to which permissions are granted in Pre condition tc. [Test_ros_001/Test12345]');
        StepLogger.verification('User should be able to login.');
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click Administration from left pane');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Sub options under Administration are displayed');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(3);
        StepLogger.step('Navigate Organization -> Branches');
        await HomePage1Helper.navigateOrganizationBranches();
        StepLogger.verification('Manage Branches page is displayed in right pane');
        await BranchesHelper.verifyManageBranchesPageDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Click Add Branch button');
        await BranchesHelper.clickOnAddBranch();
        StepLogger.verification('New Branch window is displayed');
        await BranchesHelper.verifyNewBranchScreenDisplayed();
    });

    // Jira References - COTRAC-2113
    it('To verify that non-admin user has access to Custom Items - [22981090]', async () => {
        // Auto generated by aurea-automation - util on Tue, 16 Apr 2019 12:43:59 GMT

        StepLogger.caseId = 22981090;
        StepLogger.stepId(1);
        StepLogger.step('Login to the Application with non-admin user to which permissions are granted in Pre condition tc. [Test_ros_001/Test12345]');
        StepLogger.verification('User should be able to login.');
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click Administration from left pane');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Sub options under Administration are displayed');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(3);
        StepLogger.step('Navigate Configuration -> Custom Items');
        await HomePage1Helper.navigateConfigurationCustomItems();
        StepLogger.verification('Manage Custom Items page is displayed');
        await CustomItemHelper.verifyCustomItemPageDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Click "Add Custom Item" button');
        await CustomItemHelper.clickOnAddItem();
        StepLogger.verification('"New Item" pop-up is displayed');
        await CustomItemHelper.verifyNewItemScreenDisplayed();
    });

    // Jira References - COTRAC-2113
    it('To verify that non-admin user has access to Application Status - [22981072]', async () => {
        // Auto generated by aurea-automation - util on Tue, 16 Apr 2019 12:43:59 GMT

        StepLogger.caseId = 22981072;
        StepLogger.stepId(1);
        StepLogger.step('Login to the Application with non-admin user to which permissions are granted in Pre condition tc. [Test_ros_001/Test12345]');
        StepLogger.verification('User should be able to login.');
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click Administration from left pane');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Sub options under Administration are displayed');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(3);
        StepLogger.step('Navigate System -> Application Status');
        await HomePage1Helper.navigateSystemApplicationStatus();
        StepLogger.verification('Application Status page is displayed in right pane');
        await ApplicationStatusHelper.verifyApplicationStatusPageDisplayed();
    });

    // Jira References - COTRAC-2113
    it('To verify that non-admin user has access to Case Areas - [22981080]', async () => {
        // Auto generated by aurea-automation - util on Tue, 16 Apr 2019 12:43:59 GMT

        StepLogger.caseId = 22981080;
        StepLogger.stepId(1);
        StepLogger.step('Login to the Application with non-admin user to which permissions are granted in Pre condition tc. [Test_ros_001/Test12345]');
        StepLogger.verification('User should be able to login.');
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click Administration from left pane');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Sub options under Administration are displayed');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(3);
        StepLogger.step('Navigate Service Center -> Case Areas');
        await HomePage1Helper.navigateServiceCenterCaseAreas();
        StepLogger.verification('Manage Case Areas page is displayed');
        await CaseAreasHelper.verifyCaseAreasPageDisplayed();
    });

    // Jira References - COTRAC-2113
    it('To verify that non-admin user has access to Compensation - [22981081]', async () => {
        // Auto generated by aurea-automation - util on Tue, 16 Apr 2019 12:43:59 GMT

        StepLogger.caseId = 22981081;
        StepLogger.stepId(1);
        StepLogger.step('Login to the Application with non-admin user to which permissions are granted in Pre condition tc. [Test_ros_001/Test12345]');
        StepLogger.verification('User should be able to login.');
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click Administration from left pane');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Sub options under Administration are displayed');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(3);
        StepLogger.step('Click Compensation');
        await HomePage1Helper.clickCompensationAdministration();
        StepLogger.verification('Manage Compensation page is displayed in right pane');
        await ManageCompensationPageHelper.verifyManageCompensationPageDisplayed();
    });

    // Jira References - COTRAC-2113
    it('To verify that non-admin user has access to Corrections - [22981082]', async () => {
        // Auto generated by aurea-automation - util on Tue, 16 Apr 2019 12:43:59 GMT

        StepLogger.caseId = 22981082;
        StepLogger.stepId(1);
        StepLogger.step('Login to the Application with non-admin user to which permissions are granted in Pre condition tc. [Test_ros_001/Test12345]');
        StepLogger.verification('User should be able to login.');
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click Search icon at top right corner of page beside the username of logged in user');
        await HomePageHelper.clickSearchButton();
        StepLogger.verification('Search box is displayed');
        await HomePageHelper.verifySearchBox();

        StepLogger.stepId(3);
        StepLogger.step('Search for a contact');
        await HomePageHelper.enterSearchTextAndClicksearch(searchText);
        StepLogger.verification('Search result/results should be displayed in contact');
        await HomePageHelper.verifyContactCardIsDisplayed(searchText);

        StepLogger.stepId(4);
        StepLogger.step('Click on the contact card in search results');
        await HomePageHelper.clickOnSearchResult(searchText);
        StepLogger.verification('New tab with details of contact should be displayed');
        await ContactPageHelper.verifyOverviewIsDisplayed(false);

        StepLogger.stepId(5);
        StepLogger.step('Hover over the text "Admin" on top left corner of page besides the 3 dots icon');
        await ContactPageHelper.closeSnapshotModal();
        await ContactPage.header.admin.hoverOver();
        StepLogger.verification('"Corrections Utility" is displayed as shown below:');
        await ContactPage.header.correctionsUtility.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-2113
    it('To verify that non-admin user has access to Custom Item Types - [22981083]', async () => {
        // Auto generated by aurea-automation - util on Tue, 16 Apr 2019 12:44:00 GMT

        StepLogger.caseId = 22981083;
        StepLogger.stepId(1);
        StepLogger.step('Login to the Application with non-admin user to which permissions are granted in Pre condition tc. [Test_ros_001/Test12345]');
        StepLogger.verification('User should be able to login.');
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click Administration from left pane');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Sub options under Administration are displayed');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(3);
        StepLogger.step('Navigate Configuration -> Custom Item Types');
        await HomePage1Helper.navigateConfigurationCustomItemTypes();
        StepLogger.verification('Manage Custom Item Types page is displayed');
        await CustomItemTypesHelper.verifyCustomItemTypesPageDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Click "Add Custom Item Type" button');
        await CustomItemTypesHelper.clickOnAddItemTypes();
        StepLogger.verification('"New Item Type" pop-up is displayed');
        await CustomItemTypesHelper.verifyNewItemTypesScreenDisplayed();
    });

    // Jira References - COTRAC-2113
    it('To verify that non-admin user has access to Add Institution - [22981071]', async () => {
        // Auto generated by aurea-automation - util on Tue, 16 Apr 2019 12:44:00 GMT

        StepLogger.caseId = 22981071;
        StepLogger.stepId(1);
        StepLogger.step('Login to the Application with non-admin user to which permissions are granted in Pre condition tc. [Test_ros_001/Test12345]');
        StepLogger.verification('User should be able to login.');
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click Administration from left pane');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Sub options under Administration are displayed');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(3);
        StepLogger.step('Navigate Configuration -> Outside Institutions');
        await HomePage1Helper.navigateConfigurationOutsideInstitutions();
        StepLogger.verification('Manage Outside Institutions page is displayed');
        await OutsideInstitutionHelper.verifyManageOutsideInstitutionPage();

        StepLogger.stepId(4);
        StepLogger.step('Click "Add Outside Institution" button');
        await OutsideInstitutionHelper.clickOnAddOutsideInstitutionButton();
        StepLogger.verification('"New Outside Institution" pop-up is displayed');
        await OutsideInstitutionHelper.verifyNewOutsideInstitutionWindow();
    });

    // Jira References - COTRAC-2113
    it('To verify that admin user can remove access of "Compensation" from non-admin user. - [22981097]', async () => {
        // Auto generated by aurea-automation - util on Wed, 17 Apr 2019 14:53:53 GMT
        const compensationDf = UsersPage.permissionsTab.compensation;

        StepLogger.preCondition('Navigate to Administration -> Security -> Users');
        await UsersHelper.navigateToUsersAndSelectOneInPermissionsTab();

        StepLogger.caseId = 22981097;
        StepLogger.stepId(1);
        StepLogger.step('Verify that Permission pane is displayed.');
        StepLogger.verification('Permission pane should be displayed.');
        await UsersHelper.verifyPermissionTab();

        StepLogger.stepId(2);
        StepLogger.step('Uncheck the "Compensation" permission.');
        await UsersHelper.uncheckPermission(compensationDf);
        StepLogger.verification('It should be unchecked.');
        await UsersHelper.verifyPermissionIsUncheched(compensationDf);

        StepLogger.stepId(3);
        StepLogger.step('Click Save button from top right corner');
        await UsersHelper.clickSaveButton();
        StepLogger.verification('Page should be refreshed and changes should be saved');
        await UsersHelper.verifyPermissionIsUncheched(compensationDf);

        StepLogger.postCondition('Revert the permission to be checked.');
        await UsersHelper.revertToCheckPermission(compensationDf);
    });

    // Jira References - COTRAC-2113
    it('To verify that admin user can remove access of "Branches" from non-admin user. - [22981094]', async () => {
        // Auto generated by aurea-automation - util on Wed, 17 Apr 2019 14:53:53 GMT
        const branchesDf = UsersPage.permissionsTab.branches;

        StepLogger.preCondition('Navigate to Administration -> Security -> Users');
        await UsersHelper.navigateToUsersAndSelectOneInPermissionsTab();

        StepLogger.caseId = 22981094;
        StepLogger.stepId(1);
        StepLogger.step('Verify that Permission pane is displayed.');
        StepLogger.verification('Permission pane should be displayed.');
        await UsersHelper.verifyPermissionTab();

        StepLogger.stepId(2);
        StepLogger.step('Uncheck the "Branches" permission.');
        await UsersHelper.uncheckPermission(branchesDf);
        StepLogger.verification('It should be unchecked.');
        await UsersHelper.verifyPermissionIsUncheched(branchesDf);

        StepLogger.stepId(3);
        StepLogger.step('Click Save button from top right corner');
        await UsersHelper.clickSaveButton();
        StepLogger.verification('Page should be refreshed and changes should be saved');
        await UsersHelper.verifyPermissionIsUncheched(branchesDf);

        StepLogger.postCondition('Revert the permission to be checked.');
        await UsersHelper.revertToCheckPermission(branchesDf);
    });

    // Jira References - COTRAC-2113
    it('To verify that admin user can remove access of "Add Institution" from non-admin user. - [22981092]', async () => {
        // Auto generated by aurea-automation - util on Wed, 17 Apr 2019 20:12:07 GMT
        const addInstitutionDf = UsersPage.permissionsTab.addInstitution;

        StepLogger.preCondition('Navigate to Administration -> Security -> Users');
        await UsersHelper.navigateToUsersAndSelectOneInPermissionsTab();

        StepLogger.caseId = 22981092;
        StepLogger.stepId(1);
        StepLogger.step('Verify that Permission pane is displayed.');
        StepLogger.verification('Permission pane should be displayed.');
        await UsersHelper.verifyPermissionTab();

        StepLogger.stepId(2);
        StepLogger.step('Uncheck the "Add Institution" permission.');
        await UsersHelper.uncheckPermission(addInstitutionDf);
        StepLogger.verification('It should be unchecked.');
        await UsersHelper.verifyPermissionIsUncheched(addInstitutionDf);

        StepLogger.stepId(3);
        StepLogger.step('Click Save button from top right corner');
        await UsersHelper.clickSaveButton();
        StepLogger.verification('Page should be refreshed and changes should be saved');
        await UsersHelper.verifyPermissionIsUncheched(addInstitutionDf);

        StepLogger.postCondition('Revert the permission to be checked.');
        await UsersHelper.revertToCheckPermission(addInstitutionDf);
    });

    // Jira References - COTRAC-2113
    it('To verify that admin user can remove access of "Application Status" from non-admin user. - [22981093]', async () => {
        // Auto generated by aurea-automation - util on Wed, 17 Apr 2019 14:53:53 GMT
        const applicationStatusDf = UsersPage.permissionsTab.applicationStatus;

        StepLogger.preCondition('Navigate to Administration -> Security -> Users');
        await UsersHelper.navigateToUsersAndSelectOneInPermissionsTab();

        StepLogger.caseId = 22981093;
        StepLogger.stepId(1);
        StepLogger.step('Verify that Permission pane is displayed.');
        StepLogger.verification('Permission pane should be displayed.');
        await UsersHelper.verifyPermissionTab();

        StepLogger.stepId(2);
        StepLogger.step('Uncheck the "Application Status" permission.');
        await UsersHelper.uncheckPermission(applicationStatusDf);
        StepLogger.verification('It should be unchecked.');
        await UsersHelper.verifyPermissionIsUncheched(applicationStatusDf);

        StepLogger.stepId(3);
        StepLogger.step('Click Save button from top right corner');
        await UsersHelper.clickSaveButton();
        StepLogger.verification('Page should be refreshed and changes should be saved');
        await UsersHelper.verifyPermissionIsUncheched(applicationStatusDf);

        StepLogger.postCondition('Revert the permission to be checked.');
        await UsersHelper.revertToCheckPermission(applicationStatusDf);
    });

    // Jira References - COTRAC-2113
    it('To verify that admin user can remove access of "Custom Item Types" from non-admin user. - [22981105]', async () => {
        // Auto generated by aurea-automation - util on Wed, 17 Apr 2019 14:53:53 GMT
        const customItemTypesDf = UsersPage.permissionsTab.customItemTypes;

        StepLogger.preCondition('Navigate to Administration -> Security -> Users');
        await UsersHelper.navigateToUsersAndSelectOneInPermissionsTab();

        StepLogger.caseId = 22981105;
        StepLogger.stepId(1);
        StepLogger.step('Verify that Permission pane is displayed.');
        StepLogger.verification('Permission pane should be displayed.');
        await UsersHelper.verifyPermissionTab();

        StepLogger.stepId(2);
        StepLogger.step('Uncheck the "Custom Item Types" permission.');
        await UsersHelper.uncheckPermission(customItemTypesDf);
        StepLogger.verification('It should be unchecked.');
        await UsersHelper.verifyPermissionIsUncheched(customItemTypesDf);

        StepLogger.stepId(3);
        StepLogger.step('Click Save button from top right corner');
        await UsersHelper.clickSaveButton();
        StepLogger.verification('Page should be refreshed and changes should be saved');
        await UsersHelper.verifyPermissionIsUncheched(customItemTypesDf);

        StepLogger.postCondition('Revert the permission to be checked.');
        await UsersHelper.revertToCheckPermission(customItemTypesDf);
    });

    // Jira References - COTRAC-2113
    it('To verify that admin user can remove access of "Case Areas" from non-admin user. - [22981095]', async () => {
        // Auto generated by aurea-automation - util on Wed, 17 Apr 2019 14:53:53 GMT
        const caseAreasDf = UsersPage.permissionsTab.caseAreas;

        StepLogger.preCondition('Navigate to Administration -> Security -> Users');
        await UsersHelper.navigateToUsersAndSelectOneInPermissionsTab();

        StepLogger.caseId = 22981095;
        StepLogger.stepId(1);
        StepLogger.step('Verify that Permission pane is displayed.');
        StepLogger.verification('Permission pane should be displayed.');
        await UsersHelper.verifyPermissionTab();

        StepLogger.stepId(2);
        StepLogger.step('Uncheck the "Case Areas" permission.');
        await UsersHelper.uncheckPermission(caseAreasDf);
        StepLogger.verification('It should be unchecked.');
        await UsersHelper.verifyPermissionIsUncheched(caseAreasDf);

        StepLogger.stepId(3);
        StepLogger.step('Click Save button from top right corner');
        await UsersHelper.clickSaveButton();
        StepLogger.verification('Page should be refreshed and changes should be saved');
        await UsersHelper.verifyPermissionIsUncheched(caseAreasDf);

        StepLogger.postCondition('Revert the permission to be checked.');
        await UsersHelper.revertToCheckPermission(caseAreasDf);
    });

    // Jira References - COTRAC-2113
    it('To verify that admin user can remove access of "Corrections" from non-admin user. - [22981099]', async () => {
        // Auto generated by aurea-automation - util on Wed, 17 Apr 2019 14:53:53 GMT
        const correctionsDf = UsersPage.permissionsTab.corrections;

        StepLogger.preCondition('Navigate to Administration -> Security -> Users');
        await UsersHelper.navigateToUsersAndSelectOneInPermissionsTab();

        StepLogger.caseId = 22981099;
        StepLogger.stepId(1);
        StepLogger.step('Verify that Permission pane is displayed.');
        StepLogger.verification('Permission pane should be displayed.');
        await UsersHelper.verifyPermissionTab();

        StepLogger.stepId(2);
        StepLogger.step('Uncheck the "Corrections" permission.');
        await UsersHelper.uncheckPermission(correctionsDf);
        StepLogger.verification('It should be unchecked.');
        await UsersHelper.verifyPermissionIsUncheched(correctionsDf);

        StepLogger.stepId(3);
        StepLogger.step('Click Save button from top right corner');
        await UsersHelper.clickSaveButton();
        StepLogger.verification('Page should be refreshed and changes should be saved');
        await UsersHelper.verifyPermissionIsUncheched(correctionsDf);

        StepLogger.postCondition('Revert the permission to be checked.');
        await UsersHelper.revertToCheckPermission(correctionsDf);
    });

    // Jira References - COTRAC-2113
    it('To verify that admin user can remove access of "Custom Items" from non-admin user. - [22981106]', async () => {
        // Auto generated by aurea-automation - util on Wed, 17 Apr 2019 14:53:53 GMT
        const customItemsDf = UsersPage.permissionsTab.customItems;

        StepLogger.preCondition('Navigate to Administration -> Security -> Users');
        await UsersHelper.navigateToUsersAndSelectOneInPermissionsTab();

        StepLogger.caseId = 22981106;
        StepLogger.stepId(1);
        StepLogger.step('Verify that Permission pane is displayed.');
        StepLogger.verification('Permission pane should be displayed.');
        await UsersHelper.verifyPermissionTab();

        StepLogger.stepId(2);
        StepLogger.step('Uncheck the "Custom Items" permission.');
        await UsersHelper.uncheckPermission(customItemsDf);
        StepLogger.verification('It should be unchecked.');
        await UsersHelper.verifyPermissionIsUncheched(customItemsDf);

        StepLogger.stepId(3);
        StepLogger.step('Click Save button from top right corner');
        await UsersHelper.clickSaveButton();
        StepLogger.verification('Page should be refreshed and changes should be saved');
        await UsersHelper.verifyPermissionIsUncheched(customItemsDf);

        StepLogger.postCondition('Revert the permission to be checked.');
        await UsersHelper.revertToCheckPermission(customItemsDf);
    });
});
