import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { DashboardPageConstant } from '../../../../page-objects/pages/home-page/dashboard/dashboard.constants';
import { DashboardPageHelper } from '../../../../page-objects/pages/home-page/dashboard/dashboard.helper';
import { HomePageHelper } from '../../../../page-objects/pages/home-page/home-page.helper';
import { HomePage } from '../../../../page-objects/pages/home-page/home-page.po';
import { LoginPageHelper } from '../../../../page-objects/pages/login-page/login-page.helper';
import { MyProfilePageHelper } from '../../../../page-objects/pages/my-profile/my-profile.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;
    const id = PageHelper.getUniqueId();
    const dashboard = `${DashboardPageConstant.elementNames.newDashboard}${id}`;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    // Jira References - COTRAC-3981
    it('Verify that the Admin can grant permission to Queues widget via My Profile page Permissions - [22995889]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 07:38:56 GMT
        StepLogger.caseId = 22995889;

        StepLogger.stepId(1);
        StepLogger.step('Navigate to Home My Profile module from the left menu panel');
        StepLogger.verification('My Profile module should be displayed in left menu panel of Home page');
        await HomePageHelper.verifyMyProfileLinkDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click My Profile');
        await HomePageHelper.clickMyProfileLink();
        StepLogger.verification('Logged in users profile should get opened in a new page');
        await MyProfilePageHelper.verifyNewCasePageDisplayed(false);

        StepLogger.stepId(3);
        StepLogger.step('Click on the Permissions tab');
        await MyProfilePageHelper.clickPermissionsTab();
        StepLogger.verification('Permissions page should get opened for the logged in user');
        await MyProfilePageHelper.verifyPermissionTab();

        StepLogger.stepId(4);
        StepLogger.step('Search for Dashboard from the permission tree');
        await MyProfilePageHelper.searchDashboard();
        StepLogger.verification('Permission options should be displayed for Dashboard');
        await MyProfilePageHelper.verifyDashboardPermissions();

        StepLogger.stepId(5);
        StepLogger.step('Select "Queues" permission options if not already ticked');
        await MyProfilePageHelper.selectQueuesPermission();
        StepLogger.verification('"Queues" permission options should be selected');
        await MyProfilePageHelper.verifyQueuesSelected();

        StepLogger.stepId(6);
        StepLogger.step('Click Save on the top right of the page');
        await MyProfilePageHelper.clickSaveButton();
        StepLogger.verification('Permissions should be saved successfully');
        await MyProfilePageHelper.verifyQueuesSelected();
    });

    // Jira References - COTRAC-3982
    it('Verify the user has permission to Dashboard Queues widgets - [22995890]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 08:38:24 GMT
        StepLogger.caseId = 22995890;

        StepLogger.preCondition('User navigated to My Profile page Permissions tab');
        await MyProfilePageHelper.navigateToPermissionsTab();

        StepLogger.stepId(1);
        StepLogger.step('Search for Dashboard from the permission tree');
        await MyProfilePageHelper.searchDashboard();
        StepLogger.verification('Permission options should be displayed for Dashboard');
        await MyProfilePageHelper.verifyDashboardPermissions();

        StepLogger.stepId(2);
        StepLogger.step('Verify Queues permission options');
        StepLogger.verification('Queues permission options should be selected/ enabled for the logged in user');
        await MyProfilePageHelper.verifyQueuesSelected();

        StepLogger.stepId(3);
        StepLogger.step('Navigate back to the home page');
        await MyProfilePageHelper.navigateToHomePage();
        StepLogger.verification('Should be navigated back to the Home page');
        await HomePage.pageTitle.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-3983
    it('Verify that the user can Add new Dashboard in home page successfully - [22995891]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 08:49:08 GMT
        StepLogger.caseId = 22995891;

        StepLogger.stepId(1);
        StepLogger.step('Verify user navigated to ResourceOne home page');
        StepLogger.verification('Home page Action Center should be displayed');
        await HomePage.pageTitle.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click the down arrow icon on the top left of the home page');
        await DashboardPageHelper.clickArrowIcon();
        StepLogger.verification('Available Dashboards should be displayed listed in the drop down');
        await DashboardPageHelper.verifyDashboardList();

        StepLogger.stepId(3);
        StepLogger.step('Click the Add button from the drop down');
        await DashboardPageHelper.clickAddDropdownButton();
        StepLogger.verification('New Dashboard record should be displayed ready to be renamed');
        await DashboardPageHelper.verifyNewDashboardRecord();

        StepLogger.stepId(4);
        StepLogger.step('Enter name for dashboard');
        await DashboardPageHelper.enterName(id);
        StepLogger.verification('Entered values should be displayed');
        await DashboardPageHelper.verifyEnteredName(dashboard);

        StepLogger.stepId(5);
        StepLogger.step('Click Save');
        await DashboardPageHelper.clickSaveDropdownButton();
        StepLogger.verification('New Dashboard should get created and displayed in the home page and "Click to Add Widget" option should be displayed');
        await DashboardPageHelper.verifyDashboardCreatedAndAddWidget(dashboard);
    });

    // Jira References - COTRAC-3984
    it('Verify that user can Add Queue Summary widget to newly created Dashboard via "Click to Add Widget" option - [22995892]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 12:06:30 GMT
        StepLogger.caseId = 22995892;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.stepId(1);
        StepLogger.step('Verify "Click to Add Widget" option is displayed in new Dashboard');
        StepLogger.verification('New Dashboard should be displayed in the home page with "Click to Add Widgets" option');
        await DashboardPageHelper.verifyDashboardCreatedAndAddWidget(dashboard);

        StepLogger.stepId(2);
        StepLogger.step('Click on "Click to Add Widget" option');
        await DashboardPageHelper.clickAddWidget();
        StepLogger.verification(`Menu should be displayed at the top right of the page and Queue Summery menu should
            be available in the displayed menu`);
        await DashboardPageHelper.verifyAddWidgetMenu();
        await DashboardPageHelper.verifyQueueSummary();

        StepLogger.stepId(3);
        StepLogger.step('Click on the Queue Summary menu');
        await DashboardPageHelper.clickQueueSummary();
        StepLogger.verification('Queue Summery widget should be added to the newly created Dashboard successfully');
        await DashboardPageHelper.verifyQueueSummaryWidget();

        StepLogger.stepId(4);
        StepLogger.step('Click on the refresh data within the top side of the widget menu');
        await DashboardPageHelper.clickRefreshButton();
        StepLogger.verification('Data should be refreshed successfully in the widget');
        await DashboardPageHelper.verifyQueueSummaryWidget();

        StepLogger.stepId(5);
        StepLogger.step('Verify Queue Summery widget data grid');
        StepLogger.verification('Following columns should be displayed with Queue summery data QUEUE and ITEMS');
        await DashboardPageHelper.verifyQueueWidgetColumns();

        StepLogger.postCondition('Delete widget');
        await DashboardPageHelper.deleteWidget();
    });

    // Jira References - COTRAC-3985
    it('Verify that user can Add Queue Summary widget to newly created Dashboard via "+" option - [22996051]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 13:23:59 GMT
        StepLogger.caseId = 22996051;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.stepId(1);
        StepLogger.step('Click on "+" icon on the top right of the page');
        await DashboardPageHelper.clickPlusIcon();
        StepLogger.verification('Menu should be displayed at the top right of the page and Queue Summery menu should be available in the displayed menu');
        await DashboardPageHelper.verifyAddWidgetMenu();
        await DashboardPageHelper.verifyQueueSummary();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Queue Summery menu');
        await DashboardPageHelper.clickQueueSummary();
        StepLogger.verification('Queue Summery widget should be added to the newly created Dashboard successfully');
        await DashboardPageHelper.verifyQueueSummaryWidget();

        StepLogger.stepId(3);
        StepLogger.step('Click on the refresh data within the top side of the widget menu');
        await DashboardPageHelper.clickRefreshButton();
        StepLogger.verification('Data should be refreshed successfully in the widget');
        await DashboardPageHelper.verifyQueueSummaryWidget();

        StepLogger.stepId(4);
        StepLogger.step('Verify Queue Summery widget data grid');
        StepLogger.verification('Following columns should be displayed with Queue summery data QUEUE and ITEMS');
        await DashboardPageHelper.verifyQueueWidgetColumns();
    });

    // Jira References - COTRAC-3986
    it('Verify that user can open selected Activity Queues in Queue Summary widget - [22996074]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 13:40:58 GMT
        StepLogger.caseId = 22996074;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.stepId(1);
        StepLogger.step('Verify Queue Summery widget is displayed with data');
        StepLogger.verification('Data should be loaded successfully in the widget with Activity, Case, Event, Task Categories');
        await DashboardPageHelper.verifyWidgetSections();

        StepLogger.stepId(2);
        StepLogger.step('Click on any record under Activity queue summary list');
        const text = await DashboardPageHelper.clickRecord(DashboardPageConstant.elementNames.activity);
        StepLogger.verification('Selected queue opportunity Activity category details should be opened in the page');
        await DashboardPageHelper.verifySelectedActivity(text);

        StepLogger.stepId(3);
        StepLogger.step('Verify displayed queue activity details');
        StepLogger.verification('All records for the selected queue opportunity Activities should be displayed for the selected Category');
        await DashboardPageHelper.verifySelectedSectionRecords();
    });

    // Jira References - COTRAC-3987
    it('Verify that user can access settings of added Queue Summary widget - [22996062]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 14:10:48 GMT
        StepLogger.caseId = 22996062;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.stepId(1);
        StepLogger.step('Verify Queue Summary widget is displayed with data');
        StepLogger.verification('Data should be loaded successfully in the widget');
        await DashboardPageHelper.verifyWidgetSections();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Settings icon within the top side of the widget menu');
        await DashboardPageHelper.clickSettingsIcon();
        StepLogger.verification('Settings window should be displayed for the widget');
        await DashboardPageHelper.verifySettingsDialog();

        StepLogger.stepId(3);
        StepLogger.step('Verify the Settings window buttons');
        StepLogger.verification(`Following buttons should be displayed in the window
            -Delete -OK`);
        await DashboardPageHelper.verifySettingsDialogButtons();

        StepLogger.stepId(4);
        StepLogger.step('Click OK icon');
        await DashboardPageHelper.clickOkButton();
        StepLogger.verification('Settings window should get closed and Action Center page should be displayed with added widget');
        await DashboardPageHelper.verifySettingsDialogClosedAndActionPage();
    });

    // Jira References - COTRAC-3989
    it('Verify that user can open selected Case Queues in Queue Summary widget - [22996100]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 17:39:17 GMT
        StepLogger.caseId = 22996100;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.stepId(1);
        StepLogger.step('Verify Queue Summary widget is displayed with data');
        StepLogger.verification('Data should be loaded successfully in the widget with Activity, Case, Event, Task Categories');
        await DashboardPageHelper.verifyWidgetSections();

        StepLogger.stepId(2);
        StepLogger.step('Click on any record under Case queue summary list');
        const text = await DashboardPageHelper.clickRecord(DashboardPageConstant.elementNames.case);
        StepLogger.verification('Selected queued Case records should be displayed in the page');
        await DashboardPageHelper.verifySelectedSection(text);

        StepLogger.stepId(3);
        StepLogger.step('Verify displayed queued cases records');
        StepLogger.verification('All records for the selected queued cases should be displayed for the selected Queued Case Category');
        await DashboardPageHelper.verifySelectedSectionRecords();
    });

    // Jira References - COTRAC-3990
    it('Verify that user can open selected Event Queues in Queue Summary widget - [22996126]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 17:49:07 GMT
        StepLogger.caseId = 22996126;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.stepId(1);
        StepLogger.step('Verify Queue Summery widget is displayed with data');
        StepLogger.verification('Data should be loaded successfully in the widget with Activity, Case, Event, Task Categories');
        await DashboardPageHelper.verifyWidgetSections();

        StepLogger.stepId(2);
        StepLogger.step('Click on any record under Event queue summary list');
        const text = await DashboardPageHelper.clickRecord(DashboardPageConstant.elementNames.event);
        StepLogger.verification('Selected Event queues should be displayed in the page');
        await DashboardPageHelper.verifySelectedSection(text);

        StepLogger.stepId(3);
        StepLogger.step('Verify displayed Event queue records');
        StepLogger.verification('All records for the selected Event queues should be displayed for the selected Event Queue Category');
        await DashboardPageHelper.verifySelectedSectionRecords();
    });

    // Jira References - COTRAC-3991
    it('Verify that user can open selected Task Queues in Queue Summary widget - [22996139]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 17:56:08 GMT
        StepLogger.caseId = 22996139;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.stepId(1);
        StepLogger.step('Verify Queue Summery widget is displayed with data');
        StepLogger.verification('Data should be loaded successfully in the widget with Activity, Case, Event, Task Categories');
        await DashboardPageHelper.verifyWidgetSections();

        StepLogger.stepId(2);
        StepLogger.step('Click on any record under Task queue summary list');
        const text = await DashboardPageHelper.clickRecord(DashboardPageConstant.elementNames.task);
        StepLogger.verification('Selected Task queues should be displayed in the page');
        await DashboardPageHelper.verifySelectedSection(text);

        StepLogger.stepId(3);
        StepLogger.step('Verify displayed Task queue records');
        StepLogger.verification('All records for the selected Task queues should be displayed with the Task Queue Category');
        await DashboardPageHelper.verifySelectedSectionRecords();
    });

    // Jira References - COTRAC-3992
    it('Verify that user can collapse/expand Queue Categories in Queue Summary widget - [22996150]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 20:02:09 GMT
        StepLogger.caseId = 22996150;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.stepId(1);
        StepLogger.step('Verify Queue Summery widget is displayed with data');
        StepLogger.verification('Data should be loaded successfully in the widget with Activity, Case, Event, Task Categories');
        await DashboardPageHelper.verifyWidgetSections();

        StepLogger.stepId(2);
        StepLogger.step('Click on collapse icon in queue category name');
        await DashboardPageHelper.clickCollapseActivity();
        StepLogger.verification('Queue categories should get collapsed');
        await DashboardPageHelper.verifyRecordHidden();

        StepLogger.stepId(3);
        StepLogger.step('Click on expand icon in queue category name to expand categories');
        await DashboardPageHelper.clickCollapseActivity();
        StepLogger.verification('Queue categories should get expanded');
        await DashboardPageHelper.verifyRecordDisplay();
    });

    // Jira References - COTRAC-3988
    it('Verify that user can Delete Queue Summary widget in newly created Dashboard - [22996146]', async () => {
        // Auto generated by aurea-automation - util on Tue, 02 Apr 2019 14:44:27 GMT
        StepLogger.caseId = 22996146;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.stepId(1);
        StepLogger.step('Verify Queue Summery widget is displayed with data');
        StepLogger.verification('Data should be loaded successfully in the widget');
        await DashboardPageHelper.verifyWidgetSections();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Settings icon within the top side of the widget menu');
        await DashboardPageHelper.clickSettingsIcon();
        StepLogger.verification('Settings window should be displayed for the widget');
        await DashboardPageHelper.verifySettingsDialog();

        StepLogger.stepId(3);
        StepLogger.step('Click Delete icon at the bottom right');
        await DashboardPageHelper.clickDeleteButton();
        StepLogger.verification('Delete icon should be displayed as "Delete This widget"');
        await DashboardPageHelper.verifyDeleteThisWidget();

        StepLogger.stepId(4);
        StepLogger.step('Click on Delete this widget button');
        await DashboardPageHelper.clickDeleteThisWidget();
        StepLogger.verification('Queue Summary widget should get deleted successfully and should not be displayed in the new Dashboard');
        await DashboardPageHelper.verifyDashboardCreatedAndAddWidget(dashboard);
    });
});
