import { StepLogger } from '../../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../../components/html/page-helper';
import { DashboardPageConstant } from '../../../../../page-objects/pages/home-page/dashboard/dashboard.constants';
import { DashboardPageHelper } from '../../../../../page-objects/pages/home-page/dashboard/dashboard.helper';
import { DashboardPage } from '../../../../../page-objects/pages/home-page/dashboard/dashboard.po';
import { HomePageHelper } from '../../../../../page-objects/pages/home-page/home-page.helper';
import { HomePage } from '../../../../../page-objects/pages/home-page/home-page.po';
import { HomePage1Helper } from '../../../../../page-objects/pages/home-page/home-page1.helper';
import { LoginPageHelper } from '../../../../../page-objects/pages/login-page/login-page.helper';
import { MyProfilePageHelper } from '../../../../../page-objects/pages/my-profile/my-profile.helper';
import { SuiteNames } from '../../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    const id = PageHelper.getUniqueId();
    const dashboard = `${DashboardPageConstant.elementNames.newDashboard}${id}`;
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    // Jira References - COTRAC-152
    it('Verify that the user can Add new Dashboard in home page successfully - [22979066]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 19:32:50 GMT

        StepLogger.caseId = 22979066;
        StepLogger.stepId(1);
        StepLogger.step('Verify user navigated to ResourceOne home page');
        StepLogger.verification('Home page Action Center should be displayed');
        await HomePage.pageTitle.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click the down arrow icon on the top left of the home page');
        await DashboardPageHelper.clickArrowIcon();
        StepLogger.verification('Available Dashboards should be displayed listed in the drop down');
        await DashboardPageHelper.verifyDashboardList();

        StepLogger.stepId(3);
        StepLogger.step('Click the Add button from the drop down');
        await DashboardPageHelper.clickAddDropdownButton();
        StepLogger.verification('New Dashboard record should be displayed ready to be renamed');
        await DashboardPageHelper.verifyNewDashboardRecord();

        StepLogger.stepId(4);
        StepLogger.step('Enter name for dashboard');
        await DashboardPageHelper.enterName(id);
        StepLogger.verification('Entered values should be displayed');
        await DashboardPageHelper.verifyEnteredName(dashboard);

        StepLogger.stepId(5);
        StepLogger.step('Click Save');
        await DashboardPageHelper.clickSaveDropdownButton();
        StepLogger.verification('New Dashboard should get created and displayed in the home page');
        await DashboardPageHelper.verifyDashboardCreatedAndAddWidget(dashboard);
    });

    // Jira References - COTRAC-152
    it('Verify that user can Add Pipeline widget to newly created Dashboard via "Click to Add Widget" option - [22979078]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 19:32:51 GMT

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.caseId = 22979078;
        StepLogger.stepId(1);
        StepLogger.step('Verify "Click to Add Widget" option is displayed in new Dashboard');
        StepLogger.verification('"Click to Add Widget" option should be displayed in new Dashboard');
        await DashboardPageHelper.verifyDashboardCreatedAndAddWidget(dashboard);

        StepLogger.stepId(2);
        StepLogger.step('Click on "Click to Add Widget" option');
        await DashboardPageHelper.clickAddWidget();
        StepLogger.verification('Menu should be displayed at the top right of the page');
        await DashboardPageHelper.verifyAddWidgetMenu();

        StepLogger.stepId(3);
        StepLogger.step('Verify Pipeline menu is available in the displayed menu');
        StepLogger.verification('Pipeline menu should be available in the displayed menu');
        await HomePage1Helper.verifyPipeLineDisplay();

        StepLogger.stepId(4);
        StepLogger.step('Click on the Pipeline menu');
        await DashboardPageHelper.clickPipeline();
        StepLogger.verification('Pipeline widget should be added to the newly created Dashboard successfully');
        await DashboardPageHelper.verifyPipelineWidget();

        StepLogger.stepId(5);
        StepLogger.step('Click on the refresh data within the top side of the widget menu');
        await DashboardPageHelper.clickRefreshButton();
        StepLogger.verification('Data should be loaded successfully in the widget');
        await DashboardPageHelper.verifyPipelineWidget();
    });

    // Jira References - COTRAC-152
    it('Verify the user has permission to Dashboard Pipeline widgets - [22979050]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 19:32:50 GMT

        StepLogger.preCondition('User navigated to My Profile page Permissions tab');
        await MyProfilePageHelper.navigateToPermissionsTab();

        StepLogger.caseId = 22979050;
        StepLogger.stepId(1);
        StepLogger.step('Search for Dashboard from the permission tree');
        await MyProfilePageHelper.searchDashboard();
        StepLogger.verification('Permission options should be displayed for Dashboard');
        await MyProfilePageHelper.verifyDashboardPermissions();

        StepLogger.stepId(2);
        StepLogger.step('Verify Pipeline Branch, Pipeline Branch and Pipeline User permission options');
        StepLogger.verification('Pipeline Branch, Pipeline Branch and Pipeline User permission options should be selected/ enabled for the logged in user');
        await MyProfilePageHelper.verifyPipelineSelected();

        StepLogger.stepId(3);
        StepLogger.step('Navigate back to the home page');
        await MyProfilePageHelper.navigateToHomePage();
        StepLogger.verification('Should be navigated back to the Home page');
        await HomePage.pageTitle.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-152
    it('Verify that the Admin can grant permission to Pipeline widget via My Profile page Permissions - [22979069]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 19:32:50 GMT

        StepLogger.caseId = 22979069;
        StepLogger.stepId(1);
        StepLogger.step('Navigate to Home My Profile module from the left menu panel');
        StepLogger.verification('My Profile module should be displayed in left menu panel of Home page');
        await HomePageHelper.verifyMyProfileLinkDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click My Profile');
        await HomePageHelper.clickMyProfileLink();
        StepLogger.verification('Logged in users profile should get opened in a new page');
        await MyProfilePageHelper.verifyNewCasePageDisplayed(false);

        StepLogger.stepId(3);
        StepLogger.step('Click on the Permissions tab');
        await MyProfilePageHelper.clickPermissionsTab();
        StepLogger.verification('Permissions page should get opened for the logged in user');
        await MyProfilePageHelper.verifyPermissionTab();

        StepLogger.stepId(4);
        StepLogger.step('Search for Dashboard from the permission tree');
        await MyProfilePageHelper.searchDashboard();
        StepLogger.verification('Permission options should be displayed for Dashboard');
        await MyProfilePageHelper.verifyDashboardPermissions();

        StepLogger.stepId(5);
        StepLogger.step('Select "Pipeline Branch", "Pipeline Branch" and "Pipeline User" permission options if not already enabled');
        await MyProfilePageHelper.selectPipelinePermission();
        StepLogger.verification('"Pipeline Branch", "Pipeline Branch" and "Pipeline User" permission options should be selected');
        await MyProfilePageHelper.verifyPipelineSelected();

        StepLogger.stepId(6);
        StepLogger.step('Click Save on the top right of the page');
        await MyProfilePageHelper.clickSaveButton();
        StepLogger.verification('Permissions should be saved successfully');
        await MyProfilePageHelper.verifyPipelineSelected();
    });

    // Jira References - COTRAC-152
    it('Verify that user can Add Pipeline widget to newly created Dashboard via "+" option - [22979084]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 19:32:51 GMT

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);
        await DashboardPageHelper.deleteWidget();

        StepLogger.caseId = 22979084;
        StepLogger.stepId(1);
        StepLogger.step('Click on "+" icon on the top right of the page');
        await DashboardPageHelper.clickPlusIcon();
        StepLogger.verification('Menu should be displayed at the top right of the page');
        await DashboardPageHelper.verifyAddWidgetMenu();

        StepLogger.stepId(2);
        StepLogger.step('Verify Pipeline menu is available in the displayed menu');
        StepLogger.verification('Pipeline menu should be available in the displayed menu');
        await HomePage1Helper.verifyPipeLineDisplay();

        StepLogger.stepId(3);
        StepLogger.step('Click on the Pipeline menu');
        await DashboardPageHelper.clickPipeline();
        StepLogger.verification('Pipeline widget should be added to the newly created Dashboard successfully');
        await DashboardPageHelper.verifyPipelineWidget();

        StepLogger.stepId(4);
        StepLogger.step('Click on the refresh data within the top side of the widget menu');
        await DashboardPageHelper.clickRefreshButton();
        StepLogger.verification('Data should be loaded successfully in the widget');
        await DashboardPageHelper.verifyPipelineWidget();
    });

    // Jira References - COTRAC-152
    it('Verify that user can access settings of added Pipeline widget - [22979115]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 19:58:04 GMT

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.caseId = 22979115;
        StepLogger.stepId(1);
        StepLogger.step('Verify Pipeline widget is displayed in the New Dashboard with data');
        StepLogger.verification('Pipeline widget should be displayed in the newly created Dashboard');
        await DashboardPageHelper.verifyPipelineWidget();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Settings icon within the top side of the widget menu');
        await HomePage1Helper.clickOnSettingIcon();
        StepLogger.verification('Settings window should be displayed for the pipeline widget');
        await HomePage1Helper.verifySettingPopup();

        StepLogger.stepId(3);
        StepLogger.step('Verify the Settings window attributes');
        StepLogger.verification(`Following drop down lists should be displayed,
            Date Range,
            Branch,
            Scope`);
        await DashboardPageHelper.verifySettingsParams();

        StepLogger.stepId(4);
        StepLogger.step('Verify the Settings window buttons');
        StepLogger.verification(`Following buttons should be displayed at the bottom right of the window
            -Delete -Save`);
        await DashboardPageHelper.verifySettingsDialogButtons();
    });

    // Jira References - COTRAC-152
    it('Verify that user can Add Pipeline widget to an existing Dashboard - [22980191]', async () => {
        // Auto generated by aurea-automation - util on Mon, 08 Apr 2019 15:08:08 GMT

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);
        await DashboardPageHelper.deleteWidget();

        StepLogger.caseId = 22980191;
        StepLogger.stepId(1);
        StepLogger.step('Verify Existing Dashboard is already opened');
        StepLogger.verification('Existing Dashboard should be displayed with the available widgets');
        await DashboardPageHelper.verifyPipelineWidget();

        StepLogger.stepId(2);
        StepLogger.step('Click on "+" icon on top right of the page');
        await DashboardPageHelper.clickPlusIcon();
        StepLogger.verification('Menu should be displayed at the top right of the page');
        await DashboardPageHelper.verifyAddWidgetMenu();

        StepLogger.stepId(3);
        StepLogger.step('Verify Pipeline menu is available in the displayed menu');
        StepLogger.verification('Pipeline menu should be available in the displayed menu');
        await HomePage1Helper.verifyPipeLineDisplay();

        StepLogger.stepId(4);
        StepLogger.step('Click on the Pipeline menu');
        await DashboardPageHelper.clickPipeline();
        StepLogger.verification('Pipeline widget should be added to the existing Dashboard successfully');
        await DashboardPageHelper.verifyPipelineWidget();

        StepLogger.stepId(5);
        StepLogger.step('Click on the refresh data within the top side of the widget menu');
        await DashboardPageHelper.clickRefreshButton();
        StepLogger.verification('Data should be loaded successfully in the widget');
        await DashboardPageHelper.verifyPipelineWidget();
    });

    // Jira References - COTRAC-152
    it('Verify that user can change Date Range settings for Pipeline widget - [22979784]', async () => {
        // Auto generated by aurea-automation - util on Mon, 08 Apr 2019 15:08:07 GMT
        const dateRangeOptionTwo = DashboardPageConstant.elementNames.dateRangeOptionTwo;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard, true);

        StepLogger.caseId = 22979784;
        StepLogger.stepId(1);
        StepLogger.step('Click on the Settings icon within the top side of the widget menu');
        await HomePage1Helper.clickOnSettingIcon();
        StepLogger.verification('Settings window should be displayed for the pipeline widget');
        await HomePage1Helper.verifySettingPopup();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Date Range drop down');
        await HomePage1Helper.clickDateRangeDdlArrow();
        StepLogger.verification(`Date Range drop down list should contain,
            -30 Days, -60 Days, -90 Days and -180 Days`);
        await HomePage1Helper.verifyDateRangeElementsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Select Date Range settings value as desired');
        await HomePage1Helper.hoverAndClickOnElement(dateRangeOptionTwo);
        StepLogger.verification('Selected value should be displayed');
        await DashboardPage.dashboard.dateRangeInput.verifyTextBoxContains(dateRangeOptionTwo);

        StepLogger.stepId(4);
        StepLogger.step('Click OK icon on bottom right');
        await DashboardPageHelper.clickOkButton();
        StepLogger.verification('Pipeline widget should display values according to the selected Date range');
        await DashboardPageHelper.verifyPipelineWidget();
    });

    // Jira References - COTRAC-152
    it('Verify that user can change Branch settings for Pipeline widget - [22979786]', async () => {
        // Auto generated by aurea-automation - util on Mon, 08 Apr 2019 15:08:07 GMT
        const branchOptionTwo = DashboardPageConstant.elementNames.branchOptionTwo;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard, true);

        StepLogger.caseId = 22979786;
        StepLogger.stepId(1);
        StepLogger.step('Click on the Settings icon within the top side of the widget menu');
        await HomePage1Helper.clickOnSettingIcon();
        StepLogger.verification('Settings window should be displayed for the pipeline widget');
        await HomePage1Helper.verifySettingPopup();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Branch drop down');
        await HomePage1Helper.clickBranchDdlArrow();
        StepLogger.verification('Branch drop down list should contain all the Branch names displayed');
        await HomePage1Helper.verifyBranchElementsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Select Branch name as desired');
        await HomePage1Helper.hoverAndClickOnElement(branchOptionTwo);
        StepLogger.verification('Selected Branch should be displayed');
        await DashboardPage.dashboard.branchInput.verifyTextBoxContains(branchOptionTwo);

        StepLogger.stepId(4);
        StepLogger.step('Click OK icon on bottom right');
        await DashboardPageHelper.clickOkButton();
        StepLogger.verification('Pipeline widget should display values according to the selected Branch (if there are pipeline data available)');
        await DashboardPageHelper.verifyPipelineWidget();
    });

    // Jira References - COTRAC-152
    it('Verify that the user can switch between Dashboards - [22980179]', async () => {
        // Auto generated by aurea-automation - util on Mon, 08 Apr 2019 15:08:05 GMT

        StepLogger.caseId = 22980179;
        StepLogger.stepId(1);
        StepLogger.step('Verify user navigated to ResourceOne home page');
        StepLogger.verification('Home page Action Center should be displayed');
        await HomePage.pageTitle.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click the down arrow icon on the top left of the home page');
        await DashboardPageHelper.clickArrowIcon();
        StepLogger.verification('Available Dashboards should be displayed listed in the drop down');
        await DashboardPageHelper.verifyDashboardList();

        StepLogger.stepId(3);
        StepLogger.step('Click on any Dashboard from the list');
        await DashboardPage.dashboard.dashboardDropdown(dashboard).clickButtonJs();
        StepLogger.verification('Selected Dashboard should be displayed in the home page');
        await DashboardPageHelper.verifyPipelineWidget();

        StepLogger.stepId(4);
        StepLogger.step('Click on the refresh icon on the top right of the page');
        await DashboardPageHelper.clickRefreshButton();
        StepLogger.verification('All widgets should get refreshed and displayed with available data');
        await DashboardPageHelper.verifyPipelineWidget();
    });

    // Jira References - COTRAC-152
    it('Verify that user can navigate through data inside the Pipeline widget with arrow icons - [22980129]', async () => {
        // Auto generated by aurea-automation - util on Mon, 08 Apr 2019 15:08:07 GMT

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.caseId = 22980129;
        StepLogger.stepId(1);
        StepLogger.step('Verify the Pipeline widget is displayed with pipeline data');
        StepLogger.verification('Pipeline widget should be displayed with data and Total data value should be displayed in the bottom of the pipeline widget');
        await DashboardPageHelper.verifyPipelineWidget();

        StepLogger.stepId(2);
        StepLogger.step('Click right arrow displayed in the bottom right of the pipeline widget');
        const selectedText = await DashboardPageHelper.clickIconNavigateRightAndGetText();
        StepLogger.verification('Pipeline widget data rows should get highlighted, input type and ' +
            'data value should be displayed accordingly when navigating through the rows in downward direction');
        await DashboardPageHelper.verifyTextNotEqualToSelectedText(selectedText);

        StepLogger.stepId(3);
        StepLogger.step('Click left arrow displayed in the bottom left of the pipeline widget');
        await DashboardPageHelper.clickIconNavigateLeft();
        StepLogger.verification('Pipeline data input type and data value should be displayed accordingly when navigating through the rows in upward direction');
        await DashboardPageHelper.verifyTextEqualToSelectedText(selectedText);
    });

    // Jira References - COTRAC-152
    it('Verify the close button functionality in expanded Pipeline widget - [22980172]', async () => {
        // Auto generated by aurea-automation - util on Mon, 08 Apr 2019 15:08:07 GMT

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard);

        StepLogger.caseId = 22980172;
        StepLogger.stepId(1);
        StepLogger.step('Verify Pipeline widget is displayed in the New Dashboard with data');
        StepLogger.verification('Pipeline widget should be displayed in the newly created Dashboard');
        await DashboardPageHelper.verifyPipelineWidget();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Expand icon within the top right side of the widget menu');
        await HomePage1Helper.clickOnExpandIcon();
        StepLogger.verification('Pipeline widget should get expanded with charts in a new window');
        await DashboardPageHelper.verifyPipelineWidget();

        StepLogger.stepId(3);
        StepLogger.step('Click the "x" on the top right side of the screen');
        await DashboardPageHelper.clickCloseButton();
        StepLogger.verification('Expanded pipeline widget should get closed and Home page should be displayed with the Dashboard');
        await DashboardPageHelper.verifyPipelineWidget();
    });

    // Jira References - COTRAC-152
    it('Verify that user can change Scope settings for Pipeline widget - [22980106]', async () => {
        // Auto generated by aurea-automation - util on Mon, 08 Apr 2019 15:08:07 GMT
        const scopeOptionOne = DashboardPageConstant.elementNames.scopeOptionOne;

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard, true);

        StepLogger.caseId = 22980106;
        StepLogger.stepId(1);
        StepLogger.step('Click on the Settings icon within the top side of the widget menu');
        await HomePage1Helper.clickOnSettingIcon();
        StepLogger.verification('Settings window should be displayed for the pipeline widget');
        await HomePage1Helper.verifySettingPopup();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Scope drop down');
        await HomePage1Helper.clickScopeDdlArrow();
        StepLogger.verification('Scope drop down list should display all the Scope details accordingly');
        await HomePage1Helper.verifyScopeElementsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Select Scope value as desired');
        await HomePage1Helper.hoverAndClickOnElement(scopeOptionOne);
        StepLogger.verification('Selected Scope should be displayed');
        await DashboardPage.dashboard.scopeInput.verifyTextBoxContains(scopeOptionOne);

        StepLogger.stepId(4);
        StepLogger.step('Click OK icon on bottom right');
        await DashboardPageHelper.clickOkButton();
        StepLogger.verification('Pipeline widget should display values according to the selected Scope (if there are pipeline data available)');
        await DashboardPageHelper.verifyPipelineWidget();
    });

    // Jira References - COTRAC-152
    it('Verify that user can Delete Pipeline widget in newly created Dashboard - [22980432]', async () => {
        // Auto generated by aurea-automation - util on Mon, 08 Apr 2019 15:08:06 GMT

        StepLogger.preCondition('Open dashboard');
        await DashboardPageHelper.openDashboard(dashboard, true);

        StepLogger.caseId = 22980432;
        StepLogger.stepId(1);
        StepLogger.step('Verify Pipeline widget is displayed in the new Dashboard with data');
        StepLogger.verification('Pipeline widget should be displayed in the newly created Dashboard');
        await DashboardPageHelper.verifyPipelineWidget();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Settings icon within the top side of the pipeline widget');
        await HomePage1Helper.clickOnSettingIcon();
        StepLogger.verification('Settings window should be displayed for the pipeline widget');
        await HomePage1Helper.verifySettingPopup();

        StepLogger.stepId(3);
        StepLogger.step('Click Delete icon at the bottom right');
        await DashboardPageHelper.clickDeleteButton();
        StepLogger.verification('Delete icon should be displayed as "Delete This widget"');
        await DashboardPageHelper.verifyDeleteThisWidget();

        StepLogger.stepId(4);
        StepLogger.step('Click on Delete this widget button');
        await DashboardPageHelper.clickDeleteThisWidget();
        StepLogger.verification('Pipeline widget should get deleted successfully');
        await DashboardPageHelper.verifyDashboardCreatedAndAddWidget(dashboard);
    });
});
