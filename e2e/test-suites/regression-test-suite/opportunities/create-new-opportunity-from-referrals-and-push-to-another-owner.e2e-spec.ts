import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { ProductsConstants } from '../../../page-objects/pages/administration/configuration/products/products.constants';
import { HomePageHelper } from '../../../page-objects/pages/home-page/home-page.helper';
import { HomePage1Helper } from '../../../page-objects/pages/home-page/home-page1.helper';
import { LoginPageHelper } from '../../../page-objects/pages/login-page/login-page.helper';
import { NewCasePageConstant } from '../../../page-objects/pages/new-case-page/new-case-page.constants';
import { NewOpportunityPageConstant } from '../../../page-objects/pages/new-opportunity-page/new-opportunity-page.constants';
import { NewOpportunityPageHelper } from '../../../page-objects/pages/new-opportunity-page/new-opportunity-page.helper';
import { ReferralsConstant } from '../../../page-objects/pages/referrals/referrals.constant';
import { ReferralsPageHelper } from '../../../page-objects/pages/referrals/referrals.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    // Jira References - COTRAC-4268
    it('To verify pagination on the referral page. - [22961372]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:37 GMT

        StepLogger.caseId = 22961372;
        StepLogger.stepId(1);
        StepLogger.step('Go to Opportunities -> Referral');
        await HomePage1Helper.clickOnOpportunitiesMenu();
        await HomePage1Helper.clickOnReferralsMenu();
        StepLogger.verification('Referral Page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('In the user filter select a user which has a list of Referral available.');
        await ReferralsPageHelper.selectUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);
        StepLogger.verification('It should be selected.');
        await ReferralsPageHelper.verifySelectedUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);

        StepLogger.stepId(3);
        StepLogger.step('Verify Pagination option is available at the bottom of the page.');
        StepLogger.verification(`It should be displayed.
        [It is grayed out as minimum 50 records are required for Pagination to get enabled.]`);
        await ReferralsPageHelper.verifyPaginationAvailable();
    });

    // Jira References - COTRAC-4265
    it('To verify that user is able to group by Status. - [22961369]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:37 GMT

        StepLogger.caseId = 22961369;
        StepLogger.stepId(1);
        StepLogger.step('Go to Opportunities -> Referral');
        await HomePage1Helper.clickOnOpportunitiesMenu();
        await HomePage1Helper.clickOnReferralsMenu();
        StepLogger.verification('Referral Page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('In the user filter select a user which has a list of Referral available.');
        await ReferralsPageHelper.selectUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);
        StepLogger.verification('It should be selected.');
        await ReferralsPageHelper.verifySelectedUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);

        StepLogger.stepId(3);
        StepLogger.step('Select "Status in the grouping drop down.');
        await ReferralsPageHelper.selectAValueFromGroupingDropdown(ReferralsConstant.groupingOptions.status);
        StepLogger.verification('The referrals should be grouped on the basis of Status.');
        await ReferralsPageHelper.verifyRecordsAreGrouped(ReferralsConstant.groupingOptions.status);
    });

    // Jira References - COTRAC-4260
    it('To verify that user is able to access "New Opportunity" page through referral. - [22961375]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:38 GMT

        StepLogger.caseId = 22961375;
        StepLogger.stepId(1);
        StepLogger.step('Go to Opportunities -> Referrals');
        await HomePage1Helper.clickOnOpportunitiesMenu();
        await HomePage1Helper.clickOnReferralsMenu();
        StepLogger.verification('Referrals page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify "Add opportunity" button is displayed on the top left corner');
        StepLogger.verification('It should be displayed.');
        await ReferralsPageHelper.verifyAddOpportunityButtonDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "add opportunity".');
        await ReferralsPageHelper.clickOnAddOpportunityButton();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed();
    });

    // Jira References - COTRAC-4259
    it('To verify user is able to add an opportunity through referral page. - [22961374]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:38 GMT

        StepLogger.caseId = 22961374;
        StepLogger.preCondition('Navigate to Referrals page and click on Add Opportunity Button');
        await ReferralsPageHelper.navigateToReferralsAndClickAddOpportunity();

        StepLogger.stepId(1);
        StepLogger.step('Click Search besides contact field.');
        await NewOpportunityPageHelper.clickSearchContactIcon();
        StepLogger.verification('"Contact Selector" should be displayed.');
        await NewOpportunityPageHelper.verifyContactSelectorModalIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Enter the search criteria to search the logged in user and click "search".');
        const criteria = await NewCasePageConstant.elementNames.daron;
        await NewOpportunityPageHelper.searchARandomContact(criteria);
        StepLogger.verification('Contact should be searched.');
        await NewOpportunityPageHelper.verifyContactResultsAreDisplayedFromContactDialog();

        StepLogger.stepId(3);
        StepLogger.step(`Select the Contact and Click "User selected contact".
        Click "return to new".`);
        const contact = await NewOpportunityPageHelper.getFirstContactDisplayed();
        await NewOpportunityPageHelper.clickUseSelectedContactOptionAndClickReturnToNew();
        StepLogger.verification('Contact should be add on New opportunity page.');
        await NewOpportunityPageHelper.verifyContactHasBeenSelected(contact);

        StepLogger.stepId(4);
        StepLogger.step('Select a product.');
        await NewOpportunityPageHelper.selectAProductType(ProductsConstants.productCategory.emailAddress);
        StepLogger.verification('It should be selected.');
        await NewOpportunityPageHelper.verifySelectedProductType(ProductsConstants.productCategory.emailAddress);

        StepLogger.stepId(5);
        StepLogger.step('Select a sub product.');
        await NewOpportunityPageHelper.selectAProductName(NewOpportunityPageConstant.testData.validateP1);
        StepLogger.verification('It should be selected.');
        await NewOpportunityPageHelper.verifySelectedProductName(NewOpportunityPageConstant.testData.validateP1);

        StepLogger.stepId(6);
        StepLogger.step('Click "save".');
        await NewOpportunityPageHelper.clickSaveButton();
        StepLogger.verification('Opportunity should be saved.');
        await NewOpportunityPageHelper.verifyNewOpportunityIsSaved(NewOpportunityPageConstant.testData.validateP1);
    });

    // Jira References - COTRAC-4271
    it('To verify that opportunity is not displayed in referral page. - [22961394]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:37 GMT

        StepLogger.caseId = 22961394;
        StepLogger.preCondition('Get current number of referrals records and create an opportunity');
        const numberOfReferralsRows = await ReferralsPageHelper.getCurrentNumbersOfRecords();
        await ReferralsPageHelper.createAnOpportunity();

        // Step 1 is covered in pre-condition
        StepLogger.stepId(1);
        StepLogger.step('Verify that opportunity is saved from pre condition tc.');
        StepLogger.verification('It should be saved.');

        StepLogger.stepId(2);
        StepLogger.step('Go to Opportunities -> referral.');
        await HomePageHelper.navigateToReferralsPage();
        StepLogger.verification('Referral page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Verify that opportunity created in Pre condition tc is not displayed on referral page.');
        StepLogger.verification('Opportunity should not be displayed.');
        await ReferralsPageHelper.verifyCurrentNumbersOfReferralsRecords(numberOfReferralsRows);
    });

    // Jira References - COTRAC-4258
    it('To verify that user is able to access Referrals page. - [22961366]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:38 GMT

        StepLogger.caseId = 22961366;
        StepLogger.stepId(1);
        StepLogger.step('Click "Opportunities" menu is displayed in left panel.');
        await HomePage1Helper.clickOnOpportunitiesMenu();
        StepLogger.verification('Sub menus of opportunities should be displayed.');
        await HomePage1Helper.verifyOpportunitiesSubmenuOptions();

        StepLogger.stepId(2);
        StepLogger.step('Verify Referral is displayed under opportunities.');
        StepLogger.verification('It should be displayed.');
        await HomePageHelper.verifyReferralsMenuDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "Referral".');
        await HomePage1Helper.clickOnReferralsMenu();
        StepLogger.verification('"Referrals" page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();
    });

    // Jira References - COTRAC-4269
    it('To verify that validation error message is displayed if contact field is left blank. - [22961376]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:38 GMT

        StepLogger.caseId = 22961376;
        StepLogger.stepId(1);
        StepLogger.step('Go to Opportunities -> Referrals');
        await HomePageHelper.navigateToReferralsPage();
        StepLogger.verification('Referrals page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click "add opportunity".');
        await ReferralsPageHelper.clickOnAddOpportunityButton();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed(false);

        StepLogger.stepId(3);
        StepLogger.step('Click "save" without entering any data.');
        await NewOpportunityPageHelper.clickSaveButton();
        StepLogger.verification('Validation Error message should be displayed.');
        await NewOpportunityPageHelper.verifyValidationMessageDisplayed();
    });

    // Jira References - COTRAC-4270
    it('To verify that validation Error message is displayed if product field is left blank. - [22961377]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:38 GMT

        StepLogger.caseId = 22961377;
        StepLogger.stepId(1);
        StepLogger.step('Go to Opportunities -> Referrals');
        await HomePageHelper.navigateToReferralsPage();
        StepLogger.verification('Referrals page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click "add opportunity".');
        await ReferralsPageHelper.clickOnAddOpportunityButton();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed(false);

        StepLogger.stepId(3);
        StepLogger.step('Click Search besides contact field.');
        await NewOpportunityPageHelper.clickSearchContactIcon();
        StepLogger.verification('"Contact Selector" should be displayed.');
        await NewOpportunityPageHelper.verifyContactSelectorModalIsDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Enter a search criteria and click "search".');
        const criteria = NewCasePageConstant.elementNames.daron;
        await NewOpportunityPageHelper.searchARandomContact(criteria);
        StepLogger.verification('Contact should be searched.');
        await NewOpportunityPageHelper.verifyContactResultsAreDisplayedFromContactDialog();

        StepLogger.stepId(5);
        StepLogger.step(`Select the Contact and Click "User selected contact".
        Click "return to new".`);
        const contact = await NewOpportunityPageHelper.getFirstContactDisplayed();
        await NewOpportunityPageHelper.clickUseSelectedContactOptionAndClickReturnToNew();
        StepLogger.verification('Contact should be add on New opportunity page.');
        await NewOpportunityPageHelper.verifyContactHasBeenSelected(contact);

        StepLogger.stepId(6);
        StepLogger.step('Click "save".');
        await NewOpportunityPageHelper.clickSaveButton();
        StepLogger.verification('Validation Error message should be displayed.');
        await NewOpportunityPageHelper.verifyValidationAlertDisplayed();
    });

    // Jira References - COTRAC-4264
    it('To verify that user is able to group by Outside Business - [22961368]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:38 GMT

        StepLogger.caseId = 22961368;
        StepLogger.stepId(1);
        StepLogger.step('Go to Opportunities -> Referral');
        await HomePageHelper.navigateToReferralsPage();
        StepLogger.verification('Referral Page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('In the user filter select a user which has a list of Referral available.');
        await ReferralsPageHelper.selectUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);
        StepLogger.verification('It should be selected.');
        await ReferralsPageHelper.selectUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);

        StepLogger.stepId(3);
        StepLogger.step('Select "Outside business" in the grouping drop down.');
        await ReferralsPageHelper.selectAValueFromGroupingDropdown(ReferralsConstant.groupingOptions.outsideBusiness);
        StepLogger.verification('The referrals should be grouped on the basis of outside business.');
        await ReferralsPageHelper.verifyRecordsAreGrouped(ReferralsConstant.groupingOptions.outsideBusiness);

        StepLogger.postCondition('Reset grouping');
        await ReferralsPageHelper.selectAValueFromGroupingDropdown(ReferralsConstant.groupingOptions.noGrouping);
    });

    // Jira References - COTRAC-4267
    it('To verify user is able to collapse and expand the groups. - [22961371]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:38 GMT

        StepLogger.caseId = 22961371;
        StepLogger.stepId(1);
        StepLogger.step('Go to Opportunities -> Referral');
        await HomePageHelper.navigateToReferralsPage();
        StepLogger.verification('Referral Page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('In the user filter select a user which has a list of Referral available.');
        await ReferralsPageHelper.selectUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);
        StepLogger.verification('It should be selected.');
        await ReferralsPageHelper.verifySelectedUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);

        StepLogger.stepId(3);
        StepLogger.step('Select "Status in the grouping drop down.');
        await ReferralsPageHelper.selectAValueFromGroupingDropdown(ReferralsConstant.groupingOptions.status);
        StepLogger.verification('The referrals should be grouped on the basis of Status.');
        await ReferralsPageHelper.verifyRecordsAreGrouped(ReferralsConstant.groupingOptions.status);

        StepLogger.stepId(4);
        StepLogger.step('Click "collapse [-]" icon beside the group name.');
        await ReferralsPageHelper.clickOnGroupingIcon(ReferralsConstant.groupingOptions.status);
        StepLogger.verification('Group should be collapsed.');
        await ReferralsPageHelper.verifyGroupIsCollapsed(ReferralsConstant.groupingOptions.status);

        StepLogger.stepId(5);
        StepLogger.step('Click "Expand [+]" icon besides the group name.');
        await ReferralsPageHelper.clickOnGroupingIcon(ReferralsConstant.groupingOptions.status);
        StepLogger.verification('Group should be expanded.');
        await ReferralsPageHelper.verifyGroupIsExpanded(ReferralsConstant.groupingOptions.status);

        StepLogger.postCondition('Reset grouping');
        await ReferralsPageHelper.selectAValueFromGroupingDropdown(ReferralsConstant.groupingOptions.noGrouping);
    });

    // Jira References - COTRAC-4266
    it('To verify that user is able to un group. - [22961370]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 13:34:38 GMT

        StepLogger.caseId = 22961370;
        StepLogger.stepId(1);
        StepLogger.step('Go to Opportunities -> Referral');
        await HomePageHelper.navigateToReferralsPage();
        StepLogger.verification('Referral Page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('In the user filter select a user which has a list of Referral available.');
        await ReferralsPageHelper.selectUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);
        StepLogger.verification('It should be selected.');
        await ReferralsPageHelper.verifySelectedUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);

        StepLogger.stepId(3);
        StepLogger.step('Select "Status" in the grouping drop-down.');
        await ReferralsPageHelper.selectAValueFromGroupingDropdown(ReferralsConstant.groupingOptions.status);
        StepLogger.verification('The referrals should be grouped on the basis of Status.');
        await ReferralsPageHelper.verifyRecordsAreGrouped(ReferralsConstant.groupingOptions.status);

        StepLogger.stepId(4);
        StepLogger.step('Select "No grouping" in the grouping drop down.');
        await ReferralsPageHelper.selectAValueFromGroupingDropdown(ReferralsConstant.groupingOptions.noGrouping);
        StepLogger.verification('The list should be un grouped.');
        await ReferralsPageHelper.verifyRecordsAreUngrouped();
    });

    // Jira References - COTRAC-4273
    it('To verify that user is able to sort the referrals. - [22962787]', async () => {
        // Auto generated by aurea-automation - util on Tue, 16 Apr 2019 13:06:43 GMT

        StepLogger.caseId = 22962787;
        StepLogger.stepId(1);
        StepLogger.step('Go to Opportunities -> Referral');
        await HomePageHelper.navigateToReferralsPage();
        StepLogger.verification('Referral Page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('In the user filter select a user which has a list of Referral available.');
        await ReferralsPageHelper.selectUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);
        StepLogger.verification('It should be selected.');
        await ReferralsPageHelper.verifySelectedUserFromUserFilterDropdown(ReferralsConstant.testData.adminUser);

        StepLogger.stepId(3);
        StepLogger.step('Click "Product type" column name.');
        await ReferralsPageHelper.clickOnReferralsGridColumn(ReferralsConstant.referralsColumns.productType);
        StepLogger.verification('It should be sorted.');
        await ReferralsPageHelper.verifyReferralsGridColumnSortedAsc(ReferralsConstant.referralsColumns.productType);

        StepLogger.stepId(4);
        StepLogger.step('Click "Product" column name.');
        await ReferralsPageHelper.clickOnReferralsGridColumn(ReferralsConstant.referralsColumns.product);
        StepLogger.verification('It should be sorted.');
        await ReferralsPageHelper.verifyReferralsGridColumnSortedAsc(ReferralsConstant.referralsColumns.product);

        StepLogger.stepId(5);
        StepLogger.step('Click "Contact" column name.');
        await ReferralsPageHelper.clickOnReferralsGridColumn(ReferralsConstant.referralsColumns.contact);
        StepLogger.verification('It should be sorted.');
        await ReferralsPageHelper.verifyReferralsGridColumnSortedAsc(ReferralsConstant.referralsColumns.contact);

        StepLogger.stepId(6);
        StepLogger.step('Click "Amount" column name.');
        await ReferralsPageHelper.clickOnReferralsGridColumn(ReferralsConstant.referralsColumns.amount);
        StepLogger.verification('It should be sorted.');
        await ReferralsPageHelper.verifyReferralsGridColumnSortedAsc(ReferralsConstant.referralsColumns.amount);

        StepLogger.stepId(7);
        StepLogger.step('Click "Status" column name.');
        await ReferralsPageHelper.clickOnReferralsGridColumn(ReferralsConstant.referralsColumns.status);
        StepLogger.verification('It should be sorted.');
        await ReferralsPageHelper.verifyReferralsGridColumnSortedAsc(ReferralsConstant.referralsColumns.status);

        StepLogger.stepId(8);
        StepLogger.step('Click "Sales stage" column name.');
        await ReferralsPageHelper.clickOnReferralsGridColumn(ReferralsConstant.referralsColumns.salesStage);
        StepLogger.verification('It should be sorted.');
        await ReferralsPageHelper.verifyReferralsGridColumnSortedAsc(ReferralsConstant.referralsColumns.salesStage);

        StepLogger.stepId(9);
        StepLogger.step('Click "Owner" column name.');
        await ReferralsPageHelper.clickOnReferralsGridColumn(ReferralsConstant.referralsColumns.owner);
        StepLogger.verification('It should be sorted.');
        await ReferralsPageHelper.verifyReferralsGridColumnSortedAsc(ReferralsConstant.referralsColumns.owner);

        StepLogger.stepId(10);
        StepLogger.step('Click "Modified" column name.');
        await ReferralsPageHelper.clickOnReferralsGridColumn(ReferralsConstant.referralsColumns.modified);
        StepLogger.verification('It should be sorted.');
        await ReferralsPageHelper.verifyReferralsGridColumnSortedAsc(ReferralsConstant.referralsColumns.modified);
    });

    // Jira References - COTRAC-4263
    it('To verify the buttons and the grid displayed on Referrals page. - [22961367]', async () => {
        // Auto generated by aurea-automation - util on Tue, 16 Apr 2019 13:06:43 GMT

        StepLogger.caseId = 22961367;
        StepLogger.stepId(1);
        StepLogger.step('Go to Opportunities -> Referrals');
        await HomePageHelper.navigateToReferralsPage();
        StepLogger.verification('Referrals page should be displayed.');
        await ReferralsPageHelper.verifyReferralsPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify the buttons displayed on Opportunities.');
        StepLogger.verification(`It should have following buttons :
        1. Add Opportunity
        2. Refresh
        3. View by All or Unread Only
        4. Grouping
        5. Search by Contact
        6. Export to Excel
        7. Export to Word`);
        await ReferralsPageHelper.verifyReferralsPageButtons();

        StepLogger.stepId(3);
        StepLogger.step('Verify the Column displayed on the grid.');
        StepLogger.verification(`It should display following columns:
        1. Product Type
        2. Product
        3. Contact
        4. Amount
        5. Status
        6. Sales Stage
        7. Owner
        8. Outside
        9. Modified
        10. Qual`);
        await ReferralsPageHelper.verifyReferralsGridColumns();
    });
});
