import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { AccountsOnePageHelper } from '../../../../page-objects/pages/accounts/accounts-one.helper';
import { AccountConstants } from '../../../../page-objects/pages/accounts/accounts.constant';
import { AccountsPageHelper } from '../../../../page-objects/pages/accounts/accounts.helper';
import { ContactPageHelper } from '../../../../page-objects/pages/contact-page/contact-page.helper';
import { HomePage1Helper } from '../../../../page-objects/pages/home-page/home-page1.helper';
import { LoginPageHelper } from '../../../../page-objects/pages/login-page/login-page.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
    });

    // Jira References - COTRAC-2081
    it('Verify that user is able to access Notes tab for an account. - [22946321]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:30 GMT

        StepLogger.caseId = 22946321;
        StepLogger.preCondition('Log in and navigate to Production page and open an account ');
        await LoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Click "Opportunities -> Production"');
        await HomePage1Helper.navigateToProductionPage();
        StepLogger.verification('List of accounts with there production type should be displayed.');
        await AccountsPageHelper.verifyAccountsListDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on any account listed there.');
        await AccountsPageHelper.clickOnAnAccount();
        StepLogger.verification('Accounts detail should be displayed.');
        await AccountsPageHelper.verifyAccountDetailsPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "Notes"');
        await AccountsOnePageHelper.clickNotesTabInSidebar();
        StepLogger.verification('Notes tab should be displayed.');
        await ContactPageHelper.verifyNotesPageIsDisplayed();
    });

    // Jira References - COTRAC-2081
    it('To verify that user is able to access "New Note" page. - [22946324]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:30 GMT

        StepLogger.caseId = 22946324;
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Verify the add note button is displayed on the top left corner.');
        StepLogger.verification('It should be displayed.');
        await ContactPageHelper.verifyNotesPageIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click "Add note"');
        await AccountsOnePageHelper.clickAddNotes();
        StepLogger.verification('"New note" page should be displayed.');
        await AccountsOnePageHelper.verifyNewNoteModalIsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Verify the fields displayed on "New note" page.');
        StepLogger.verification('It should have following fields');
        await AccountsOnePageHelper.verifyNewNotesField();
    });

    // Jira References - COTRAC-2081
    it('To verify that user can save a non private note. - [22946333]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:30 GMT

        StepLogger.caseId = 22946333;
        const uniqueNotes = PageHelper.getUniqueId();
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Click "Add note"');
        await AccountsOnePageHelper.clickAddNotes();
        StepLogger.verification('"New note" page should be displayed.');
        await AccountsOnePageHelper.verifyNewNoteModalIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Enter value in subject field.');
        await ContactPageHelper.enterSubjectOnNewNoteModal(uniqueNotes);
        StepLogger.verification('It should be entered.');
        await AccountsOnePageHelper.verifySubjectOnNewNoteModal(uniqueNotes);

        StepLogger.stepId(3);
        StepLogger.step('Enter value in text field.');
        await ContactPageHelper.enterTextOnNewNoteModal(uniqueNotes);
        StepLogger.verification('It should be entered.');
        await AccountsOnePageHelper.verifyTextOnNewNoteModal(uniqueNotes);

        StepLogger.stepId(4);
        StepLogger.step('Click "save".');
        await ContactPageHelper.clickSaveAndCloseOnNewNoteModal();
        StepLogger.verification('Note should be saved.');
        await ContactPageHelper.verifyNoteIsSavedAndModalIsClosed();
    });

    // Jira References - COTRAC-2081
    it('To verify that user can save a private note. - [22946334]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:30 GMT

        StepLogger.caseId = 22946334;
        const uniqueNotes = PageHelper.getUniqueId();
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Click "Add note"');
        await AccountsOnePageHelper.clickAddNotes();
        StepLogger.verification('"New note" page should be displayed.');
        await AccountsOnePageHelper.verifyNewNoteModalIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Enter value in subject field.');
        await ContactPageHelper.enterSubjectOnNewNoteModal(uniqueNotes);
        StepLogger.verification('It should be entered.');
        await AccountsOnePageHelper.verifySubjectOnNewNoteModal(uniqueNotes);

        StepLogger.stepId(3);
        StepLogger.step('Enter value in text field.');
        await ContactPageHelper.enterTextOnNewNoteModal(uniqueNotes);
        StepLogger.verification('It should be entered.');
        await AccountsOnePageHelper.verifyTextOnNewNoteModal(uniqueNotes);

        StepLogger.stepId(4);
        StepLogger.step('Select "yes" in "Private" option.');
        await AccountsOnePageHelper.clickPrivateOff();
        StepLogger.verification('It should be selected.');
        await AccountsOnePageHelper.verifyPrivateOn();

        StepLogger.stepId(5);
        StepLogger.step('Click "save".');
        await ContactPageHelper.clickSaveAndCloseOnNewNoteModal();
        StepLogger.verification('A private note should be displayed.');
        await ContactPageHelper.verifyNoteIsSavedAndModalIsClosed();
    });

    // Jira References - COTRAC-2081
    it('Verify that user can group by "Related Entity". - [22946341]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:30 GMT

        StepLogger.caseId = 22946341;
        const relatedEntity = AccountConstants.elementNames.relatedEntity;
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Verify the notes page is displayed.');
        StepLogger.verification('It should be displayed.');
        await ContactPageHelper.verifyNotesPageIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify the grouping drop down.');
        StepLogger.verification('It should have related entity option:');
        await AccountsOnePageHelper.verifyGroupingDropDown();

        StepLogger.stepId(3);
        StepLogger.step('Click "related entity" in grouping drop down.');
        await AccountsOnePageHelper.selectGroupingOption(relatedEntity);
        StepLogger.verification('List should be grouped by related entity.');
        await AccountsOnePageHelper.verifySelectedGroupingOption(relatedEntity);
    });

    // Jira References - COTRAC-2081
    it('Verify Validation message when User save New Note without Subject. - [22946331]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:48 GMT

        StepLogger.caseId = 22946331;
        const uniqueNotes = PageHelper.getUniqueId();
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Click "Add note"');
        await AccountsOnePageHelper.clickAddNotes();
        StepLogger.verification('"New note" page should be displayed.');
        await AccountsOnePageHelper.verifyNewNoteModalIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Enter value in text field.');
        await ContactPageHelper.enterTextOnNewNoteModal(uniqueNotes);
        StepLogger.verification('It should be entered.');
        await AccountsOnePageHelper.verifyTextOnNewNoteModal(uniqueNotes);

        StepLogger.stepId(3);
        StepLogger.step('Click "save".');
        await ContactPageHelper.clickSaveOnNewNoteModal();
        StepLogger.verification('Validation Error message should be displayed.');
        await AccountsOnePageHelper.verifySubjectValidationMessage();
    });

    // Jira References - COTRAC-2081
    it('Verify Validation message when User save New Note without Text. - [22946332]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:49 GMT

        StepLogger.caseId = 22946332;
        const uniqueNotes = PageHelper.getUniqueId();
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Click "Add note"');
        await AccountsOnePageHelper.clickAddNotes();
        StepLogger.verification('"New note" page should be displayed.');
        await AccountsOnePageHelper.verifyNewNoteModalIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Enter value in subject field.');
        await ContactPageHelper.enterSubjectOnNewNoteModal(uniqueNotes);
        StepLogger.verification('It should be entered.');
        await AccountsOnePageHelper.verifySubjectOnNewNoteModal(uniqueNotes);

        StepLogger.stepId(3);
        StepLogger.step('Click save.');
        await ContactPageHelper.clickSaveOnNewNoteModal();
        StepLogger.verification('Validation Error message should be displayed.');
        await AccountsOnePageHelper.verifyTextRequiredValidatorMessage();
    });

    // Jira References - COTRAC-2081
    it('To verify that validation error message should be displayed when user clicks save leaving all fields blank. - [22946330]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:49 GMT

        StepLogger.caseId = 22946330;
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Verify the add note button is displayed on the top left corner');
        StepLogger.verification('It should be displayed.');
        await ContactPageHelper.verifyNotesPageIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click "Add note"');
        await AccountsOnePageHelper.clickAddNotes();
        StepLogger.verification('"New note" page should be displayed.');
        await AccountsOnePageHelper.verifyNewNoteModalIsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "save" leaving all fields blank.');
        await ContactPageHelper.clickSaveOnNewNoteModal();
        StepLogger.verification('Validation Error message should be displayed.');
        await AccountsOnePageHelper.verifyRequiredValidatorMessage();
    });
});
