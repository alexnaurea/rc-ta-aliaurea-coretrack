import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { AccountsOnePageHelper } from '../../../../page-objects/pages/accounts/accounts-one.helper';
import { AccountsTwoPageHelper } from '../../../../page-objects/pages/accounts/accounts-two.helper';
import { AccountConstants } from '../../../../page-objects/pages/accounts/accounts.constant';
import { AccountsPageHelper } from '../../../../page-objects/pages/accounts/accounts.helper';
import { ContactPageHelper } from '../../../../page-objects/pages/contact-page/contact-page.helper';
import { HomePage1Helper } from '../../../../page-objects/pages/home-page/home-page1.helper';
import { LoginPageHelper } from '../../../../page-objects/pages/login-page/login-page.helper';
import { NewTaskPageHelper } from '../../../../page-objects/pages/new-task-page/new-task-page.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
    });

    // Jira References - COTRAC-2081
    it('To verify the buttons and grid available on the Notes page. - [22946323]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:49 GMT

        StepLogger.caseId = 22946323;
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Verify the notes page is displayed.');
        StepLogger.verification('It should be displayed.');
        await ContactPageHelper.verifyNotesPageIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify the buttons available on notes page.');
        StepLogger.verification(`It should be have following buttons :
            1. Refresh
            2. Add Note
            3. Select View
            4. Grouping
            5. Export to Excel
            6. Export to Word`);
        await AccountsTwoPageHelper.verifyNotesButton();

        StepLogger.stepId(3);
        StepLogger.step('Verify the grid available on notes page.');
        StepLogger.verification(`Grid should have following columns:
            1. Note
            2. Related Entity
            3. Delete`);
        await AccountsTwoPageHelper.verifyNotesColumn();
    });

    // Jira References - COTRAC-2081
    it('To verify the functionality of close button on "New note" page. - [22946327]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:49 GMT

        StepLogger.caseId = 22946327;
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Click "Add note"');
        await AccountsOnePageHelper.clickAddNotes();
        StepLogger.verification('"New note" page should be displayed.');
        await AccountsOnePageHelper.verifyNewNoteModalIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click Close button.');
        await NewTaskPageHelper.clickClose();
        StepLogger.verification('Warning message should be displayed.');
        await NewTaskPageHelper.verifyConfirmWindow();

        StepLogger.stepId(3);
        StepLogger.step('Click "OK"');
        await NewTaskPageHelper.clickDialogOk();
        StepLogger.verification('"New note" page should be closed.');
        await ContactPageHelper.verifyNotesPageIsDisplayed();
    });

    // Jira References - COTRAC-2081
    it('Verify that User can group Notes list by Read view. - [22946339]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:49 GMT

        StepLogger.caseId = 22946339;
        const readView = AccountConstants.elementNames.readView;
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Verify the notes page is displayed.');
        StepLogger.verification('It should be displayed.');
        await ContactPageHelper.verifyNotesPageIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify the grouping drop down.');
        StepLogger.verification('It should have 2 options:');
        await AccountsTwoPageHelper.verifySelectViewOption();

        StepLogger.stepId(3);
        StepLogger.step('Select Read view.');
        await AccountsTwoPageHelper.selectViewOption(readView);
        StepLogger.verification('Notes should be arranged as read.');
        await AccountsTwoPageHelper.verifySelectedViewOption(readView);
    });

    // Jira References - COTRAC-2081
    it('Verify that user is able to access Accounts details page. - [22946320]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:49 GMT

        StepLogger.caseId = 22946320;
        StepLogger.preCondition('Log in and navigate to Production page and open an account ');
        await LoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Expand the Opportunities menu in the left panel.');
        await HomePage1Helper.clickOnOpportunitiesMenu();
        StepLogger.verification('It should be expanded.');
        await HomePage1Helper.verifyOpportunitiesSubmenuOptions();

        StepLogger.stepId(2);
        StepLogger.step('Click "Production"');
        await HomePage1Helper.clickOnProductionUnderOpportunities();
        StepLogger.verification('List of accounts with there production type should be displayed.');
        await AccountsPageHelper.verifyAccountsListDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on any account listed there.');
        await AccountsPageHelper.clickOnAnAccount();
        StepLogger.verification('Accounts detail should be displayed.');
        await AccountsPageHelper.verifyAccountDetailsPageDisplayed();
    });

    // Jira References - COTRAC-2081
    it('Verify that User can group Notes list by List view. - [22946337]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:50 GMT

        StepLogger.caseId = 22946337;
        const listView = AccountConstants.elementNames.listView;
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Verify the notes page is displayed.');
        StepLogger.verification('It should be displayed.');
        await ContactPageHelper.verifyNotesPageIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify the grouping drop down.');
        StepLogger.verification('It should have 2 options:');
        await AccountsTwoPageHelper.verifySelectViewOption();

        StepLogger.stepId(3);
        StepLogger.step('Select List view.');
        await AccountsTwoPageHelper.selectViewOption(listView);
        StepLogger.verification('Notes should be arranged as list.');
        await AccountsTwoPageHelper.verifySelectedViewOption(listView);
    });

    // Jira References - COTRAC-2081
    it('Verify user can collapse and expand the group. - [22946342]', async () => {
        // Auto generated by aurea-automation - util on Mon, 15 Apr 2019 06:06:50 GMT

        StepLogger.caseId = 22946342;
        const relatedEntity = AccountConstants.elementNames.relatedEntity;
        StepLogger.preCondition('Execute C22946321 to access the notes tab of the account.');
        await AccountsOnePageHelper.navigateToNotes();

        StepLogger.stepId(1);
        StepLogger.step('Verify the notes page is displayed.');
        StepLogger.verification('It should be displayed.');
        await ContactPageHelper.verifyNotesPageIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click "related entity" in grouping drop down.');
        await AccountsOnePageHelper.selectGroupingOption(relatedEntity);
        StepLogger.verification('List should be grouped by related entity.');
        await AccountsOnePageHelper.verifySelectedGroupingOption(relatedEntity);

        StepLogger.stepId(3);
        StepLogger.step('Click [-] collapse button displayed besides the group name.');
        await AccountsTwoPageHelper.clickOnCollapseGroupIcon();
        StepLogger.verification('The group should be collapsed.');
        await AccountsTwoPageHelper.verifyGroupCollapsed();

        StepLogger.stepId(4);
        StepLogger.step('Click [+] expand button displayed besides the group name.');
        await AccountsTwoPageHelper.clickOnExpandGroupIcon();
        StepLogger.verification('The group should be expanded.');
        await AccountsTwoPageHelper.verifyGroupExpanded();
    });
});
