import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { Constants } from '../../../components/misc-utils/constants';
import { RandomHelper } from '../../../components/misc-utils/random-helper';
import { AccountConstants } from '../../../page-objects/pages/accounts/accounts.constant';
import { AccountsPageHelper } from '../../../page-objects/pages/accounts/accounts.helper';
import { HomePage1Helper } from '../../../page-objects/pages/home-page/home-page1.helper';
import { LoginPageHelper } from '../../../page-objects/pages/login-page/login-page.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
    });

    // Jira References - COTRAC-3206
    it('Verify that user is able to access Accounts details page. - [22945974]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22945974;
        StepLogger.preCondition('Log in to the Application');
        await LoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Expand the Opportunities menu in the left panel.');
        await HomePage1Helper.clickOnOpportunitiesMenu();
        StepLogger.verification('It should be expanded.');
        await HomePage1Helper.verifyOpportunitiesSubmenuOptions();

        StepLogger.stepId(2);
        StepLogger.step('Click "Production"');
        await HomePage1Helper.clickOnProductionUnderOpportunities();
        StepLogger.verification('List of accounts with there production type should be displayed.');
        await AccountsPageHelper.verifyAccountsListDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on any account listed there.');
        await AccountsPageHelper.clickOnAnAccount();
        StepLogger.verification('Accounts detail should be displayed.');
        await AccountsPageHelper.verifyAccountDetailsPageDisplayed();
    });

    // Jira References - COTRAC-3288
    it('To verify the title of the opened account. - [22945976]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22945976;
        StepLogger.preCondition('Log in to the Application');
        await LoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Expand the Opportunities menu in the left panel.');
        await HomePage1Helper.clickOnOpportunitiesMenu();
        StepLogger.verification('It should be expanded.');
        await HomePage1Helper.verifyOpportunitiesSubmenuOptions();

        StepLogger.stepId(2);
        StepLogger.step('Click "Production"');
        await HomePage1Helper.clickOnProductionUnderOpportunities();
        StepLogger.verification('List of accounts with there production type should be displayed.');
        await AccountsPageHelper.verifyAccountsListDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on any account listed there.');
        const href = await AccountsPageHelper.clickOnAnAccount();
        StepLogger.verification('Accounts detail should be displayed.');
        await AccountsPageHelper.verifyAccountDetailsPageDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Verify the title of the account.');
        StepLogger.verification(`Title should be :
        "ACCT: [Product_Name] (Contact_Name)"`);
        const product = await AccountsPageHelper.getProductName(href);
        const contact = await AccountsPageHelper.getContactName(href);
        await AccountsPageHelper.verifyAccountDetailsPageTitle(product, contact);
    });

    // Jira References - COTRAC-3289
    it('To verify the buttons and grid available on the Cases page. - [22945986]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22945986;
        StepLogger.preCondition('Log in to the Application');
        await LoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Go to "Opprtunities ->Production"');
        await HomePage1Helper.navigateToProductionPage();
        StepLogger.verification('List of accounts with there production type should be displayed.');
        await AccountsPageHelper.verifyAccountsListDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on any account listed there.');
        await AccountsPageHelper.clickOnAnAccount();
        StepLogger.verification('Accounts detail should be displayed.');
        await AccountsPageHelper.verifyAccountDetailsPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Go to Cases tab.');
        await AccountsPageHelper.clickOnCasesTab();
        StepLogger.verification('Case page should be displayed.');
        await AccountsPageHelper.verifyCasesListDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Verify the buttons on  the cases tab.');
        StepLogger.verification(`The following buttons should be displayed:
        1. Refresh
        2. Add Case
        3. Grouping
        4. Export to Excel
        5.Export to Word`);
        await AccountsPageHelper.verifyCasesPageButtons();

        StepLogger.stepId(5);
        StepLogger.step('Verify the grid on  the cases tab.');
        StepLogger.verification(`The following columns should be displayed:
        1. Opened
        2. Subject
        3. Contact
        4. ACCT
        5. Committed
        6. Priority
        7. Status
        8. Owner
        9. Queue
        10.Queue Branch
        11. Submitter
        12. Category
        13. Sub Category`);
        await AccountsPageHelper.verifyCasesTableColumns();
    });

    // Jira References - COTRAC-3290
    it('To verify that validation error message is displayed when all fields are left blank on new case page. - [22945992]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22945992;
        StepLogger.preCondition('Log in and navigate to Production page and open an account ');
        await LoginPageHelper.loginAsAdmin();
        await AccountsPageHelper.navigateToProductionTabAndOpenAnAccount();

        StepLogger.stepId(1);
        StepLogger.step('Go to Cases tab.');
        await AccountsPageHelper.clickOnCasesTab();
        StepLogger.verification('Case page should be displayed.');
        await AccountsPageHelper.verifyCasesListDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click "Add Case".');
        await AccountsPageHelper.clickOnAddCaseButton();
        StepLogger.verification('New case should be displayed.');
        await AccountsPageHelper.verifyNewCasePageTitle();

        StepLogger.stepId(3);
        StepLogger.step('Click "save" by leaving all fields blank.');
        await AccountsPageHelper.clickOnSaveButton();
        StepLogger.verification('Validation Error message should be displayed.');
        await AccountsPageHelper.verifyValidationRequiredFieldMessageDisplayed();
    });

    // Jira References - COTRAC-3209
    it('To verify that user can save case with Priority "Escalated" and status "Open-Waiting on us". - [22946000]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22946000;
        StepLogger.preCondition('Log in and navigate to Production page and open an account ');
        await LoginPageHelper.loginAsAdmin();
        await AccountsPageHelper.navigateToProductionTabAndOpenAnAccount();

        StepLogger.stepId(1);
        StepLogger.step('Go to Cases tab.');
        await AccountsPageHelper.clickOnCasesTab();
        StepLogger.verification('Case page should be displayed.');
        await AccountsPageHelper.verifyCasesListDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click "Add Case".');
        await AccountsPageHelper.clickOnAddCaseButton();
        StepLogger.verification('New case should be displayed.');
        await AccountsPageHelper.verifyNewCasePageTitle();

        StepLogger.stepId(3);
        StepLogger.step('Enter Subject.');
        const subject = RandomHelper.getRandomString();
        await AccountsPageHelper.typeCaseSubject(subject);
        StepLogger.verification('It should be entered.');
        await AccountsPageHelper.verifyCaseSubject(subject);

        StepLogger.stepId(4);
        StepLogger.step('Enter description.');
        const description = RandomHelper.getRandomString();
        await AccountsPageHelper.typeDescription(description);
        StepLogger.verification('It should be entered.');
        await AccountsPageHelper.verifyDescription(description);

        StepLogger.stepId(5);
        StepLogger.step('Select a category and a sub category.');
        const category = await AccountsPageHelper.selectCategoryByIndex(Constants.number.two);
        const subcategory = await AccountsPageHelper.selectSubCategoryByIndex(Constants.number.two);
        StepLogger.verification('It should be selected.');
        await AccountsPageHelper.verifySelectedCategory(category);
        await AccountsPageHelper.verifySelectedSubCategory(subcategory);

        StepLogger.stepId(6);
        StepLogger.step('Select "Escalated" in priority field.');
        await AccountsPageHelper.selectPriority(AccountConstants.priorityValues.escalated);
        StepLogger.verification('It should be selected.');
        await AccountsPageHelper.verifySelectedPriority(AccountConstants.priorityValues.escalated);

        StepLogger.stepId(7);
        StepLogger.step('Enter "Open-Waiting on us" in status field.');
        await AccountsPageHelper.selectStatus(AccountConstants.status.openWaitingOnUs);
        StepLogger.verification('It should be selected.');
        await AccountsPageHelper.verifySelectedStatus(AccountConstants.status.openWaitingOnUs);

        StepLogger.stepId(8);
        StepLogger.step('Click "save".');
        await AccountsPageHelper.clickOnSaveButton();
        StepLogger.verification('Case should be saved.');
        await AccountsPageHelper.verifyNoValidationRequiredFieldMessageDisplayed();

        StepLogger.stepId(9);
        StepLogger.step('Verify that case is also displayed in case tab.');
        StepLogger.verification('It should be displayed.');
        await AccountsPageHelper.verifyCaseFromCasesPageDisplayed(subject);
    });

    // Jira References - COTRAC-3291
    it('To verify that user is able to group cases by status. - [22946046]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22946046;
        StepLogger.preCondition('Log in and navigate to Production page and open an account ');
        await LoginPageHelper.loginAsAdmin();
        await AccountsPageHelper.navigateToProductionTabAndOpenAnAccount();

        StepLogger.stepId(1);
        StepLogger.step('Go to Cases tab');
        await AccountsPageHelper.clickOnCasesTab();
        StepLogger.verification('Case tab should be displayed.');
        await AccountsPageHelper.verifyCasesListDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify the grouping drop down is displayed on cases page.');
        StepLogger.verification('Grouping drop down should be displayed.');
        await AccountsPageHelper.verifyGroupingDropdownDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Select Status in grouping drop down.');
        await AccountsPageHelper.selectGroupingOption(AccountConstants.groupingOptions.status);
        StepLogger.verification('The list of cases should be grouped by status.');
        await AccountsPageHelper.verifyRecordsGrouped();
    });

    // Jira References - COTRAC-3292
    it('To verify that user can save case with status "Closed - No resolution offered". - [22946041]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22946041;
        StepLogger.preCondition('Sign in');
        await LoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Go to Cases tab-> Add case.');
        await AccountsPageHelper.navigateToNewCasePage();
        StepLogger.verification('New case should be displayed.');
        await AccountsPageHelper.verifyNewCasePageTitle();

        StepLogger.stepId(2);
        StepLogger.step('Enter Subject.');
        const subject = RandomHelper.getRandomString();
        await AccountsPageHelper.typeCaseSubject(subject);
        StepLogger.verification('It should be entered.');
        await AccountsPageHelper.verifyCaseSubject(subject);

        StepLogger.stepId(3);
        StepLogger.step('Enter description.');
        const description = RandomHelper.getRandomString();
        await AccountsPageHelper.typeDescription(description);
        StepLogger.verification('It should be entered.');
        await AccountsPageHelper.verifyDescription(description);

        StepLogger.stepId(4);
        StepLogger.step('Select a category and a sub category.');
        const category = await AccountsPageHelper.selectCategoryByIndex(Constants.number.two);
        const subCategory = await AccountsPageHelper.selectSubCategoryByIndex(Constants.number.two);
        StepLogger.verification('It should be selected.');
        await AccountsPageHelper.verifySelectedCategory(category);
        await AccountsPageHelper.verifySelectedSubCategory(subCategory);

        StepLogger.stepId(5);
        StepLogger.step('Enter "Closed - No resolution offered" in status field.');
        await AccountsPageHelper.selectStatus(AccountConstants.status.closedNoResolutionOffered);
        StepLogger.verification('It should be selected.');
        await AccountsPageHelper.verifySelectedStatus(AccountConstants.status.closedNoResolutionOffered);

        StepLogger.stepId(6);
        StepLogger.step('Click "save".');
        await AccountsPageHelper.clickOnSaveButton();
        StepLogger.verification('Case should be saved.');
        await AccountsPageHelper.verifyNoValidationRequiredFieldMessageDisplayed();

        StepLogger.stepId(7);
        StepLogger.step('Verify that case is also displayed in case tab.');
        StepLogger.verification('It should be displayed.');
        await AccountsPageHelper.verifyCaseFromCasesPageDisplayed(subject);
    });

    // Jira References - COTRAC-3293
    it('To verify the functionality of save and add button. - [22946044]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22946044;
        StepLogger.preCondition('Sign in');
        await LoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Go to Cases tab-> Add case.');
        await AccountsPageHelper.navigateToNewCasePage();
        StepLogger.verification('New case should be displayed.');
        await AccountsPageHelper.verifyNewCasePageTitle();

        StepLogger.stepId(2);
        StepLogger.step('Enter Subject.');
        const subject = RandomHelper.getRandomString();
        await AccountsPageHelper.typeCaseSubject(subject);
        StepLogger.verification('It should be entered.');
        await AccountsPageHelper.verifyCaseSubject(subject);

        StepLogger.stepId(3);
        StepLogger.step('Enter description.');
        const description = RandomHelper.getRandomString();
        await AccountsPageHelper.typeDescription(description);
        StepLogger.verification('It should be entered.');
        await AccountsPageHelper.verifyDescription(description);

        StepLogger.stepId(4);
        StepLogger.step('Select a category and a sub category.');
        const category = await AccountsPageHelper.selectCategoryByIndex(Constants.number.two);
        const subCategory = await AccountsPageHelper.selectSubCategoryByIndex(Constants.number.two);
        StepLogger.verification('It should be selected.');
        await AccountsPageHelper.verifySelectedCategory(category);
        await AccountsPageHelper.verifySelectedSubCategory(subCategory);

        StepLogger.stepId(5);
        StepLogger.step('Click "save and add" button.');
        await AccountsPageHelper.clickOnSaveAndAddButton();
        StepLogger.verification('The case should be saved and a new case page should be displayed.');
        await AccountsPageHelper.verifyNoValidationRequiredFieldMessageDisplayed();
        await AccountsPageHelper.verifyNewCasePageTitle(Constants.number.two);
    });

    // Jira References - COTRAC-3211
    it('To verify that user can save case with status "Closed without resolution". - [22946035]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22946035;
        StepLogger.preCondition('Sign in');
        await LoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Go to Cases tab-> Add case.');
        await AccountsPageHelper.navigateToNewCasePage();
        StepLogger.verification('New case should be displayed.');
        await AccountsPageHelper.verifyNewCasePageTitle();

        StepLogger.stepId(2);
        StepLogger.step('Enter Subject.');
        const subject = RandomHelper.getRandomString();
        await AccountsPageHelper.typeCaseSubject(subject);
        StepLogger.verification('It should be entered.');
        await AccountsPageHelper.verifyCaseSubject(subject);

        StepLogger.stepId(3);
        StepLogger.step('Enter description.');
        const description = RandomHelper.getRandomString();
        await AccountsPageHelper.typeDescription(description);
        StepLogger.verification('It should be entered.');
        await AccountsPageHelper.verifyDescription(description);

        StepLogger.stepId(4);
        StepLogger.step('Select a category and a sub category.');
        const category = await AccountsPageHelper.selectCategoryByIndex(Constants.number.two);
        const subCategory = await AccountsPageHelper.selectSubCategoryByIndex(Constants.number.two);
        StepLogger.verification('It should be selected.');
        await AccountsPageHelper.verifySelectedCategory(category);
        await AccountsPageHelper.verifySelectedSubCategory(subCategory);

        StepLogger.stepId(5);
        StepLogger.step('Enter "Closed without resolution" in status field.');
        await AccountsPageHelper.selectStatus(AccountConstants.status.closedWithoutResolution);
        StepLogger.verification('It should be selected.');
        await AccountsPageHelper.verifySelectedStatus(AccountConstants.status.closedWithoutResolution);

        StepLogger.stepId(6);
        StepLogger.step('Click "save".');
        await AccountsPageHelper.clickOnSaveButton();
        StepLogger.verification('Case should be saved.');
        await AccountsPageHelper.verifyNoValidationRequiredFieldMessageDisplayed();

        StepLogger.stepId(7);
        StepLogger.step('Verify that case is also displayed in case tab.');
        StepLogger.verification('It should be displayed.');
        await AccountsPageHelper.verifyCaseFromCasesPageDisplayed(subject);
    });

    // Jira References - COTRAC-3294
    it('To verify that user is able to group cases by Priority. - [22946047]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22946047;
        StepLogger.preCondition('Log in and navigate to Production page and open an account ');
        await LoginPageHelper.loginAsAdmin();
        await AccountsPageHelper.navigateToProductionTabAndOpenAnAccount();

        StepLogger.stepId(1);
        StepLogger.step('Go to Cases tab');
        await AccountsPageHelper.clickOnCasesTab();
        StepLogger.verification('Case tab should be displayed.');
        await AccountsPageHelper.verifyCasesListDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify the grouping drop down is displayed on cases page.');
        StepLogger.verification('Grouping drop down should be displayed.');
        await AccountsPageHelper.verifyGroupingDropdownDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Select Priority in grouping drop down.');
        await AccountsPageHelper.selectGroupingOption(AccountConstants.groupingOptions.priority);
        StepLogger.verification('The list of cases should be grouped by Priority.');
        await AccountsPageHelper.verifyRecordsGrouped();
    });

    // Jira References - COTRAC-3296
    it('To verify the functionality of close button displayed on new cases page. - [22945998]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Mar 2019 09:28:04 GMT

        StepLogger.caseId = 22945998;
        StepLogger.preCondition('Log in and navigate to Production page and open an account ');
        await LoginPageHelper.loginAsAdmin();
        await AccountsPageHelper.navigateToProductionTabAndOpenAnAccount();

        StepLogger.stepId(1);
        StepLogger.step('Go to Cases tab.');
        await AccountsPageHelper.clickOnCasesTab();
        StepLogger.verification('Case page should be displayed.');
        await AccountsPageHelper.verifyCasesListDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click "Add Case".');
        await AccountsPageHelper.clickOnAddCaseButton();
        StepLogger.verification('New case should be displayed.');
        await AccountsPageHelper.verifyNewCasePageTitle();

        StepLogger.stepId(3);
        StepLogger.step('Click "Close" button.');
        await AccountsPageHelper.clickOnCloseButton();
        StepLogger.verification('Warning message should be displayed.');
        await AccountsPageHelper.verifyWarningMessageDisplayedAndAcceptIt();

        // Step 4 is covered in step 3
        StepLogger.stepId(4);
        StepLogger.step('Click "OK".');
        StepLogger.verification('"New case" page should be closed.');
        await AccountsPageHelper.verifyPageClosed(Constants.number.two);
    });
});
