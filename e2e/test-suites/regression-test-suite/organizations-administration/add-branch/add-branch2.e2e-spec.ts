import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { RandomHelper } from '../../../../components/misc-utils/random-helper';
import { BranchesConstants } from '../../../../page-objects/pages/administration/organization/branches/branches.constants';
import { BranchesHelper } from '../../../../page-objects/pages/administration/organization/branches/branches.helper';
import { HomePageHelper } from '../../../../page-objects/pages/home-page/home-page.helper';
import { HomePage1Helper } from '../../../../page-objects/pages/home-page/home-page1.helper';
import { LoginPageHelper } from '../../../../page-objects/pages/login-page/login-page.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    it('To verify that a user can save an active branch by entering data only in mandatory fields. - [22431169]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Mar 2019 11:07:57 GMT

        StepLogger.caseId = 22431169;
        const value = await PageHelper.getUniqueId();
        const activeStatus = BranchesConstants.activeStatus;

        StepLogger.preCondition('Execute C22431158 to reach to Add new Branch page.');
        await BranchesHelper.navigateToNewBranchPage();

        StepLogger.stepId(1);
        StepLogger.step('Enter Branch code.');
        await BranchesHelper.enterCode(value);
        StepLogger.verification('Branch code should be entered.');
        await BranchesHelper.verifyEnteredCode(value);

        StepLogger.stepId(2);
        StepLogger.step('Enter name .');
        await BranchesHelper.enterName(value);
        StepLogger.verification('Name should be entered.');
        await BranchesHelper.verifyEnteredName(value);

        StepLogger.stepId(3);
        StepLogger.step('Select Active in Status field.');
        await BranchesHelper.selectAStatusFromDropDown(activeStatus);
        StepLogger.verification('Active should be selected.');
        await BranchesHelper.verifyStatusSelected(activeStatus);

        StepLogger.stepId(4);
        StepLogger.step('Click "save".');
        await BranchesHelper.clickOnSave();
        StepLogger.verification('Branch should be saved and listed in the branch list on Manage Branches page.');
        await BranchesHelper.verifyNewBranchScreenClosed();
    });

    it('To verify that branch is saved by entering data in all the fields. - [22431170]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Mar 2019 11:54:56 GMT

        StepLogger.caseId = 22431170;
        const value = await PageHelper.getUniqueId();
        const value1 = await RandomHelper.getRandomString(2);
        const activeStatus = BranchesConstants.activeStatus;
        const region = BranchesConstants.defaultRegion;

        StepLogger.preCondition('Execute C22431158 to reach to Add new Branch page.');
        await BranchesHelper.navigateToNewBranchPage();

        StepLogger.stepId(1);
        StepLogger.step('Enter Branch code.');
        await BranchesHelper.enterCode(value);
        StepLogger.verification('Branch code should be entered.');
        await BranchesHelper.verifyEnteredCode(value);

        StepLogger.stepId(2);
        StepLogger.step('Enter name .');
        await BranchesHelper.enterName(value);
        StepLogger.verification('Name should be entered.');
        await BranchesHelper.verifyEnteredName(value);

        StepLogger.stepId(3);
        StepLogger.step('Select region');
        await BranchesHelper.selectARegionFromDropDown(region);
        StepLogger.verification('Region should be selected.');
        await BranchesHelper.verifyRegionSelected(region);

        StepLogger.stepId(4);
        StepLogger.step('Enter values in all the address fields.');
        await BranchesHelper.enterValuesInAllAddressFields(value, value1);
        StepLogger.verification('Values should be added.');
        await BranchesHelper.verifyEnteredAdresses(value, value1);

        StepLogger.stepId(5);
        StepLogger.step('Enter phone number');
        await BranchesHelper.enterPhoneNumber(value);
        StepLogger.verification('It should be entered.');
        await BranchesHelper.verifyEnteredPhoneNumber(value);

        StepLogger.stepId(6);
        StepLogger.step('Enter FAX');
        await BranchesHelper.enterFax(value);
        StepLogger.verification('It should be entered.');
        await BranchesHelper.verifyEnteredFax(value);

        StepLogger.stepId(7);
        StepLogger.step('Enter Description.');
        await BranchesHelper.enterDescription(value);
        StepLogger.verification('It should be updated.');
        await BranchesHelper.verifyEnteredDescription(value);

        StepLogger.stepId(8);
        StepLogger.step('Select a status.');
        await BranchesHelper.selectAStatusFromDropDown(activeStatus);
        StepLogger.verification('Status should be selected.');
        await BranchesHelper.verifyStatusSelected(activeStatus);

        StepLogger.stepId(9);
        StepLogger.step('Click "save"');
        await BranchesHelper.clickOnSave();
        StepLogger.verification('It should be saved.');
        await BranchesHelper.verifyNewBranchScreenClosed();
    });

    it('To verify that a user can save an inactive branch by entering data only in mandatory fields. - [22431175]', async () => {
        // Auto generated by aurea-automation - util on Thu, 28 Mar 2019 05:02:49 GMT

        StepLogger.caseId = 22431175;
        const value = await PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22431158 to reach to Add new Branch page.');
        await BranchesHelper.navigateToNewBranchPage();

        StepLogger.stepId(1);
        StepLogger.step('Enter Branch code.');
        await BranchesHelper.enterCode(value);
        StepLogger.verification('Branch code should be entered.');
        await BranchesHelper.verifyEnteredCode(value);

        StepLogger.stepId(2);
        StepLogger.step('Enter name .');
        await BranchesHelper.enterName(value);
        StepLogger.verification('Name should be entered.');
        await BranchesHelper.verifyEnteredName(value);

        StepLogger.stepId(3);
        StepLogger.step('Click "save"');
        await BranchesHelper.clickOnSave();
        StepLogger.verification('The branch should be saved.');
        await BranchesHelper.verifyNewBranchScreenClosed();
    });

    it('To verify the functionality of cancel button on Add branch page. - [22431163]', async () => {
        // Auto generated by aurea-automation - util on Thu, 28 Mar 2019 05:16:17 GMT

        StepLogger.caseId = 22431163;
        StepLogger.stepId(1);
        StepLogger.step('Click "Administration->Organization" displayed under administration.');
        await HomePageHelper.clickAdministrationLink();
        await HomePageHelper.clickOrganizationUnderAdministration();
        StepLogger.verification('Item available under Organization should be displayed.');
        await HomePageHelper.optionsUnderOrganization();

        StepLogger.stepId(2);
        StepLogger.step('Click "Branches"');
        await HomePage1Helper.clickBranchesUnderOrganization();
        StepLogger.verification('"Manage Branches" page should be displayed.');
        await BranchesHelper.verifyManageBranchesPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "Add Branch"');
        await BranchesHelper.clickOnAddBranch();
        StepLogger.verification('"New Branch" page should be displayed.');
        await BranchesHelper.verifyNewBranchScreenDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Click "Cancel" button.');
        await BranchesHelper.clickOnCancel();
        StepLogger.verification('No branch should be saved and new branch form should be closed.');
        await BranchesHelper.verifyNewBranchScreenClosed();
    });

    it('To verify the validation Error message is displayed when user clicks save leaving all the mandatory fields blank. - [22431164]', async () => {
        // Auto generated by aurea-automation - util on Thu, 28 Mar 2019 05:16:17 GMT

        StepLogger.caseId = 22431164;
        const error = BranchesConstants.errorMessages.code;

        StepLogger.stepId(1);
        StepLogger.step('Click "Administration->Organization" displayed under administration.');
        await HomePageHelper.clickAdministrationLink();
        await HomePageHelper.clickOrganizationUnderAdministration();
        StepLogger.verification('Item available under Organization should be displayed.');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(2);
        StepLogger.step('Click "Branches"');
        await HomePage1Helper.clickBranchesUnderOrganization();
        StepLogger.verification('"Manage Branches" page should be displayed.');
        await BranchesHelper.verifyManageBranchesPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "Add Branch"');
        await BranchesHelper.clickOnAddBranch();
        StepLogger.verification('"New Branch" page should be displayed.');
        await BranchesHelper.verifyNewBranchScreenDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Click "save" without entering data in mandatory field.');
        await BranchesHelper.clickOnSave();
        StepLogger.verification('Validation Error message should be displayed.');
        await BranchesHelper.verifyValidationError(error);
    });

    it('To verify the validation error when branch code is left blank. - [22431167]', async () => {
        // Auto generated by aurea-automation - util on Thu, 28 Mar 2019 06:16:34 GMT

        StepLogger.caseId = 22431167;
        const value = await PageHelper.getUniqueId();
        const error = BranchesConstants.errorMessages.code;

        StepLogger.stepId(1);
        StepLogger.step('Click "Administration->Organization" displayed under administration.');
        await HomePageHelper.clickAdministrationLink();
        await HomePageHelper.clickOrganizationUnderAdministration();
        StepLogger.verification('Item available under Organization should be displayed.');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(2);
        StepLogger.step('Click "Branches"');
        await HomePage1Helper.clickBranchesUnderOrganization();
        StepLogger.verification('"Manage Branches" page should be displayed.');
        await BranchesHelper.verifyManageBranchesPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "Add Branch"');
        await BranchesHelper.clickOnAddBranch();
        StepLogger.verification('"New Branch" page should be displayed.');
        await BranchesHelper.verifyNewBranchScreenDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Enter data in name field and Click "Save".');
        await BranchesHelper.enterName(value);
        await BranchesHelper.clickOnSave();
        StepLogger.verification('Validation Error message should be displayed.');
        await BranchesHelper.verifyValidationError(error);
    });

    it('To verify the validation error when name field is left blank. - [22431168]', async () => {
        // Auto generated by aurea-automation - util on Thu, 28 Mar 2019 07:44:11 GMT

        StepLogger.caseId = 22431168;
        const value = await PageHelper.getUniqueId();
        const error = BranchesConstants.errorMessages.name;

        StepLogger.stepId(1);
        StepLogger.step('Click "Administration->Organization" displayed under administration.');
        await HomePageHelper.clickAdministrationLink();
        await HomePageHelper.clickOrganizationUnderAdministration();
        StepLogger.verification('Item available under Organization should be displayed.');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(2);
        StepLogger.step('Click "Branches"');
        await HomePage1Helper.clickBranchesUnderOrganization();
        StepLogger.verification('"Manage Branches" page should be displayed.');
        await BranchesHelper.verifyManageBranchesPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "Add Branch"');
        await BranchesHelper.clickOnAddBranch();
        StepLogger.verification('"New Branch" page should be displayed.');
        await BranchesHelper.verifyNewBranchScreenDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Enter data in Branch code field and Click "save".');
        await BranchesHelper.enterCode(value);
        await BranchesHelper.clickOnSave();
        StepLogger.verification('Validation Error message should be displayed.');
        await BranchesHelper.verifyValidationError(error);
    });
});
