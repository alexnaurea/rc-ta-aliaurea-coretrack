import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { RandomHelper } from '../../../components/misc-utils/random-helper';
import { ContactPageOneHelper } from '../../../page-objects/pages/contact-page/contact-page-one.helper';
import { ContactPageHelper } from '../../../page-objects/pages/contact-page/contact-page.helper';
import { HomePageOneHelper } from '../../../page-objects/pages/home-page/home-page-one.helper';
import { HomePageHelper } from '../../../page-objects/pages/home-page/home-page.helper';
import { HomePage } from '../../../page-objects/pages/home-page/home-page.po';
import { LoginPageHelper } from '../../../page-objects/pages/login-page/login-page.helper';
import { NewProspectPageHelper } from '../../../page-objects/pages/new-prospect-page/new-prospect-page.helper';
import { NewProspectPage } from '../../../page-objects/pages/new-prospect-page/new-prospect-page.po';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
    });

    // Jira References - COTRAC-2071
    it('Verify user is able to login and verify search button is appearing on the Home page. - [22998297]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 07:33:37 GMT

        StepLogger.caseId = 22998297;
        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        const uniqueName = PageHelper.getUniqueId();
        await NewProspectPageHelper.navigateAndAddExistingProspect(uniqueName);

        StepLogger.stepId(1);
        StepLogger.step('Verify Search button is appearing on the top right side of the page.');
        StepLogger.verification('Search button should be appearing on the top right side of the home page');
        await HomePageHelper.verifySearchButtonIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify user clicks on Search button.');
        await HomePageHelper.clickSearchButton();
        StepLogger.verification('Search text box should appear .');
        await HomePageHelper.verifySearchBox();

        StepLogger.stepId(3);
        StepLogger.step('Enter search criteria.');
        await HomePageHelper.enterSearchCriteria(uniqueName);
        StepLogger.verification('SEarch criteria should be entered.');
        await HomePageHelper.verifySearchCriteriaIsEntered(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Verify user clicks on the search button');
        await HomePageHelper.clickSearchButton();
        StepLogger.verification('Search result should be returned.');
        await HomePageHelper.verifyContactCardIsDisplayed(uniqueName);
    });

    // Jira References - COTRAC-2071
    it('Search Retail Prospect and verify Search result. - [22998299]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 07:33:37 GMT

        StepLogger.caseId = 22998299;
        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        const uniqueName = PageHelper.getUniqueId();
        await NewProspectPageHelper.navigateAndSearchProspect(uniqueName);

        StepLogger.stepId(1);
        StepLogger.step('Verify Contact name should be appearing in green');
        StepLogger.verification('Contact Name should be appearing on the top of the search result.');
        await HomePageHelper.verifyContactCardIsDisplayed(uniqueName);

        StepLogger.stepId(2);
        StepLogger.step('Verify Address of the contact is appearing on the search result.');
        StepLogger.verification('Address of the contact should be  appearing on the search result.');
        await HomePage.cardDetail.address.verifyDisplayedStatus();

        StepLogger.stepId(3);
        StepLogger.step('Verify Email of the contact is appearing on the search result.');
        StepLogger.verification('Email of the contact should be appearing on the search result.');
        await HomePage.cardDetail.email.verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Verify  Work and Home number is appearing on the search result');
        StepLogger.verification('Work and Home number should be appearing on the search result');
        await HomePageOneHelper.verifyWorkAndHomePhone();

        StepLogger.stepId(5);
        StepLogger.step('Verify SSN is appearing on the search result');
        StepLogger.verification('SSN should be appearing on the search result');
        await HomePage.cardDetail.ssn.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-2071
    it('Verify user edits Company name and save the contact. - [22998305]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 07:33:37 GMT

        StepLogger.caseId = 22998305;
        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        const uniqueName = PageHelper.getUniqueId();
        const editText = PageHelper.getUniqueId();
        await NewProspectPageHelper.navigateAndAddExistingProspect(uniqueName);

        StepLogger.stepId(1);
        StepLogger.step('Verify Search button is appearing on the top right side of the page.');
        StepLogger.verification('Search button should be appearing on the top right side of the home page');
        await HomePageHelper.verifySearchButtonIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify user clicks on Search button.');
        await HomePageHelper.clickSearchButton();
        StepLogger.verification('SEarch criteria should be entered.');
        await HomePageHelper.verifySearchBox();

        StepLogger.stepId(3);
        StepLogger.step('Verify user clicks on the search button');
        await HomePageHelper.enterSearchTextAndClicksearch(uniqueName);
        StepLogger.verification('Search result should be returned.');
        await HomePageHelper.verifyContactCardIsDisplayed(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Click on the Search result');
        await HomePageHelper.clickOnSearchResult(uniqueName);
        StepLogger.verification(`A new page should open in a  new tab and contact name heading
            should be appearing on the top of the page. Overview tab should be open.`);
        await ContactPageHelper.verifyOverviewIsDisplayed(false);

        StepLogger.stepId(5);
        StepLogger.step('Update Company');
        await NewProspectPage.form.information.companyName.sendKeys(editText);
        StepLogger.verification('Company should be updated.');
        await NewProspectPage.form.information.companyName.verifyTextEntered(editText);

        StepLogger.stepId(6);
        StepLogger.step('Click on the Save button');
        await NewProspectPageHelper.clickSaveButton();
        StepLogger.verification('Screen should refresh and first name should update.');
        await NewProspectPage.form.information.companyName.verifyTextEntered(editText);
    });

    // Jira References - COTRAC-2071
    it('Verify user updates and save Email 1. - [22998309]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 07:33:37 GMT

        StepLogger.caseId = 22998309;
        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        const uniqueName = PageHelper.getUniqueId();
        const editText = RandomHelper.getRandomEmail();
        await NewProspectPageHelper.navigateAndAddExistingProspect(uniqueName);

        StepLogger.stepId(1);
        StepLogger.step('Verify Search button is appearing on the top right side of the page.');
        StepLogger.verification('Search button should be appearing on the top right side of the home page');
        await HomePageHelper.verifySearchButtonIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify user clicks on Search button.');
        await HomePageHelper.clickSearchButton();
        StepLogger.verification('SEarch criteria should be entered.');
        await HomePageHelper.verifySearchBox();

        StepLogger.stepId(3);
        StepLogger.step('Verify user clicks on the search button');
        await HomePageHelper.enterSearchTextAndClicksearch(uniqueName);
        StepLogger.verification('Search result should be returned.');
        await HomePageHelper.verifyContactCardIsDisplayed(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Click on the Search result');
        await HomePageHelper.clickOnSearchResult(uniqueName);
        StepLogger.verification(`A new page should open in a  new tab and contact name heading
            should be appearing on the top of the page. Overview tab should be open.`);
        await ContactPageHelper.verifyOverviewIsDisplayed(false);

        StepLogger.stepId(5);
        StepLogger.step('update the Email 1');
        await NewProspectPage.form.information.emailOne.sendKeys(editText);
        StepLogger.verification('Email 1 value should be updated.');
        await NewProspectPage.form.information.emailOne.verifyTextEntered(editText);

        StepLogger.stepId(6);
        StepLogger.step('Click on the Save button');
        await NewProspectPageHelper.clickSaveButton();
        StepLogger.verification('Screen should refresh and first name should update.');
        await NewProspectPage.form.information.emailOne.verifyTextEntered(editText);
    });

    // Jira References - COTRAC-2071
    it('Verify user updates and save Email 2. - [22998310]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 07:33:37 GMT

        StepLogger.caseId = 22998310;
        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        const uniqueName = PageHelper.getUniqueId();
        const editText = RandomHelper.getRandomEmail();
        await NewProspectPageHelper.navigateAndAddExistingProspect(uniqueName);

        StepLogger.stepId(1);
        StepLogger.step('Verify Search button is appearing on the top right side of the page.');
        StepLogger.verification('Search button should be appearing on the top right side of the home page');
        await HomePageHelper.verifySearchButtonIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify user clicks on Search button.');
        await HomePageHelper.clickSearchButton();
        StepLogger.verification('SEarch criteria should be entered.');
        await HomePageHelper.verifySearchBox();

        StepLogger.stepId(3);
        StepLogger.step('Verify user clicks on the search button');
        await HomePageHelper.enterSearchTextAndClicksearch(uniqueName);
        StepLogger.verification('Search result should be returned.');
        await HomePageHelper.verifyContactCardIsDisplayed(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Click on the Search result');
        await HomePageHelper.clickOnSearchResult(uniqueName);
        StepLogger.verification(`A new page should open in a  new tab and contact name heading
            should be appearing on the top of the page. Overview tab should be open.`);
        await ContactPageHelper.verifyOverviewIsDisplayed(false);

        StepLogger.stepId(5);
        StepLogger.step('update the Email 2');
        await NewProspectPage.form.information.emailTwo.sendKeys(editText);
        StepLogger.verification('Email 2 value should be updated.');
        await NewProspectPage.form.information.emailTwo.verifyTextEntered(editText);

        StepLogger.stepId(6);
        StepLogger.step('Click on the Save button');
        await NewProspectPageHelper.clickSaveButton();
        StepLogger.verification('Screen should refresh and Email 2 should update.');
        await NewProspectPage.form.information.emailTwo.verifyTextEntered(editText);
    });

    // Jira References - COTRAC-2071
    it('Click on Add Account button and click on Cancel button. - [22998314]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 07:33:37 GMT

        StepLogger.caseId = 22998314;
        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        const uniqueName = PageHelper.getUniqueId();
        await NewProspectPageHelper.navigateAndAddExistingProspect(uniqueName);

        StepLogger.stepId(1);
        StepLogger.step('Verify Search button is appearing on the top right side of the page.');
        StepLogger.verification('Search button should be appearing on the top right side of the home page');
        await HomePageHelper.verifySearchButtonIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify user clicks on Search button.');
        await HomePageHelper.clickSearchButton();
        StepLogger.verification('Search criteria should be entered.');
        await HomePageHelper.verifySearchBox();

        StepLogger.stepId(3);
        StepLogger.step('Verify user clicks on the search button');
        await HomePageHelper.enterSearchTextAndClicksearch(uniqueName);
        StepLogger.verification('Search result should be returned.');
        await HomePageHelper.verifyContactCardIsDisplayed(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Click on the Search result');
        await HomePageHelper.clickOnSearchResult(uniqueName);
        StepLogger.verification(`A new page should open in a  new tab and contact name heading
            should be appearing on the top of the page. Overview tab should be open.`);
        await ContactPageHelper.verifyOverviewIsDisplayed(false);

        StepLogger.stepId(5);
        StepLogger.step('Click on the Profile tab.');
        await ContactPageHelper.clickProfileTab();
        StepLogger.verification('Profile tab should open');
        await ContactPageHelper.verifyProfileTabIsDisplayed();

        StepLogger.stepId(6);
        StepLogger.step('Verify Outside Accounts table is appearing on the profile tab');
        StepLogger.verification('Outside Accounts table should be appearing on the profile tab.');
        await ContactPageHelper.verifyOutsideAccountsTableIsDisplayed();

        StepLogger.stepId(7);
        StepLogger.step('Verify user clicks on the "Add Account" button');
        await ContactPageHelper.clickAddAccount();
        StepLogger.verification('"New Outside Account" pop up should appear');
        await ContactPageHelper.verifyNewOutsideAccountModalIsDisplayed();

        StepLogger.stepId(8);
        StepLogger.step('Click on cancel button');
        await ContactPageOneHelper.clickCancel();
        StepLogger.verification('"New Outside Account" pop up should close');
        await ContactPageHelper.verifyProfileTabIsDisplayed();
    });

    // Jira References - COTRAC-2071
    it('Verify user adds Add Account information and clicks on Save button. - [22998315]', async () => {
        // Auto generated by aurea-automation - util on Fri, 05 Apr 2019 07:33:37 GMT

        StepLogger.caseId = 22998315;
        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        const uniqueName = PageHelper.getUniqueId();
        await NewProspectPageHelper.navigateAndAddExistingProspect(uniqueName);

        StepLogger.stepId(1);
        StepLogger.step('Verify Search button is appearing on the top right side of the page.');
        StepLogger.verification('Search button should be appearing on the top right side of the home page');
        await HomePageHelper.verifySearchButtonIsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify user clicks on Search button.');
        await HomePageHelper.clickSearchButton();
        StepLogger.verification('Search criteria should be entered.');
        await HomePageHelper.verifySearchBox();

        StepLogger.stepId(3);
        StepLogger.step('Verify user clicks on the search button');
        await HomePageHelper.enterSearchTextAndClicksearch(uniqueName);
        StepLogger.verification('Search result should be returned.');
        await HomePageHelper.verifyContactCardIsDisplayed(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Click on the Search result');
        await HomePageHelper.clickOnSearchResult(uniqueName);
        StepLogger.verification(`A new page should open in a  new tab and contact name heading
            should be appearing on the top of the page. Overview tab should be open.`);
        await ContactPageHelper.verifyOverviewIsDisplayed(false);

        StepLogger.stepId(5);
        StepLogger.step('Click on the Profile tab.');
        await ContactPageHelper.clickProfileTab();
        StepLogger.verification('Profile tab should open');
        await ContactPageHelper.verifyProfileTabIsDisplayed();

        StepLogger.stepId(6);
        StepLogger.step('Verify Outside Accounts table is appearing on the profile tab');
        StepLogger.verification('Outside Accounts table should be appearing on the profile tab.');
        await ContactPageHelper.verifyOutsideAccountsTableIsDisplayed();

        StepLogger.stepId(7);
        StepLogger.step('Verify user clicks on the "Add Account" button');
        await ContactPageHelper.clickAddAccount();
        StepLogger.verification('"New Outside Account" pop up should appear');
        await ContactPageHelper.verifyNewOutsideAccountModalIsDisplayed();

        StepLogger.stepId(8);
        StepLogger.step('Select Account Type from drop down');
        const selectedAccount = await ContactPageOneHelper.selectAccountType();
        StepLogger.verification('Account type should  be selected.');
        await ContactPageOneHelper.verifySelectedAccountType(selectedAccount);

        StepLogger.stepId(9);
        StepLogger.step('Verify user selects Institution');
        const selectedInstitution = await ContactPageOneHelper.selectInstitution();
        StepLogger.verification('Institution should be selected.');
        await ContactPageOneHelper.verifySelectedInstitution(selectedInstitution);

        StepLogger.stepId(10);
        StepLogger.step('Click on Save button');
        await ContactPageOneHelper.clickSave();
        StepLogger.verification(
            'Record should be saved successfully pop up should close and saved record should be appearing in the table.'
        );
        await ContactPageHelper.verifyOutsideAccountsTableIsDisplayed();
    });
});
