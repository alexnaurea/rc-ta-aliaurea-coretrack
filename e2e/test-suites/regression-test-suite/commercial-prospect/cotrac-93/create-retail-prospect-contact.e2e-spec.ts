import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { HomePageConstant } from '../../../../page-objects/pages/home-page/home-page.constants';
import { HomePageHelper } from '../../../../page-objects/pages/home-page/home-page.helper';
import { HomePage } from '../../../../page-objects/pages/home-page/home-page.po';
import { LoginPageHelper } from '../../../../page-objects/pages/login-page/login-page.helper';
import { NewProspectPageHelper } from '../../../../page-objects/pages/new-prospect-page/new-prospect-page.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to see the New Prospect screen - [22991206]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:35:07 GMT

        StepLogger.caseId = 22991206;
        const uniqueName = PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The First  Name input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to see the Relationship tab - [22991226]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:35:07 GMT

        StepLogger.caseId = 22991226;
        const name = await PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(name);
        StepLogger.verification('The Last First input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(name);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(name);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Fill the First Name, Last Name mandatory fields and click on Save button.');
        await NewProspectPageHelper.fillNewProspectInformation();
        StepLogger.verification('The new prospect retail is saved successfully.');
        await NewProspectPageHelper.verifyNewProspectRetailIsSavedSuccessfully();

        StepLogger.stepId(10);
        StepLogger.step('Click on Relationship tab screen.');
        await NewProspectPageHelper.clickRelationShip();
        StepLogger.verification('The Relationship tab screen is displayed successfully.');
        await NewProspectPageHelper.verifyRelationShipPage();
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to create a new prospect with "Sync To Outlook" toggle button enabled - [22991222]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:35:07 GMT

        StepLogger.caseId = 22991222;
        const uniqueName = PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The First Name input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Click on "Sync To Outlook" toggle button.');
        await NewProspectPageHelper.clickSyncToOutLook();
        StepLogger.verification('The toggle button is enabled successfully.');
        await NewProspectPageHelper.verifySyncToOutLookEnabled();

        StepLogger.stepId(10);
        StepLogger.step('Click on Save button.');
        await NewProspectPageHelper.clickSaveButton();
        StepLogger.verification('The New Prospect Retail is saved successfully.');
        await NewProspectPageHelper.verifyNewProspectRetailIsSavedSuccessfully();
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to create a new prospect with "Do not contact in marketing campaigns." toggle button enabled - [22991221]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:35:07 GMT

        StepLogger.caseId = 22991221;
        const uniqueName = PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The First Name input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Click on "Do Not Contact In Marketing Campaigns" toggle button.');
        await NewProspectPageHelper.clickDoNotContactInCampaigns();
        StepLogger.verification('The toggle button is enabled successfully.');
        await NewProspectPageHelper.verifyDoNotContactInCampaigns();

        StepLogger.stepId(10);
        StepLogger.step('Click on Save button.');
        await NewProspectPageHelper.clickSaveButton();
        StepLogger.verification('The New Prospect Retail is saved successfully.');
        await NewProspectPageHelper.verifyNewProspectRetailIsSavedSuccessfully();
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to see the Events tab - [22991240]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:35:07 GMT

        StepLogger.caseId = 22991240;
        const uniqueName = PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The First Name input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Fill the First Name, Last Name mandatory fields and click on Save button.');
        await NewProspectPageHelper.fillNewProspectInformation();
        StepLogger.verification('The new prospect retail is saved successfully.');
        await NewProspectPageHelper.verifyNewProspectRetailIsSavedSuccessfully();

        StepLogger.stepId(10);
        StepLogger.step('Click on Events tab screen.');
        await NewProspectPageHelper.clickEvents();
        StepLogger.verification('The Events tab screen is displayed successfully.');
        await NewProspectPageHelper.verifyEventsPage();
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to see the Cases tab - [22991237]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:35:07 GMT

        StepLogger.caseId = 22991237;
        const uniqueName = PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The First Name input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Fill the First Name, Last Name mandatory fields and click on Save button.');
        await NewProspectPageHelper.fillNewProspectInformation();
        StepLogger.verification('The new prospect retail is saved successfully.');
        await NewProspectPageHelper.verifyNewProspectRetailIsSavedSuccessfully();

        StepLogger.stepId(10);
        StepLogger.step('Click on Cases tab screen.');
        await NewProspectPageHelper.clickCases();
        StepLogger.verification('The Cases tab screen is displayed successfully.');
        await NewProspectPageHelper.verifyCasesPage();
    });

    // Jira References - COTRAC-93
    it('Verify if user can see the text information on top of the screen - [22991073]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:35:30 GMT

        StepLogger.caseId = 22991073;

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Check the information text on top of the screen.');
        StepLogger.verification(
            'The text "Enter the following new prospect information to confirm that the prospect does not already exist". is displayed successfully.'
        );
        await HomePageHelper.verifyEnterNewProspectOnCheckExistingContactModal();
    });
});
