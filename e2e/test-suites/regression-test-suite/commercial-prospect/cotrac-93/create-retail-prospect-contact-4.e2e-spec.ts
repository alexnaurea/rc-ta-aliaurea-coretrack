import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { HomePageConstant } from '../../../../page-objects/pages/home-page/home-page.constants';
import { HomePageHelper } from '../../../../page-objects/pages/home-page/home-page.helper';
import { HomePage } from '../../../../page-objects/pages/home-page/home-page.po';
import { LoginPageHelper } from '../../../../page-objects/pages/login-page/login-page.helper';
import { NewProspectPageHelper } from '../../../../page-objects/pages/new-prospect-page/new-prospect-page.helper';
import { NewProspectPage } from '../../../../page-objects/pages/new-prospect-page/new-prospect-page.po';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to see the Contact Information section - [22991216]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:36:03 GMT

        StepLogger.caseId = 22991216;
        const uniqueName = PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The First Name input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Check the Contact Information section fields.');
        StepLogger.verification('The list of fields is displayed successfully.');
        await NewProspectPageHelper.verifyContactSection();
    });

    // Jira References - COTRAC-93
    it('Verify if prospect created header is displaying properly - [22991224]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:37:01 GMT

        StepLogger.caseId = 22991224;
        const name = await PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(name);
        StepLogger.verification('The First Name input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(name);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(name);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Check the New Prospect Retail header screen.');
        await NewProspectPageHelper.clickSaveButton();
        StepLogger.verification('The components is displayed');
        await NewProspectPageHelper.verifyProspectHeaderSection();
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to see the Summary tab in the Relationship screen - [22991227]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:37:01 GMT

        StepLogger.caseId = 22991227;
        const name = await PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(name);
        StepLogger.verification('The First Name input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(name);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(name);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Fill the First Name, Last Name mandatory fields and click on Save button.');
        await NewProspectPageHelper.fillNewProspectInformation();
        StepLogger.verification('The new prospect retail is saved successfully.');
        await NewProspectPageHelper.verifyNewProspectRetailIsSavedSuccessfully();

        StepLogger.stepId(10);
        StepLogger.step('Click on Summary tab in Relationship screen.');
        await NewProspectPageHelper.clickRelationShipTab(NewProspectPage.tabs.summary);
        StepLogger.verification('The Summary tab screen is displayed successfully.');
        await NewProspectPage.page.summary.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to see the Pipelines tab in the Relationship screen - [22991228]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:37:01 GMT

        StepLogger.caseId = 22991228;
        const uniqueName = PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The First Name input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(uniqueName);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(uniqueName);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Fill the First Name, Last Name mandatory fields and click on Save button.');
        await NewProspectPageHelper.fillNewProspectInformation();
        StepLogger.verification('The new prospect retail is saved successfully.');
        await NewProspectPageHelper.verifyNewProspectRetailIsSavedSuccessfully();

        StepLogger.stepId(10);
        StepLogger.step('Click on Pipelines tab in Relationship screen.');
        await NewProspectPageHelper.clickRelationShipTab(NewProspectPage.tabs.pipeline);
        StepLogger.verification('The Pipelines tab screen is displayed successfully.');
        await NewProspectPage.page.pipeline.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to see the Accounts tab in the Relationship screen - [22991229]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:37:01 GMT

        StepLogger.caseId = 22991229;
        const name = await PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(name);
        StepLogger.verification('The Last First input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(name);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(name);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Fill the First Name, Last Name mandatory fields and click on Save button.');
        await NewProspectPageHelper.fillNewProspectInformation();
        StepLogger.verification('The new prospect retail is saved successfully.');
        await NewProspectPageHelper.verifyNewProspectRetailIsSavedSuccessfully();

        StepLogger.stepId(10);
        StepLogger.step('Click on Accounts tab in Relationship screen.');
        await NewProspectPageHelper.clickRelationShipTab(NewProspectPage.tabs.accounts);
        StepLogger.verification('The Accounts tab screen is displayed successfully.');
        await NewProspectPage.page.accounts.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-93
    it('Verify if user shall be able to see the Services tab in the Relationship screen - [22991230]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Mar 2019 14:37:01 GMT

        StepLogger.caseId = 22991230;
        const name = await PageHelper.getUniqueId();

        StepLogger.preCondition('Execute C22395398 to login as an administrator');
        await LoginPageHelper.loginAsAdmin();
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(1);
        StepLogger.step('Click on New menu button.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('The New menu list is displayed successfully.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Click on Retail Prospect menu button.');
        await HomePageHelper.clickRetailProspectUnderNew();
        StepLogger.verification('The "Check Existing Contact" modal screen is displayed successfully.');
        await HomePageHelper.verifyCheckExistingContactDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Fill the First Name input field.');
        await HomePageHelper.enterFirstNameOnCheckExistingContactModal(name);
        StepLogger.verification('The First Name input field is filled successfully.');
        await HomePageHelper.verifyFirstNameIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(4);
        StepLogger.step('Fill the Last Name input field.');
        await HomePageHelper.enterLastNameOnCheckExistingContactModal(name);
        StepLogger.verification('The Last Name input field is filled successfully.');
        await HomePageHelper.verifyLastNameIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(5);
        StepLogger.step('Fill the Company input field.');
        await HomePageHelper.enterCompanyOnCheckExistingContactModal(name);
        StepLogger.verification('The Company input field is filled successfully.');
        await HomePageHelper.verifyCompanyIsEnteredOnCheckExistingContactModal(name);

        StepLogger.stepId(6);
        StepLogger.step('Select Retail option in the Return dropdown list.');
        await HomePageHelper.selectReturnOptionOnCheckExistingContactModal(HomePageConstant.retail);
        StepLogger.verification('The Retail option is displayed in the dropdown field.');
        await HomePageHelper.verifyReturnOptionIsSelectedOnCheckExistingContactModal(HomePageConstant.retail);

        StepLogger.stepId(7);
        StepLogger.step('Click on Search Contacts button.');
        await HomePageHelper.clickSearchContactsOnCheckExistingContactModal();
        StepLogger.verification('The Continue With New Prospect button is enabled.');
        await HomePageHelper.verifyContinueWithNewProspectIsEnabled();

        StepLogger.stepId(8);
        StepLogger.step('Click on Continue With New Prospect button.');
        await HomePageHelper.clickContinueWithNewProspectButton();
        StepLogger.verification('The New Prospect screen is displayed successfully.');
        await NewProspectPageHelper.verifyNewProspectPageIsDisplayed(false);

        StepLogger.stepId(9);
        StepLogger.step('Fill the First Name, Last Name mandatory fields and click on Save button.');
        await NewProspectPageHelper.fillNewProspectInformation();
        StepLogger.verification('The new prospect retail is saved successfully.');
        await NewProspectPageHelper.verifyNewProspectRetailIsSavedSuccessfully();

        StepLogger.stepId(10);
        StepLogger.step('Click on Services tab in Relationship screen.');
        await NewProspectPageHelper.clickRelationShipTab(NewProspectPage.tabs.services);
        StepLogger.verification('The Services tab screen is displayed successfully.');
        await NewProspectPage.page.services.verifyDisplayedStatus();
    });
});
