import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { HomePageHelper } from '../../../page-objects/pages/home-page/home-page.helper';
import { HomePage1Helper } from '../../../page-objects/pages/home-page/home-page1.helper';
import { LoginPageHelper } from '../../../page-objects/pages/login-page/login-page.helper';
import { ManageCompensationPageConstant } from '../../../page-objects/pages/manage-compensation-page/manage-compensation-page.constants';
import { ManageCompensationPageHelper } from '../../../page-objects/pages/manage-compensation-page/manage-compensation-page.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    it('To verify that user can access Manage Compensation page. - [22914265]', async () => {
        // Auto generated by aurea-automation - util on Fri, 19 Apr 2019 01:24:10 GMT

        StepLogger.caseId = 22914265;
        StepLogger.stepId(1);
        StepLogger.step('Click Administration.');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Sub menus under administration should be displayed.');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(2);
        StepLogger.step('Verify Compensation menu is displayed under administration.');
        StepLogger.verification('It should be displayed.');
        await HomePage1Helper.verifyCompensationOptionUnderAdministration();

        StepLogger.stepId(3);
        StepLogger.step('Click "Compensation".');
        await HomePage1Helper.clickCompensationAdministration();
        StepLogger.verification('Manage compensation page should be displayed.');
        await ManageCompensationPageHelper.verifyManageCompensationPageDisplayed();
    });

    it('To verify that user can access New compensation plan dialogue. - [22914271]', async () => {
        // Auto generated by aurea-automation - util on Fri, 19 Apr 2019 01:44:28 GMT

        StepLogger.caseId = 22914271;
        StepLogger.stepId(1);
        StepLogger.step('Click Administration.');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Sub menus under administration should be displayed.');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(2);
        StepLogger.step('Click "Compensation".');
        await HomePage1Helper.clickCompensationAdministration();
        StepLogger.verification('Manage compensation page should be displayed.');
        await ManageCompensationPageHelper.verifyManageCompensationPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "Add compensation".');
        await ManageCompensationPageHelper.clickAddCompensationButton();
        StepLogger.verification('"New Compensation plan" should be displayed.');
        await ManageCompensationPageHelper.verifyNewCompensationPlanWindowDisplayed();
    });

    it('To verify that validation error message is displayed when all fields are left blank. - [22914272]', async () => {
        // Auto generated by aurea-automation - util on Fri, 19 Apr 2019 04:37:46 GMT

        StepLogger.caseId = 22914272;
        const error = ManageCompensationPageConstant.error.compensationPlanType;

        StepLogger.stepId(1);
        StepLogger.step('Click "Administration -> Compensation".');
        await HomePageHelper.clickAdministrationLink();
        await HomePage1Helper.clickCompensationAdministration();
        StepLogger.verification('Manage compensation page should be displayed.');
        await ManageCompensationPageHelper.verifyManageCompensationPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click "Add compensation".');
        await ManageCompensationPageHelper.clickAddCompensationButton();
        StepLogger.verification('"New Compensation plan" should be displayed.');
        await ManageCompensationPageHelper.verifyNewCompensationPlanWindowDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "save" leaving all fields blank.');
        await ManageCompensationPageHelper.clickCompensationSaveButton();
        StepLogger.verification('Validation error message should be displayed.');
        await ManageCompensationPageHelper.verifyErrorMessage(error);
    });

    it('To Verify user is able to access New compensation plan detail dialogue. - [22914284]', async () => {
        // Auto generated by aurea-automation - util on Fri, 19 Apr 2019 08:31:23 GMT

        StepLogger.caseId = 22914284;
        StepLogger.preCondition('Navigate And Access Created Compensation');
        await ManageCompensationPageHelper.navigateAndAccessCreatedCompensation();

        StepLogger.stepId(1);
        StepLogger.step('Verify Existing Comp detail section is displayed.');
        StepLogger.verification('It should be displayed.');
        await ManageCompensationPageHelper.verifyEditCompensationPlanWindowDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify "Add a Comp detail" button is displayed.');
        StepLogger.verification('"Add a Comp detail" button should be displayed.');
        await ManageCompensationPageHelper.verifyAddACompDetailButton();

        StepLogger.stepId(3);
        StepLogger.step('Click  "Add a Comp detail" button.');
        await ManageCompensationPageHelper.clickAddACompDetailButton();
        StepLogger.verification('"New Compensation Plan detail" should be displayed.');
        await ManageCompensationPageHelper.verifyNewCompensationPlanWindowDisplayed();
    });

    it('To verify that validation error message should be displayed when branch drop down is left blank. - [22914277]', async () => {
        // Auto generated by aurea-automation - util on Fri, 19 Apr 2019 10:48:40 GMT

        StepLogger.caseId = 22914277;
        const branch = ManageCompensationPageConstant.branch;
        const error = ManageCompensationPageConstant.error.branch;

        StepLogger.stepId(1);
        StepLogger.step('Click "Administration -> Compensation".');
        await HomePageHelper.clickAdministrationLink();
        await HomePage1Helper.clickCompensationAdministration();
        StepLogger.verification('Manage compensation page should be displayed.');
        await ManageCompensationPageHelper.verifyManageCompensationPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click "Add compensation".');
        await ManageCompensationPageHelper.clickAddCompensationButton();
        StepLogger.verification('"New Compensation plan" should be displayed.');
        await ManageCompensationPageHelper.verifyNewCompensationPlanWindowDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Select branch in Comp is for field.');
        await ManageCompensationPageHelper.selectAValueFromCompIsForDropDown(branch);
        StepLogger.verification('It should be selected.');
        await ManageCompensationPageHelper.verifyValueSelected(branch);

        StepLogger.stepId(4);
        StepLogger.step('Click "save".');
        await ManageCompensationPageHelper.clickCompensationSaveButton();
        StepLogger.verification('Validation Error message should be displayed.');
        await ManageCompensationPageHelper.verifyErrorMessage(error);
    });
});
