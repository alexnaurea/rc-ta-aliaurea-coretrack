import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { HomePageHelper } from '../../../page-objects/pages/home-page/home-page.helper';
import { LoginPageHelper } from '../../../page-objects/pages/login-page/login-page.helper';
import { EventsQueueConstant } from '../../../page-objects/pages/queues/events/events-queue-page.constants';
import { EventQueueHelper } from '../../../page-objects/pages/queues/events/events-queue-page.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    // Jira References - COTRAC-3853
    it('Verify that the User can access Events Queue page - [22946081]', async () => {
        // Auto generated by aurea-automation - util on Mon, 01 Apr 2019 07:56:37 GMT
        StepLogger.caseId = 22946081;

        StepLogger.stepId(1);
        StepLogger.step('Expand the Queues menu in the left panel.');
        await HomePageHelper.clickQueuesLink();
        StepLogger.verification('Queues menu should get expanded');
        await HomePageHelper.verifyQueuesMenuIsExpanded();

        StepLogger.stepId(2);
        StepLogger.step('Verify Events menu option is displayed under Queues menu');
        StepLogger.verification('Events menu option should be displayed under Queues menu');
        await HomePageHelper.verifyOptionsDisplayedUnderQueues();

        StepLogger.stepId(3);
        StepLogger.step('Click on the Events menu');
        await HomePageHelper.clickEventsUnderQueues();
        StepLogger.verification('Events Queue page should be displayed');
        await EventQueueHelper.verifyEventsQueuePageDisplayed();
    });

    // Jira References - COTRAC-3846
    it('Verify that the User can access New Event window via Events Queue page - [22946115]', async () => {
        // Auto generated by aurea-automation - util on Mon, 01 Apr 2019 08:10:21 GMT
        StepLogger.caseId = 22946115;

        StepLogger.stepId(1);
        StepLogger.step('Expand the Queues menu in the left panel.');
        await HomePageHelper.clickQueuesLink();
        StepLogger.verification('Queues menu should get expanded');
        await HomePageHelper.verifyQueuesMenuIsExpanded();

        StepLogger.stepId(2);
        StepLogger.step('Verify Events menu option is displayed under Queues menu');
        StepLogger.verification('Events menu option should be displayed under Queues menu');
        await HomePageHelper.verifyOptionsDisplayedUnderQueues();

        StepLogger.stepId(3);
        StepLogger.step('Click on the Events menu');
        await HomePageHelper.clickEventsUnderQueues();
        StepLogger.verification('Events Queue page should be displayed');
        await EventQueueHelper.verifyEventsQueuePageDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Click on the Add Event icon (event+ sign) in top left of the Events Queue page');
        await EventQueueHelper.clickAddEventButton();
        StepLogger.verification('New Events page should be displayed');
        await EventQueueHelper.verifyEventDialog();
    });

    // Jira References - COTRAC-3847
    it('Verify the attributes and buttons in New Event window - [22946122]', async () => {
        // Auto generated by aurea-automation - util on Mon, 01 Apr 2019 08:28:32 GMT
        StepLogger.caseId = 22946122;

        StepLogger.preCondition('Navigate to new event dialog');
        await EventQueueHelper.navigateToNewEventDialog();

        StepLogger.stepId(1);
        StepLogger.step('Verify the attributes in New Events page');
        StepLogger.verification(`Following attributes should be displayed under Details section,
            Subject, Owner, Attendee(s), Type, Start, End, ALL DAY EVENT option, OCCURRED option, SYNC TO OUTLOOK option and Note`);
        await EventQueueHelper.verifyDetailsAttributes(true);

        StepLogger.stepId(2);
        StepLogger.step('Verify mandatory attributes in New Events page');
        StepLogger.verification('Subject, Owner, Type, Start, End attributes should be marked with * indicating mandatory fields');
        await EventQueueHelper.verifyMandatoryAttributes();

        StepLogger.stepId(3);
        StepLogger.step('Verify Save and Close buttons on top right of the page');
        StepLogger.verification('Save and Close buttons should appear on top right of the page');
        await EventQueueHelper.verifyEventDialogButtons();
    });

    // Jira References - COTRAC-3854
    it('Verify the functionality of close button on New Event page - [22946132]', async () => {
        // Auto generated by aurea-automation - util on Mon, 01 Apr 2019 09:17:16 GMT
        StepLogger.caseId = 22946132;

        StepLogger.preCondition('Click Queue link');
        await HomePageHelper.clickQueuesLink();
        await HomePageHelper.verifyQueuesMenuIsExpanded();

        StepLogger.stepId(1);
        StepLogger.step('Click on the Events option under Queues menu in the left panel');
        await HomePageHelper.clickEventsUnderQueues();
        StepLogger.verification('Events Queue page should be displayed');
        await EventQueueHelper.verifyEventsQueuePageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Add Event icon (event+ sign) in top left of the Events Queue page');
        await EventQueueHelper.clickAddEventButton();
        StepLogger.verification('New Events page should be displayed');
        await EventQueueHelper.verifyEventDialog();

        StepLogger.stepId(3);
        StepLogger.step('Click Close icon on top right of the page');
        await EventQueueHelper.clickCloseEventDialog();
        StepLogger.verification('Warning message should be displayed " Are you sure you want to leave this page? Unsaved changes will be lost."');
        await EventQueueHelper.verifyUnsavedChangesDialog();

        StepLogger.stepId(4);
        StepLogger.step('Click OK');
        await EventQueueHelper.clickOkErrorDialog();
        StepLogger.verification('New Event page should get closed and user should be navigated back to Events Queue page');
        await EventQueueHelper.verifyEventDialogClosedAndEventsQueue();
    });

    // Jira References - COTRAC-3848
    it('Verify validation message when user clicks save without entering any values on Add Event page - [22946141]', async () => {
        // Auto generated by aurea-automation - util on Mon, 01 Apr 2019 09:41:05 GMT
        StepLogger.caseId = 22946141;

        StepLogger.preCondition('Click Queue link');
        await HomePageHelper.clickQueuesLink();
        await HomePageHelper.verifyQueuesMenuIsExpanded();

        StepLogger.stepId(1);
        StepLogger.step('Click on the Events option under Queues menu in the left panel');
        await HomePageHelper.clickEventsUnderQueues();
        StepLogger.verification('Events Queue page should be displayed');
        await EventQueueHelper.verifyEventsQueuePageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Add Event icon (event+ sign) in top left of the Events Queue page');
        await EventQueueHelper.clickAddEventButton();
        StepLogger.verification('New Events page should be displayed');
        await EventQueueHelper.verifyEventDialog();

        StepLogger.stepId(3);
        StepLogger.step('Click Save icon on top right of the page');
        await EventQueueHelper.clickSaveEventDialog();
        StepLogger.verification('Validation messages should be displayed "Event Name is required." next to Subject field');
        await EventQueueHelper.verifyNameRequiredDialog();
    });

    // Jira References - COTRAC-3849
    it('Verify that user can Create a queue Event from Queues menu successfully - [22946146]', async () => {
        // Auto generated by aurea-automation - util on Mon, 01 Apr 2019 09:50:49 GMT
        StepLogger.caseId = 22946146;
        const subject = `${EventsQueueConstant.elementNames.test}${PageHelper.getUniqueId()}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Click Queue link');
        await HomePageHelper.clickQueuesLink();
        await HomePageHelper.verifyQueuesMenuIsExpanded();

        StepLogger.stepId(1);
        StepLogger.step('Click on the Events option under Queues menu in the left panel');
        await HomePageHelper.clickEventsUnderQueues();
        StepLogger.verification('Events Queue page should be displayed');
        await EventQueueHelper.verifyEventsQueuePageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Add Event icon (event+ sign) in top left of the Events Queue page');
        await EventQueueHelper.clickAddEventButton();
        StepLogger.verification('New Events page should be displayed');
        await EventQueueHelper.verifyEventDialog();

        StepLogger.stepId(3);
        StepLogger.step('Enter details for Subject');
        await EventQueueHelper.enterSubject(subject);
        StepLogger.verification('Entered values should be displayed');
        await EventQueueHelper.verifySubjectIsEntered(subject);

        StepLogger.stepId(4);
        StepLogger.step('From the OWNER dropdown list select "QUEUE"');
        await EventQueueHelper.selectOwnerOption(EventsQueueConstant.ownerDropdown.queue);
        StepLogger.verification('Queue should get selected for Owner');
        await EventQueueHelper.verifyOwnerSelectedOption(EventsQueueConstant.ownerDropdown.queue);

        StepLogger.stepId(5);
        StepLogger.step('Select Task and Branch values from the dropdown lists');
        const task = await EventQueueHelper.selectTaskOption();
        StepLogger.verification('Selected values should be displayed');
        await EventQueueHelper.verifyTaskSelectedOption(task);

        StepLogger.stepId(6);
        StepLogger.step('Enter Date Start and Date Due from the Date time pickers');
        const date = await EventQueueHelper.enterStartAndEndDates();
        StepLogger.verification('Selected Date time values should be displayed in Date Start and Date Due fields');
        await EventQueueHelper.verifyStartAndEndDates(date);

        StepLogger.stepId(7);
        StepLogger.step('Click Save icon on top right of the page');
        await EventQueueHelper.clickSaveAndCloseEventDialog();
        StepLogger.verification(`1. Event should be saved
            2. New Event page should get closed
            3. Created new Event should be displayed in Events Queue page`);
        await EventQueueHelper.verifyEventDialogClosedAndEventCreated(subject);
    });

    // Jira References - COTRAC-3852
    it('Verify that user can Create a Past queue Event from Queues menu successfully - [22946399]', async () => {
        // Auto generated by aurea-automation - util on Mon, 01 Apr 2019 11:54:59 GMT
        StepLogger.caseId = 22946399;
        const subject = `${EventsQueueConstant.elementNames.test}${PageHelper.getUniqueId()}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Click Queue link');
        await HomePageHelper.clickQueuesLink();
        await HomePageHelper.verifyQueuesMenuIsExpanded();

        StepLogger.stepId(1);
        StepLogger.step('Click on the Events option under Queues menu in the left panel');
        await HomePageHelper.clickEventsUnderQueues();
        StepLogger.verification('Events Queue page should be displayed');
        await EventQueueHelper.verifyEventsQueuePageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Add Event icon (event+ sign) in top left of the Events Queue page');
        await EventQueueHelper.clickAddEventButton();
        StepLogger.verification('New Events page should be displayed');
        await EventQueueHelper.verifyEventDialog();

        StepLogger.stepId(3);
        StepLogger.step('Enter details for Subject');
        await EventQueueHelper.enterSubject(subject);
        StepLogger.verification('Entered values should be displayed');
        await EventQueueHelper.verifySubjectIsEntered(subject);

        StepLogger.stepId(4);
        StepLogger.step('From the OWNER dropdown list select "QUEUE"');
        await EventQueueHelper.selectOwnerOption(EventsQueueConstant.ownerDropdown.queue);
        StepLogger.verification('Queue should get selected for Owner');
        await EventQueueHelper.verifyOwnerSelectedOption(EventsQueueConstant.ownerDropdown.queue);

        StepLogger.stepId(5);
        StepLogger.step('Select Task and Branch values from the dropdown lists');
        const task = await EventQueueHelper.selectTaskOption();
        StepLogger.verification('Selected values should be displayed');
        await EventQueueHelper.verifyTaskSelectedOption(task);

        StepLogger.stepId(6);
        StepLogger.step('Enter Past dates for Date Start and Date Due from the Date time pickers');
        const date = await EventQueueHelper.enterPastStartAndEndDates();
        StepLogger.verification('Selected Date time values should be displayed in Date Start and Date Due fields');
        await EventQueueHelper.verifyStartAndEndDates(date);

        StepLogger.stepId(7);
        StepLogger.step('Click Save icon on top right of the page');
        await EventQueueHelper.clickSaveAndCloseEventDialog();
        StepLogger.verification(`1. Event should be saved
            2. New Event page should get closed
            3. Created new Event should be displayed in Events Queue page when Hide past event option is unchecked`);
        await EventQueueHelper.verifyEventDialogClosedAndEventCreated(subject, false);
    });

    // Jira References - COTRAC-3850
    it('Verify that user can Create a "All Day Queue Event" from Queues menu successfully - [22946179]', async () => {
        // Auto generated by aurea-automation - util on Mon, 01 Apr 2019 13:02:33 GMT
        StepLogger.caseId = 22946179;
        const subject = `${EventsQueueConstant.elementNames.test}${PageHelper.getUniqueId()}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Click Queue link');
        await HomePageHelper.clickQueuesLink();
        await HomePageHelper.verifyQueuesMenuIsExpanded();

        StepLogger.stepId(1);
        StepLogger.step('Click on the Events option under Queues menu in the left panel');
        await HomePageHelper.clickEventsUnderQueues();
        StepLogger.verification('Events Queue page should be displayed');
        await EventQueueHelper.verifyEventsQueuePageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Add Event icon (event+ sign) in top left of the Events Queue page');
        await EventQueueHelper.clickAddEventButton();
        StepLogger.verification('New Events page should be displayed');
        await EventQueueHelper.verifyEventDialog();

        StepLogger.stepId(3);
        StepLogger.step('Enter details for Subject');
        await EventQueueHelper.enterSubject(subject);
        StepLogger.verification('Entered values should be displayed');
        await EventQueueHelper.verifySubjectIsEntered(subject);

        StepLogger.stepId(4);
        StepLogger.step('From the OWNER dropdown list select "QUEUE"');
        await EventQueueHelper.selectOwnerOption(EventsQueueConstant.ownerDropdown.queue);
        StepLogger.verification('Queue should get selected for Owner');
        await EventQueueHelper.verifyOwnerSelectedOption(EventsQueueConstant.ownerDropdown.queue);

        StepLogger.stepId(5);
        StepLogger.step('Select Task and Branch values from the dropdown lists');
        const task = await EventQueueHelper.selectTaskOption();
        StepLogger.verification('Selected values should be displayed');
        await EventQueueHelper.verifyTaskSelectedOption(task);

        StepLogger.stepId(6);
        StepLogger.step('Enter Date Start and Date Due from the Date time pickers');
        const date = await EventQueueHelper.enterStartAndEndDates();
        StepLogger.verification('Selected Date time values should be displayed in Date Start and Date Due fields');
        await EventQueueHelper.verifyStartAndEndDates(date);

        StepLogger.stepId(7);
        StepLogger.step('Set ALL DAY EVENT option to Yes');
        await EventQueueHelper.selectAllDayEvent();
        StepLogger.verification(`1. ALL DAY EVENT option should be set to Yes
            2. Start time and End time fields should get disappear`);
        await EventQueueHelper.verifyAllDayEventAndDateFields();

        StepLogger.stepId(8);
        StepLogger.step('Click Save icon on top right of the page');
        await EventQueueHelper.clickSaveAndCloseEventDialog();
        StepLogger.verification(`1. Event should be saved
            2. New Event page should get closed
            3. Created new Event should be displayed in Events Queue page`);
        await EventQueueHelper.verifyEventDialogClosedAndEventCreated(subject);
    });

    // Jira References - COTRAC-3851
    it('Verify that user can Create a "Occurred Queue Event" from Queues menu successfully - [22946193]', async () => {
        // Auto generated by aurea-automation - util on Mon, 01 Apr 2019 13:29:14 GMT
        StepLogger.caseId = 22946193;
        const subject = `${EventsQueueConstant.elementNames.test}${PageHelper.getUniqueId()}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Click Queue link');
        await HomePageHelper.clickQueuesLink();
        await HomePageHelper.verifyQueuesMenuIsExpanded();

        StepLogger.stepId(1);
        StepLogger.step('Click on the Events option under Queues menu in the left panel');
        await HomePageHelper.clickEventsUnderQueues();
        StepLogger.verification('Events Queue page should be displayed');
        await EventQueueHelper.verifyEventsQueuePageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Add Event icon (event+ sign) in top left of the Events Queue page');
        await EventQueueHelper.clickAddEventButton();
        StepLogger.verification('New Events page should be displayed');
        await EventQueueHelper.verifyEventDialog();

        StepLogger.stepId(3);
        StepLogger.step('Enter details for Subject');
        await EventQueueHelper.enterSubject(subject);
        StepLogger.verification('Entered values should be displayed');
        await EventQueueHelper.verifySubjectIsEntered(subject);

        StepLogger.stepId(4);
        StepLogger.step('From the OWNER dropdown list select "QUEUE"');
        await EventQueueHelper.selectOwnerOption(EventsQueueConstant.ownerDropdown.queue);
        StepLogger.verification('Queue should get selected for Owner');
        await EventQueueHelper.verifyOwnerSelectedOption(EventsQueueConstant.ownerDropdown.queue);

        StepLogger.stepId(5);
        StepLogger.step('Select Task and Branch values from the dropdown lists');
        const task = await EventQueueHelper.selectTaskOption();
        StepLogger.verification('Selected values should be displayed');
        await EventQueueHelper.verifyTaskSelectedOption(task);

        StepLogger.stepId(6);
        StepLogger.step('Enter Date Start and Date Due from the Date time pickers');
        const date = await EventQueueHelper.enterStartAndEndDates();
        StepLogger.verification('Selected Date time values should be displayed in Date Start and Date Due fields');
        await EventQueueHelper.verifyStartAndEndDates(date);

        StepLogger.stepId(7);
        StepLogger.step('Set OCCURRED option to Yes');
        await EventQueueHelper.selectOcurred();
        StepLogger.verification('OCCURRED option should be set to Yes');
        await EventQueueHelper.verifyOcurredOptionYes();

        StepLogger.stepId(8);
        StepLogger.step('Click Save icon on top right of the page');
        await EventQueueHelper.clickSaveAndCloseEventDialog();
        StepLogger.verification(`1. Event should be saved
            2. New Event page should get closed
            3. Created new Event should be displayed in Events Queue page`);
        await EventQueueHelper.verifyEventDialogClosedAndEventCreated(subject);
    });

    // Jira References - COTRAC-3855
    it('Verify that user can Create a queue Event with SYNC TO OUTLOOK option set to Yes - [22946222]', async () => {
        // Auto generated by aurea-automation - util on Mon, 01 Apr 2019 13:42:53 GMT
        StepLogger.caseId = 22946222;
        const subject = `${EventsQueueConstant.elementNames.test}${PageHelper.getUniqueId()}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Click Queue link');
        await HomePageHelper.clickQueuesLink();
        await HomePageHelper.verifyQueuesMenuIsExpanded();

        StepLogger.stepId(1);
        StepLogger.step('Click on the Events option under Queues menu in the left panel');
        await HomePageHelper.clickEventsUnderQueues();
        StepLogger.verification('Events Queue page should be displayed');
        await EventQueueHelper.verifyEventsQueuePageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on the Add Event icon (event+ sign) in top left of the Events Queue page');
        await EventQueueHelper.clickAddEventButton();
        StepLogger.verification('New Events page should be displayed');
        await EventQueueHelper.verifyEventDialog();

        StepLogger.stepId(3);
        StepLogger.step('Enter details for Subject');
        await EventQueueHelper.enterSubject(subject);
        StepLogger.verification('Entered values should be displayed');
        await EventQueueHelper.verifySubjectIsEntered(subject);

        StepLogger.stepId(4);
        StepLogger.step('From the OWNER dropdown list select "QUEUE"');
        await EventQueueHelper.selectOwnerOption(EventsQueueConstant.ownerDropdown.queue);
        StepLogger.verification('Queue should get selected for Owner');
        await EventQueueHelper.verifyOwnerSelectedOption(EventsQueueConstant.ownerDropdown.queue);

        StepLogger.stepId(5);
        StepLogger.step('Select Task and Branch values from the dropdown lists');
        const task = await EventQueueHelper.selectTaskOption();
        StepLogger.verification('Selected values should be displayed');
        await EventQueueHelper.verifyTaskSelectedOption(task);

        StepLogger.stepId(6);
        StepLogger.step('Enter Date Start and Date Due from the Date time pickers');
        const date = await EventQueueHelper.enterStartAndEndDates();
        StepLogger.verification('Selected Date time values should be displayed in Date Start and Date Due fields');
        await EventQueueHelper.verifyStartAndEndDates(date);

        StepLogger.stepId(7);
        StepLogger.step('Set SYNC TO OUTLOOK option to Yes');
        await EventQueueHelper.selectSyncOutlook();
        StepLogger.verification('SYNC TO OUTLOOK option should be set to Yes');
        await EventQueueHelper.verifySyncOutlookOptionYes();

        StepLogger.stepId(8);
        StepLogger.step('Click Save icon on top right of the page');
        await EventQueueHelper.clickSaveAndCloseEventDialog();
        StepLogger.verification(`1. Event should be saved
            2. New Event page should get closed
            3. Created new Event should be displayed in Events Queue page`);
        await EventQueueHelper.verifyEventDialogClosedAndEventCreated(subject);
    });
});
