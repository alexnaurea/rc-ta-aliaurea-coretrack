import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { Constants } from '../../../components/misc-utils/constants';
import { ProductsConstants } from '../../../page-objects/pages/administration/configuration/products/products.constants';
import { ProductsHelper } from '../../../page-objects/pages/administration/configuration/products/products.helper';
import { HomePageHelper } from '../../../page-objects/pages/home-page/home-page.helper';
import { LoginPageHelper } from '../../../page-objects/pages/login-page/login-page.helper';
import { NewOpportunityPageConstant } from '../../../page-objects/pages/new-opportunity-page/new-opportunity-page.constants';
import { NewOpportunityPageHelper } from '../../../page-objects/pages/new-opportunity-page/new-opportunity-page.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: LoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
        await loginPageHelper.goTo();
        await LoginPageHelper.loginAsAdmin();
    });

    // Jira References - COTRAC-3516
    it('To verify that user is able to Edit the product to "generic" product. - [22967302]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Mar 2019 11:31:14 GMT

        StepLogger.caseId = 22967302;
        StepLogger.stepId(1);
        StepLogger.step('Go to Administration -> configuration -> Products.');
        await HomePageHelper.navigateToProductsPage();
        StepLogger.verification('"Manage Products" should be saved.');
        await ProductsHelper.verifyProductsManagePageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Search for a non-generic product.');
        const textToSearch = 'a';
        await ProductsHelper.searchText(textToSearch);
        StepLogger.verification('User should be able to search the product.');
        await ProductsHelper.verifySearchResults(textToSearch);

        StepLogger.stepId(3);
        StepLogger.step('Click Edit icon besides the Product name.');
        await ProductsHelper.clickOnEdit();
        StepLogger.verification('Edit Product Dialog should be displayed.');
        await ProductsHelper.verifyEditProductScreen();

        StepLogger.stepId(4);
        StepLogger.step('Toggle the generic button to yes.');
        await ProductsHelper.toggleGenericButtonToYes();
        StepLogger.verification('It should be selected.');
        await ProductsHelper.verifyGenericButtonSetAsYes();

        StepLogger.stepId(5);
        StepLogger.step('Click Save and verify that generic checkbox is checked.');
        await ProductsHelper.clickOnSaveOnNewProductScreen();
        StepLogger.verification('Product should be saved.');
        // This action is not verifiable
    });

    // Jira References - COTRAC-3518
    it('To verify the fields and buttons available on "New Opportunity" page. - [22967305]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Mar 2019 11:31:15 GMT

        StepLogger.caseId = 22967305;
        StepLogger.stepId(1);
        StepLogger.step('Go to New ->Opportunity.');
        await HomePageHelper.clickNewLink();
        await HomePageHelper.clickOpportunityUnderNew();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed(false);

        StepLogger.stepId(2);
        StepLogger.step('Verify the fields available on New opportunity page.');
        StepLogger.verification(`The following fields should be available:
        1. Contact,
        2. Product,
        3. Owner,
        4. Referrer,
        5. Quick Notes,
        6. Referrer Branch,
        7. Created,
        8. Forecast,
        9. Funds Source,
        10.Referral Source,
        11.Referring Contact,
        12.Sales Stage,
        13.Probability
        14.Conditional`);
        await NewOpportunityPageHelper.verifyNewOpportunityPageFields();

        StepLogger.stepId(3);
        StepLogger.step('Verify the buttons available on New opportunity page.');
        StepLogger.verification(`It should have following buttons:
        1. “Save”,
        2. “Save and Add”
        3. “Close” button`);
        await NewOpportunityPageHelper.verifyNewOpportunityPageButtons();
    });

    // Jira References - COTRAC-3523
    it('To verify the functionality of close button on "New opportunity" page. - [22967327]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Mar 2019 11:31:15 GMT

        StepLogger.caseId = 22967327;
        StepLogger.stepId(1);
        StepLogger.step('Go to New ->Opportunity.');
        await HomePageHelper.clickNewLink();
        await HomePageHelper.clickOpportunityUnderNew();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed(false);

        StepLogger.stepId(2);
        StepLogger.step('Click "Close" button.');
        await NewOpportunityPageHelper.clickOnCloseButton();
        StepLogger.verification('Warning message should be displayed.');
        await NewOpportunityPageHelper.verifyWarningMessageDisplayedAndAcceptIt();

        // Step 3 is covered in step 2
        StepLogger.stepId(3);
        StepLogger.step('Click "OK".');
        StepLogger.verification('New opportunity page should be close.');
        await NewOpportunityPageHelper.verifyTabClosed(Constants.number.one);
    });

    // Jira References - COTRAC-3519
    it('To verify that validation error message should be displayed when New opportunity page is left blank. - [22967309]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Mar 2019 11:31:15 GMT

        StepLogger.caseId = 22967309;
        StepLogger.stepId(1);
        StepLogger.step('Go to New ->Opportunity.');
        await HomePageHelper.clickNewLink();
        await HomePageHelper.clickOpportunityUnderNew();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed(false);

        StepLogger.stepId(2);
        StepLogger.step('Verify save button is displayed on the top right corner.');
        StepLogger.verification('It should be displayed.');
        await NewOpportunityPageHelper.verifySaveButtonDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click save button leaving all the fields blank.');
        await NewOpportunityPageHelper.clickSaveButton();
        StepLogger.verification('Validation Error message should be displayed.');
        await NewOpportunityPageHelper.verifyValidationMessageDisplayed();
    });

    // Jira References - COTRAC-3517
    it('To verify user is able to access "New Opportunity" page. - [22967303]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Mar 2019 11:31:15 GMT

        StepLogger.caseId = 22967303;
        StepLogger.stepId(1);
        StepLogger.step('Click "New" in the left panel.');
        await HomePageHelper.clickNewLink();
        StepLogger.verification('Sub menus under new should be displayed.');
        await HomePageHelper.verifyOptionsUnderNew();

        StepLogger.stepId(2);
        StepLogger.step('Verify "Opportunity" is also displayed under New.');
        StepLogger.verification('It should be displayed.');
        await HomePageHelper.verifyOpportunitySubmenuDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click "Opportunity".');
        await HomePageHelper.clickOpportunityUnderNew();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed();
    });

    // Jira References - COTRAC-3515
    it('To verify user is able to access "Manage Products" page. - [22967285]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Mar 2019 11:31:15 GMT

        StepLogger.caseId = 22967285;
        StepLogger.stepId(1);
        StepLogger.step('Click "Administration"');
        await HomePageHelper.clickAdministrationLink();
        StepLogger.verification('Sub menus under administration should be displayed.');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(2);
        StepLogger.step('Click "Configurations"');
        await HomePageHelper.clickConfigurationUnderAdministration();
        StepLogger.verification('Sub menus under configurations should be displayed.');
        await HomePageHelper.verifyOptionsUnderAdministration();

        StepLogger.stepId(3);
        StepLogger.step('Click "Products"');
        await HomePageHelper.clickProductsUnderConfiguration();
        StepLogger.verification('Manage Products should be displayed.');
        await ProductsHelper.verifyProductsManagePageDisplayed();
    });

    // Jira References - COTRAC-3522
    it('To verify validation error message should be displayed when Product is left blank. - [22967324]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Mar 2019 11:31:15 GMT

        StepLogger.caseId = 22967324;
        StepLogger.stepId(1);
        StepLogger.step('Go to New ->Opportunity.');
        await HomePageHelper.clickNewLink();
        await HomePageHelper.clickOpportunityUnderNew();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed(false);

        StepLogger.stepId(2);
        StepLogger.step('Click "search icon" displayed besides Contact field.');
        await NewOpportunityPageHelper.clickSearchContactIcon();
        StepLogger.verification('Contact selector should be displayed.');
        await NewOpportunityPageHelper.verifyContactSelectorModalIsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Enter a search criteria and Click "search contacts".');
        const criteria = 'b';
        await NewOpportunityPageHelper.searchARandomContact(criteria);
        StepLogger.verification('Search results should be displayed.');
        await NewOpportunityPageHelper.verifyContactResultsAreDisplayedFromContactDialog();

        StepLogger.stepId(4);
        StepLogger.step('Select the contact and Click "Use selected contact".');
        const contact = await NewOpportunityPageHelper.getFirstContactDisplayed();
        await NewOpportunityPageHelper.clickUseSelectedContact();
        StepLogger.verification('"Verify Contact leads" dialog should be displayed.');
        await NewOpportunityPageHelper.verifyContactsLeadsModalIsDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click "Return to new".');
        await NewOpportunityPageHelper.clickReturnToNew();
        StepLogger.verification('Contact should be added in Contact field.');
        await NewOpportunityPageHelper.verifyContactHasBeenSelected(contact);

        StepLogger.stepId(6);
        StepLogger.step('Click "select Me" displayed besides owner field.');
        await NewOpportunityPageHelper.clickOnSelectMeIconBesideOwner();
        StepLogger.verification('Logged in user should be entered in owner field.');
        await NewOpportunityPageHelper.verifyOwnerFieldValue(NewOpportunityPageConstant.user.admin);

        StepLogger.stepId(7);
        StepLogger.step('Click "save".');
        await NewOpportunityPageHelper.clickSaveButton();
        StepLogger.verification('Validation Error message should be saved.');
        await NewOpportunityPageHelper.verifyValidationAlertDisplayed();
    });

    // Jira References - COTRAC-3521
    it('To verify validation error message should be displayed when owner is left blank. - [22967322]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Mar 2019 11:31:15 GMT

        StepLogger.caseId = 22967322;
        StepLogger.stepId(1);
        StepLogger.step('Go to New ->Opportunity.');
        await HomePageHelper.clickNewLink();
        await HomePageHelper.clickOpportunityUnderNew();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed(false);

        StepLogger.stepId(2);
        StepLogger.step('Click "search icon" displayed besides Contact field.');
        await NewOpportunityPageHelper.clickSearchContactIcon();
        StepLogger.verification('Contact selector should be displayed.');
        await NewOpportunityPageHelper.verifyContactSelectorModalIsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Enter a search criteria and Click "search contacts".');
        const criteria = 'b';
        await NewOpportunityPageHelper.searchARandomContact(criteria);
        StepLogger.verification('Search results should be displayed.');
        await NewOpportunityPageHelper.verifyContactResultsAreDisplayedFromContactDialog();

        StepLogger.stepId(4);
        StepLogger.step('Select the contact and Click "Use selected contact".');
        const contact = await NewOpportunityPageHelper.getFirstContactDisplayed();
        await NewOpportunityPageHelper.clickUseSelectedContact();
        StepLogger.verification('"Verify Contact leads" dialog should be displayed.');
        await NewOpportunityPageHelper.verifyContactsLeadsModalIsDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click "Return to new".');
        await NewOpportunityPageHelper.clickReturnToNew();
        StepLogger.verification('Contact should be added in Contact field.');
        await NewOpportunityPageHelper.verifyContactHasBeenSelected(contact);

        StepLogger.stepId(6);
        StepLogger.step('Click "save" leaving other fields blank.');
        await NewOpportunityPageHelper.clickSaveButton();
        StepLogger.verification('Validation Error message should be displayed.');
        await NewOpportunityPageHelper.verifyValidationMessageDisplayed();
    });

    // Jira References - COTRAC-3520
    it('To verify that user is able to save an opportunity with generic product. - [22967314]', async () => {
        // Auto generated by aurea-automation - util on Wed, 10 Apr 2019 17:36:34 GMT

        StepLogger.caseId = 22967314;
        StepLogger.stepId(1);
        StepLogger.step('Go to New ->Opportunity.');
        await HomePageHelper.clickNewLink();
        await HomePageHelper.clickOpportunityUnderNew();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed(false);

        StepLogger.stepId(2);
        StepLogger.step('Click "search icon" displayed besides Contact field.');
        await NewOpportunityPageHelper.clickSearchContactIcon();
        StepLogger.verification('Contact selector should be displayed.');
        await NewOpportunityPageHelper.verifyContactSelectorModalIsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Enter a search criteria and Click "search contacts".');
        const criteria = NewOpportunityPageConstant.testData.criteriaB;
        await NewOpportunityPageHelper.searchARandomContact(criteria);
        StepLogger.verification('Search results should be displayed.');
        await NewOpportunityPageHelper.verifyContactResultsAreDisplayedFromContactDialog();

        StepLogger.stepId(4);
        StepLogger.step('Select the contact and Click "Use selected contact".');
        const contact = await NewOpportunityPageHelper.getFirstContactDisplayed();
        await NewOpportunityPageHelper.clickUseSelectedContact();
        StepLogger.verification('"Verify Contact leads" dialog should be displayed.');
        await NewOpportunityPageHelper.verifyContactsLeadsModalIsDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click "Return to new".');
        await NewOpportunityPageHelper.clickReturnToNew();
        StepLogger.verification('Contact should be added in Contact field.');
        await NewOpportunityPageHelper.verifyContactHasBeenSelected(contact);

        StepLogger.stepId(6);
        StepLogger.step('Click "select Me" displayed besides owner field.');
        await NewOpportunityPageHelper.clickOnSelectMeIconBesideOwner();
        StepLogger.verification('Logged in user should be entered in owner field.');
        await NewOpportunityPageHelper.verifyOwnerFieldValue(NewOpportunityPageConstant.user.admin);

        StepLogger.stepId(7);
        StepLogger.step('Check the "Gen" checkbox.');
        await NewOpportunityPageHelper.markGenCkeckbox();
        StepLogger.verification('It should be checked.');
        await NewOpportunityPageHelper.verifyGenCkeckboxMarked();

        StepLogger.stepId(8);
        StepLogger.step('Select the product edited in Pre condition in the Product field.');
        await NewOpportunityPageHelper.selectProduct(
            ProductsConstants.productCategory.emailAddress,
            NewOpportunityPageConstant.testData.validateP1);
        StepLogger.verification('Product should be selected.');
        await NewOpportunityPageHelper.verifySelectedProductName(NewOpportunityPageConstant.testData.validateP1);

        StepLogger.stepId(9);
        StepLogger.step('Click "save".');
        await NewOpportunityPageHelper.clickSaveButton();
        StepLogger.verification('Opportunity with generic product should be saved.');
        await NewOpportunityPageHelper.verifyNewOpportunityIsSaved(NewOpportunityPageConstant.testData.validateP1);
    });

    // Jira References - COTRAC-3524
    it('To verify the functionality of save and add button. - [22967328]', async () => {
        // Auto generated by aurea-automation - util on Wed, 10 Apr 2019 17:36:34 GMT

        StepLogger.caseId = 22967328;
        StepLogger.stepId(1);
        StepLogger.step('Go to New ->Opportunity.');
        await HomePageHelper.clickNewLink();
        await HomePageHelper.clickOpportunityUnderNew();
        StepLogger.verification('"New Opportunity" page should be displayed.');
        await NewOpportunityPageHelper.verifyNewOpportunityPageIsDisplayed(false);

        StepLogger.stepId(2);
        StepLogger.step('Click "search icon" displayed besides Contact field.');
        await NewOpportunityPageHelper.clickSearchContactIcon();
        StepLogger.verification('Contact selector should be displayed.');
        await NewOpportunityPageHelper.verifyContactSelectorModalIsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Enter a search criteria and Click "search contacts".');
        const criteria = NewOpportunityPageConstant.testData.criteriaB;
        await NewOpportunityPageHelper.searchARandomContact(criteria);
        StepLogger.verification('Search results should be displayed.');
        await NewOpportunityPageHelper.verifyContactResultsAreDisplayedFromContactDialog();

        StepLogger.stepId(4);
        StepLogger.step('Select the contact and Click "Use selected contact".');
        const contact = await NewOpportunityPageHelper.getFirstContactDisplayed();
        await NewOpportunityPageHelper.clickUseSelectedContact();
        StepLogger.verification('"Verify Contact leads" dialog should be displayed.');
        await NewOpportunityPageHelper.verifyContactsLeadsModalIsDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click "Return to new".');
        await NewOpportunityPageHelper.clickReturnToNew();
        StepLogger.verification('Contact should be added in Contact field.');
        await NewOpportunityPageHelper.verifyContactHasBeenSelected(contact);

        StepLogger.stepId(6);
        StepLogger.step('Click "select Me" displayed besides owner field.');
        await NewOpportunityPageHelper.clickOnSelectMeIconBesideOwner();
        StepLogger.verification('Logged in user should be entered in owner field.');
        await NewOpportunityPageHelper.verifyOwnerFieldValue(NewOpportunityPageConstant.user.admin);

        StepLogger.stepId(7);
        StepLogger.step('Check the "Gen" checkbox.');
        await NewOpportunityPageHelper.markGenCkeckbox();
        StepLogger.verification('It should be checked.');
        await NewOpportunityPageHelper.verifyGenCkeckboxMarked();

        StepLogger.stepId(8);
        StepLogger.step('Select the product edited in Pre condition in the Product field.');
        await NewOpportunityPageHelper.selectProduct(
            ProductsConstants.productCategory.emailAddress,
            NewOpportunityPageConstant.testData.validateP1);
        StepLogger.verification('Product should be selected.');
        await NewOpportunityPageHelper.verifySelectedProductName(NewOpportunityPageConstant.testData.validateP1);

        StepLogger.stepId(9);
        StepLogger.step('Click "save and add".');
        await NewOpportunityPageHelper.clickSaveAndAddButton();
        StepLogger.verification('Opportunity with generic product should saved and new opportunity page should be displayed.');
        await NewOpportunityPageHelper.verifyOpportunityIsCreatedAndNewOpportunityPageIsDisplayed(contact);
    });
});
