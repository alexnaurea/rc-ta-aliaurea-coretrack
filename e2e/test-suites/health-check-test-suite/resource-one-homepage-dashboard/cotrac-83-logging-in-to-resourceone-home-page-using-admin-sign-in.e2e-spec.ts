import { StepLogger } from '../../../../core/logger/step-logger';
import { AlertHelper } from '../../../components/html/alert-helper';
import { PageHelper } from '../../../components/html/page-helper';
import { CredentialsHelper } from '../../../components/misc-utils/credentials-helper';
import { EndpointHelper } from '../../../components/misc-utils/endpoint-helper';
import { HomePageHelper } from '../../../page-objects/pages/home-page/home-page.helper';
import { HomePage } from '../../../page-objects/pages/home-page/home-page.po';
import { LoginPageHelper } from '../../../page-objects/pages/login-page/login-page.helper';
import { LoginPage } from '../../../page-objects/pages/login-page/login-page.po';
import { SettingsPageHelper } from '../../../page-objects/pages/settings-page/settings-page.helper';
import { SettingsPage } from '../../../page-objects/pages/settings-page/settings-page.po';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.healthCheckSuite, () => {
    let loginPageHelper: LoginPageHelper;
    const user = CredentialsHelper.admin;
    const random = PageHelper.getUniqueId();

    beforeAll(async () => {
        loginPageHelper = LoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.restartBrowser();
    });

    // Jira References - COTRAC-83
    it('To verify the login page of the application. - [22931942]', async () => {
        // Auto generated by aurea-automation - util on Tue, 05 Feb 2019 16:53:06 GMT

        StepLogger.caseId = 22931942;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        // this step is covered in step 2

        StepLogger.stepId(2);
        StepLogger.step('Verify that username text box is displayed.');
        StepLogger.verification('It should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(3);
        StepLogger.step('Verify that password text box is displayed.');
        StepLogger.verification('It should be displayed.');
        await LoginPage.loginForm.password.verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Verify the application version is displayed.');
        StepLogger.verification('It should be displayed.');
        await LoginPage.loginForm.environment.verifyDisplayedStatus();

        StepLogger.stepId(5);
        StepLogger.step('Verify the language is displayed.');
        StepLogger.verification('It should be displayed.');
        await LoginPage.loginForm.language.verifyDisplayedStatus();

        StepLogger.stepId(6);
        StepLogger.step('Verify Sign in button is displayed.');
        StepLogger.verification('It should be displayed.');
        await LoginPage.loginForm.signIn.verifyDisplayedStatus();

        StepLogger.stepId(7);
        StepLogger.step('Verify that setting option is available as a gear icon at the bottom.');
        StepLogger.verification('It should be displayed.');
        await LoginPage.loginForm.settings.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-83
    it('To verify the setting page. - [22931948]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Feb 2019 13:22:48 GMT

        StepLogger.caseId = 22931948;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click on the gear icon displayed at the bottom.');
        await LoginPage.loginForm.settings.clickButton();
        StepLogger.verification('Setting page should be displayed.');
        await SettingsPage.form.url.verifyDisplayedStatus();

        StepLogger.stepId(3);
        StepLogger.step('Verify the options available on the settings page.');
        StepLogger.verification(`Settings should display the following options :
            1. url of the page
            2. back button
            3. save button`);
        await SettingsPageHelper.verifyFieldsDisplayed();
    });

    // Jira References - COTRAC-83
    it('To verify that username field is highlighted in red when it is left blank and sign in is clicked. - [22932053]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Feb 2019 13:27:17 GMT

        StepLogger.caseId = 22932053;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Leave the user name field blank.');
        StepLogger.verification('It should be left blank.');
        await LoginPage.loginForm.username.clearText();

        StepLogger.stepId(3);
        StepLogger.step('Click "sign in".');
        await LoginPage.loginForm.signIn.clickButton();
        StepLogger.verification('Username field should be highlighted in red.');
        await LoginPageHelper.verifyUsernameBoxHighlightedInRed();
    });

    // Jira References - COTRAC-83
    it('To verify that error message is displayed when password field is left blank. - [22932051]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Feb 2019 13:50:23 GMT

        StepLogger.caseId = 22932051;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Enter username.');
        await LoginPage.loginForm.username.sendKeys(user.username);
        StepLogger.verification('Username should be entered.');
        await LoginPage.loginForm.username.verifyTextEntered(user.username);

        StepLogger.stepId(3);
        StepLogger.step('Click Sign in button leaving password field blank.');
        await LoginPage.loginForm.signIn.clickButton();
        StepLogger.verification('Validation Error message should be displayed.');
        await LoginPage.popUpModal.pleaseFillAllFields.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-83
    it('To verify that user is unable to access the application with incorrect username. - [22931943]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Feb 2019 01:06:11 GMT

        StepLogger.caseId = 22931943;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Enter an incorrect username.');
        await LoginPage.loginForm.username.sendKeys(random);
        StepLogger.verification('It should be entered.');
        await LoginPage.loginForm.username.verifyTextEntered(random);

        StepLogger.stepId(3);
        StepLogger.step('Enter password.');
        await LoginPage.loginForm.password.sendKeys(user.password);
        StepLogger.verification('It should be entered.');
        await LoginPage.loginForm.password.verifyTextEntered(user.password);

        StepLogger.stepId(4);
        StepLogger.step('Click "Sign in" button.');
        await LoginPage.loginForm.signIn.clickButton();
        StepLogger.verification('Validation Error message should be displayed.');
        await LoginPage.popUpModal.incorrectLoginPassword.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-83
    it('To verify that user is unable to access the application with incorrect password. - [22931944]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Feb 2019 01:09:39 GMT

        StepLogger.caseId = 22931944;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Enter an correct username.');
        await LoginPage.loginForm.username.sendKeys(user.username);
        StepLogger.verification('It should be entered.');
        await LoginPage.loginForm.username.verifyTextEntered(user.username);

        StepLogger.stepId(3);
        StepLogger.step('Enter incorrect password.');
        await LoginPage.loginForm.password.sendKeys(random);
        StepLogger.verification('It should be entered.');
        await LoginPage.loginForm.password.verifyTextEntered(random);

        StepLogger.stepId(4);
        StepLogger.step('Click "Sign in" button.');
        await LoginPage.loginForm.signIn.clickButton();
        StepLogger.verification('Validation Error message should be displayed.');
        await LoginPage.popUpModal.incorrectLoginPassword.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-83
    it('To verify that user is able to login with correct user name and password. - [22931946]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Feb 2019 01:12:17 GMT

        StepLogger.caseId = 22931946;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Enter an correct username.');
        await LoginPage.loginForm.username.sendKeys(user.username);
        StepLogger.verification('It should be entered.');
        await LoginPage.loginForm.username.verifyTextEntered(user.username);

        StepLogger.stepId(3);
        StepLogger.step('Enter password.');
        await LoginPage.loginForm.password.sendKeys(user.password);
        StepLogger.verification('It should be entered.');
        await LoginPage.loginForm.password.verifyTextEntered(user.password);

        StepLogger.stepId(4);
        StepLogger.step('Click "sign in " button.');
        await LoginPage.loginForm.signIn.clickButton();
        StepLogger.verification('User should be able to log in successfully.');
        await HomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(5);
        StepLogger.step('Verify the landing page of the application.');
        StepLogger.verification('Action center should be displayed.');
        await HomePage.pageTitle.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-83
    it('To verify that user can hide left panel menu items. - [22931952]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Feb 2019 01:14:43 GMT

        StepLogger.caseId = 22931952;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Enter an correct username and password');
        StepLogger.verification('It should be entered.');
        // implemented in step 3

        StepLogger.stepId(3);
        StepLogger.step('Click "sign in " button.');
        await LoginPageHelper.enterLoginInformation(user);
        StepLogger.verification('User should be able to log in successfully.');
        await HomePage.pageTitle.verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Click on the top left side of the screen, on the button next to RESOURCEONE');
        await HomePage.hamburgerIcon.clickButton();
        StepLogger.verification('Left panel menu buttons should hide and only icons should remain.');
        await HomePage.sidebar.collapsed.home.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-83
    it('To verify that user can expand the left panel menu items. - [22931953]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Feb 2019 01:23:32 GMT

        StepLogger.caseId = 22931953;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Enter an correct username and password');
        StepLogger.verification('It should be entered.');
        // implemented in step 3

        StepLogger.stepId(3);
        StepLogger.step('Click "sign in " button.');
        await LoginPageHelper.enterLoginInformation(user);
        StepLogger.verification('User should be able to log in successfully.');
        await HomePage.pageTitle.verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Click on the top left side of the screen, on the button(three horizontal lines) next to RESOURCEONE');
        await HomePage.hamburgerIcon.clickButton();
        StepLogger.verification('Left panel menu buttons should hide and only icons should remain.');
        await HomePage.sidebar.collapsed.home.verifyDisplayedStatus();

        StepLogger.stepId(5);
        StepLogger.step('Click again on the top left side of the screen, on the button(three horizontal lines) next to RESOURCEONE');
        await HomePage.hamburgerIcon.clickButton();
        StepLogger.verification('Left panel menu buttons should show with their icons and text');
        await HomePage.sidebar.expanded.home.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-83
    it('To verify the information available when user clicks username displayed on top right hand side of screen. - [22931955]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Feb 2019 01:27:33 GMT

        StepLogger.caseId = 22931955;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step(`Enter an correct username and password.
            Click "sign in " button.`);
        await LoginPageHelper.enterLoginInformation(user);
        StepLogger.verification('User should be able to log in successfully.');
        await HomePage.pageTitle.verifyDisplayedStatus();

        StepLogger.stepId(3);
        StepLogger.step('Click on the the user"s name top-right side of the screen.');
        await HomePage.toolbar.username.clickButton();
        StepLogger.verification(`It should display the following information :
            1. Environment
            2. Session Time
            3. About
            4. Sign off`);
        await HomePageHelper.verifyUserOptions();
    });

    // Jira References - COTRAC-83
    it('To verify that user is able to sign out by clicking sign off on top right corner of screen. - [22931967]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Feb 2019 01:39:36 GMT

        StepLogger.caseId = 22931967;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step(`Enter an correct username and password.
            Click "sign in " button.`);
        await LoginPageHelper.enterLoginInformation(user);
        StepLogger.verification('User should be able to log in successfully.');
        await HomePage.pageTitle.verifyDisplayedStatus();

        StepLogger.stepId(3);
        StepLogger.step('Click on the the user"s name top-right side of the screen.');
        await HomePage.toolbar.username.clickButton();
        StepLogger.verification(`It should display the following information :
            1. Environment
            2. Session Time
            3. About
            4. Sign off`);
        await HomePageHelper.verifyUserOptions();

        StepLogger.stepId(4);
        StepLogger.step('Click "sign off".');
        await HomePage.toolbar.signOff.clickLink();
        await AlertHelper.acceptAlertIfExists();
        StepLogger.verification('User should be logged out.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();
    });

    // Jira References - COTRAC-83
    it('To verify the user is able to Sign out by clicking SignOff button on down left side of the screen. - [22931970]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Feb 2019 01:42:46 GMT

        StepLogger.caseId = 22931970;
        StepLogger.stepId(1);
        StepLogger.step(`Go to Resource One URL : ${EndpointHelper.login}`);
        await loginPageHelper.goTo();
        StepLogger.verification('Login page should be displayed.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step(`Enter an correct username and password.
            Click "sign in " button.`);
        await LoginPageHelper.enterLoginInformation(user);
        StepLogger.verification('User should be able to log in successfully.');
        await HomePage.pageTitle.verifyDisplayedStatus();

        StepLogger.stepId(3);
        StepLogger.step('Click SignOff button on down left side of the screen');
        await HomePage.sidebar.expanded.signOff.clickButton();
        await AlertHelper.acceptAlertIfExists();
        StepLogger.verification('User should be logged out.');
        await LoginPage.loginForm.username.verifyDisplayedStatus();
    });
});
